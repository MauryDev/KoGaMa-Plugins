local a=import("Helper.lua")local b=a.AssemblyInfo;local c=function(d,e)if e then return function(...)return Il2Cpp.Runtime.Invoke(d,nil,{...},function(f)print("Error")end)end else return function(g,...)return Il2Cpp.Runtime.Invoke(d,g,{...},function(f)print("Error")end)end end end;local h=function(i,e)if e then return{["get"]=function()return i:GetValueObject(Il2Cpp.Object.FromAny(nil))end,["set"]=function(j)i:StaticSetValue(j)end}else return{["get"]=function(k)return i:GetValueObject(k)end,["set"]=function(k,j)i:SetValue(k,j)end}end end;local l=function(d)return Il2Cpp.Primitives.GetPointer(d.Pointer)end;local m=Il2Cpp.Primitives;local n={["jump"]=function(o,p)local q=p-o-5;local r=ByteArray(4)m.SetInt(r,q)return r end}local s=function()local t=Il2Cpp.Domain.MainDomain;local u=t:AssemblyOpen("UnityEngine.CoreModule.dll")local v=u.Image;local w={}do local x=Il2Cpp.Class.FromName(v,"UnityEngine","Time")local y=x:GetMethodFromName("get_deltaTime",0)w["UnityEngine.Time.get_deltaTime"]=c(y,true)end;do local z=Il2Cpp.Class.FromName(v,"UnityEngine","Application")local A=z:GetMethodFromName("set_targetFrameRate",1)w["UnityEngine.Application.set_targetFrameRate"]=c(A,true)local B=z:GetMethodFromName("get_version",0)w["UnityEngine.Application.get_version"]=c(B,true)end;do local C=Il2Cpp.Class.FromName(v,"UnityEngine","Camera")local D=C:GetMethodFromName("set_aspect",1)local E=C:GetMethodFromName("get_main",0)local F=C:GetMethodFromName("set_farClipPlane",1)w["UnityEngine.Application.set_aspect"]=c(D,false)w["UnityEngine.Application.get_main"]=c(E,true)w["UnityEngine.Application.set_farClipPlane"]=c(F,false)end;do local G=Il2Cpp.Class.FromName(v,"UnityEngine","Sprite")local H=G:GetMethodFromName("Create",3)w["UnityEngine.Sprite.Create"]=c(H,true)local I=G:GetMethodFromName("get_rect",0)w["UnityEngine.Sprite.get_rect"]=c(I,false)local J=G:GetMethodFromName("get_pivot",0)w["UnityEngine.Sprite.get_pivot"]=c(J,false)end;return w end;local K=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local w={}do local N=Il2Cpp.Class.FromName(M,"","MVGameControllerBase")local O=N:GetMethodFromName("get_Game",0)w["MVGameControllerBase.get_Game"]=c(O,true)local P=N:GetMethodFromName("get_GameMode",0)w["MVGameControllerBase.get_GameMode"]=c(P,true)local Q=N:GetMethodFromName("get_EditModeUI",0)w["MVGameControllerBase.get_EditModeUI"]=c(Q,true)local R=N:GetMethodFromName("get_WOCM",0)w["MVGameControllerBase.get_WOCM"]=c(R,true)local S=N:GetMethodFromName("get_OperationRequests",0)w["MVGameControllerBase.get_OperationRequests"]=c(S,true)local Q=N:GetMethodFromName("get_PlayModeUI",0)w["MVGameControllerBase.get_PlayModeUI"]=c(Q,true)local T=N:GetMethodFromName("get_MaterialLoader",0)w["MVGameControllerBase.get_MaterialLoader"]=c(T,true)end;do local U=Il2Cpp.Class.FromName(M,"","MaterialLoader")local V=U:GetMethodFromName("SetMainTexture",1)w["MaterialLoader.SetMainTexture"]=c(V,false)local W=U:GetMethodFromName("SetupMaterials",0)w["MaterialLoader.SetupMaterials"]=c(W,false)end;do local X=Il2Cpp.Class.FromName(M,"","MVNetworkGame")local Y=X:GetMethodFromName("get_Peer",0)w["MVNetworkGame.get_Peer"]=c(Y,false)end;do local Z=Il2Cpp.Class.FromName(M,"","TextCommand")local _=Z:GetMethodFromName("NotifyUser",1)w["TextCommand.NotifyUser"]=c(_,true)end;do local a0=Il2Cpp.Class.FromName(M,"","ThemeRepository")local a1=a0:GetMethodFromName("get_Instance",0)local a2=a0:GetMethodFromName("get_CurrentThemeVisualization",0)local a3=a0:GetMethodFromName("DestroyTemporary",1)local a4=a0:GetMethodFromName("CreateTemporaryThemeVisualization",1)w["ThemeRepository.get_Instance"]=c(a1,true)w["ThemeRepository.get_CurrentThemeVisualization"]=c(a2,false)w["ThemeRepository.DestroyTemporary"]=c(a3,false)w["ThemeRepository.CreateTemporaryThemeVisualization"]=c(a4,false)end;do local a5=Il2Cpp.Class.FromName(M,"","Theme")local a6=a5:GetMethodFromName("Activate",0)local a7=a5:GetMethodFromName("Deactivate",0)w["Theme.Activate"]=c(a6,false)w["Theme.Deactivate"]=c(a7,false)end;do local a8=Il2Cpp.Class.FromName(M,"","AvatarEditModeBodyController")local a9=a8:GetFieldFromName("Theme")w["AvatarEditModeBodyController.Theme"]=h(a9,true)end;do local aa=Il2Cpp.Class.FromName(M,"","AwayMonitor")local ab=aa:GetFieldFromName("instance")local ac=aa:GetFieldFromName("idleKickEnabled")w["AwayMonitor.instance"]=h(ab,true)w["AwayMonitor.idleKickEnabled"]=h(ac,false)end;do local ad=Il2Cpp.Class.FromName(M,"","DesktopEditModeController")local ae=ad:GetFieldFromName("contextMenuController")w["DesktopEditModeController.contextMenuController"]=h(ae,false)end;do local af=Il2Cpp.Class.FromName(M,"","ContextMenuController")local ag=af:GetFieldFromName("woID")w["ContextMenuController.woID"]=h(ag,false)end;do local ah=Il2Cpp.Class.FromName(M,"","MVWorldObjectClientManager")local ai=ah:GetMethodFromName("GetWorldObject",1)w["MVWorldObjectClientManager.GetWorldObject"]=c(ai,false)end;do local aj=Il2Cpp.Class.FromName(M,"","MVCubeModelBase")local ak=aj:GetMethodFromName("get_Pid",0)w["MVCubeModelBase.get_Pid"]=c(ak,false)end;do local al=Il2Cpp.Class.FromName(M,"","DesktopPlayModeController")local am=al:GetMethodFromName("GetCrossHair",0)w["DesktopPlayModeController.GetCrossHair"]=c(am,false)end;do local an=Il2Cpp.Class.FromName(M,"","CrossHair")local ao=an:GetFieldFromName("crossHair")w["CrossHair.crossHair"]=h(ao,false)end;do local ap=Il2Cpp.Class.FromName(M,"","CrossHair")local aq=ap:GetFieldFromName("crossHair")w["CrossHair.crossHair"]=h(aq,false)end;return w end;local ar=function()local t=Il2Cpp.Domain.MainDomain;local as=t:AssemblyOpen("UnityEngine.UI.dll")local at=as.Image;local w={}do local au=Il2Cpp.Class.FromName(at,"UnityEngine.UI","Image")local av=au:GetMethodFromName("set_sprite",1)w["UnityEngine.UI.Image.set_sprite"]=c(av,false)local aw=au:GetMethodFromName("get_sprite",0)w["UnityEngine.UI.Image.get_sprite"]=c(aw,false)end;return w end;local ax=function()local t=Il2Cpp.Domain.MainDomain;local ay=t:AssemblyOpen("UnityEngine.UnityWebRequestModule.dll")local az=ay.Image;local aA=t:AssemblyOpen("UnityEngine.UnityWebRequestTextureModule.dll")local aB=aA.Image;local w={}do local aC=Il2Cpp.Class.FromName(az,"UnityEngine.Networking","UnityWebRequest")local aD=aC:GetMethodFromName("Get",1)local aE=aC:GetMethodFromName("get_isDone",0)local aF=aC:GetMethodFromName("SendWebRequest",0)local aG=aC:GetMethodFromName("get_downloadHandler",0)w["UnityEngine.Networking.UnityWebRequest.Get"]=c(aD,true)w["UnityEngine.Networking.UnityWebRequest.get_isDone"]=c(aE,false)w["UnityEngine.Networking.UnityWebRequest.SendWebRequest"]=c(aF,false)w["UnityEngine.Networking.UnityWebRequest.get_downloadHandler"]=c(aG,false)end;do local aH=Il2Cpp.Class.FromName(az,"UnityEngine.Networking","DownloadHandler")local aI=aH:GetMethodFromName("get_text",0)w["UnityEngine.Networking.DownloadHandler.get_text"]=c(aI,false)end;do local aJ=Il2Cpp.Class.FromName(aB,"UnityEngine.Networking","DownloadHandlerTexture")local aK=aJ:GetMethodFromName("GetContent",1)w["UnityEngine.Networking.DownloadHandler.GetContent"]=c(aK,true)end;do local aL=Il2Cpp.Class.FromName(aB,"UnityEngine.Networking","UnityWebRequestTexture")local aM=aL:GetMethodFromName("GetTexture",2)w["UnityEngine.Networking.UnityWebRequestTexture.GetTexture"]=c(aM,true)end;return w end;local aN=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local aO=Il2Cpp.get_Corlib()local u=t:AssemblyOpen("UnityEngine.CoreModule.dll")local v=u.Image;local aP=Il2Cpp.Class.FromName(M,"","MVInputWrapper")local aQ=aP:GetFieldFromName("inputMap")local aR=Il2Cpp.Class.FromName(M,"","DesktopPlayMode")local aS=aR:GetFieldFromName("keyMapping")local aT=Il2Cpp.Class.FromType(aS.Type)local aU=aT:GetMethodFromName("get_Item",1)local aV=Il2Cpp.Class.FromName(aO,"System","Enum")local aW=aV:GetMethodFromName("Parse",2)local aX=Il2Cpp.Class.FromName(M,"","KogamaControls")local aY=Il2Cpp.Class.FromName(v,"UnityEngine","KeyCode")local aZ={}aZ["MVInputWrapper.inputMap"]=h(aQ,true)aZ["DesktopPlayMode.keyMapping"]=h(aS,false)aZ["Dictionary.get_Item"]=c(aU,false)aZ["Enum.Parse"]=c(aW,true)local a_={["comboxbox_keybind1"]={["Items"]={"Jump","MoveForward","MoveBackwards","MoveLeft","MoveRight","Fire"},["SelectItem"]="Jump",["SelectIndex"]=0},["textinput_keybind1"]={["Text"]=""}}return{["OnGUI"]=function(self)local b0=a_["comboxbox_keybind1"]local b1=a_["textinput_keybind1"]GUI.ComboBox("##comboxbox_keybind1",b0)GUI.TextInput("##textinput_keybind1",b1)if GUI.Button("Change##button_keybind1")then self.Keybind(b0.SelectItem,b1.Text)end end,["Keybind"]=function(b2,b3)local b4=aZ["MVInputWrapper.inputMap"].get()local b5=aZ["DesktopPlayMode.keyMapping"].get(b4)local b6=aZ["Enum.Parse"](aX.Type.Object,Il2Cpp.String(b2))local b7=aZ["Enum.Parse"](aY.Type.Object,Il2Cpp.String(b3))local b8=aZ["Dictionary.get_Item"](b5,b6.Unbox)Il2Cpp.Primitives.SetInt(b8.Pointer+0x10,Il2Cpp.Primitives.GetInt(b7.Unbox))end}end;local b9=function(ba)local bb=nil;Il2Cpp.RegisterInOneUpdate(function()bb=ba["UnityEngine.Application.get_main"]()end)local a_={["inputfloat_customdrawdistance1"]={["Value"]=400.0,["Style.Width"]=70,["Format"]="%.2f"}}return{["OnGUI"]=function(self)local bc=a_.inputfloat_customdrawdistance1;GUI.Label("Custom Draw Distance")GUI.SameLine()GUI.InputFloat("##inputfloat_customdrawdistance1",bc)GUI.SameLine()if GUI.Button("OK##button_customdrawdistance1")then self.Callback(bc.Value)end end,["Callback"]=function(j)ba["UnityEngine.Application.set_farClipPlane"](bb,m.NewFloat(j))end}end;local bd=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local an=Il2Cpp.Class.FromName(M,"","CrossHair")local be=an:GetMethodFromName("UpdateCrossHair",1)local bf=l(be)local bg=bf+0x56;local bh=ByteArray({0x55,0x8B,0xEC,0xB8,0x00,0x00,0x00,0x00,0xC9,0xC3,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3F})local bi=Process.Alloc(nil,bh.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)m.SetInt(bh.Pointer+0x04,bi:ToInt()+0x0A)Process.WriteMemory(bi,bh)local bj={ByteArray({0x8B,0x88,0xEC,0x00,0x00,0x00}),ByteArray({0xB9,0x00,0x00,0x00,0x00,0x90})}m.SetInt(bj[2].Pointer+0x01,bi:ToInt())local a_={["coloredit4_customcrosshaircolor1"]={["Color"]=GUI.Color(0,1,0,1),["Style.Width"]=120},["checkbox_customcrosshaircolor1"]={["Checked"]=false}}return{["OnGUI"]=function(self)local bk=a_.coloredit4_customcrosshaircolor1;local bl=a_.coloredit4_customcrosshaircolor1;GUI.CheckBox("##checkbox_customcrosshaircolor1",bl)GUI.SameLine()GUI.Label("Custom Color CrossHair")if bl.Clicked then self.Callback(bl.Checked,nil)end;if bl.Checked then GUI.ColorEdit4("##coloredit4_customcrosshaircolor1",bk)if bk.Changed then self.Callback(nil,bk.Color)end end end,["Callback"]=function(bm,bn)if bm~=nil then if bm then Process.WriteMemory(bg,bj[2])else Process.WriteMemory(bg,bj[1])end end;if bn~=nil then local bo=bi+0x0A;m.SetFloat(bo,bn.R)m.SetFloat(bo+4,bn.G)m.SetFloat(bo+8,bn.B)m.SetFloat(bo+12,bn.A)end end}end;local bp=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local as=t:AssemblyOpen("UnityEngine.UI.dll")local at=as.Image;local bq=Il2Cpp.Class.FromName(at,"UnityEngine.UI","InputField")local br=Il2Cpp.Class.FromName(M,"","SettingsSlider")local bs=Il2Cpp.Class.FromName(M,"","SettingsInputFieldSlider")local bt=Il2Cpp.Class.FromName(M,"","SettingsInputField")local bu=bt:GetMethodFromName("Initialize",2)local bv=bq:GetMethodFromName("set_text",1)local bw=bq:GetMethodFromName("set_characterLimit",1)local bx=bs.Methods;local by=nil;local bz=nil;for bA,d in pairs(bx)do if d.ParamCount==2 and d.Name=="Initialize"then local bB=d:GetParam(1).Name;if bB=="System.Single"then by=d elseif bB=="System.Int32"then bz=d end end end;local bC=br.Methods;local bD=nil;local bE=nil;for bA,d in pairs(bC)do if d.ParamCount==4 and d.Name=="Initialize"then local bB=d:GetParam(1).Name;if bB=="System.Single"then bD=d elseif bB=="System.Int32"then bE=d end end end;local bF=l(bE)+0x2A;local bG=l(bD)+0x27;local bH=l(bE)+0x4A;local bI=l(bD)+0x44;local bJ=l(bv)local bK=l(bw)local bL=l(bu)+0x59;local bM=l(by)+0xA2;local bN=l(bz)+0xA5;local bO={ByteArray({0x68,0x00,0x50,0xC3,0x47,0x90}),ByteArray({0x51,0xF3,0x0F,0x11,0x04,0x24}),ByteArray({0x68,0x00,0x00,0x00,0x00,0x90})}local bP=ByteArray({0x55,0x89,0xE5,0xFF,0x75,0x0C,0xFF,0x75,0x08,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x08,0x68,0xE8,0x03,0x00,0x00,0xFF,0x75,0x08,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x08,0xC9,0xC3})local bi=Process.Alloc(nil,bP.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local bQ=bi+0x9;local bR=bi+0x19;bP:SetFromByteArray(0xA,n.jump(bQ:ToInt(),bJ:ToInt()))bP:SetFromByteArray(0x1A,n.jump(bR:ToInt(),bK:ToInt()))local bS={n.jump(bL:ToInt(),bi:ToInt()),n.jump(bM:ToInt(),bi:ToInt()),n.jump(bN:ToInt(),bi:ToInt()),n.jump(bL:ToInt(),bJ:ToInt()),n.jump(bM:ToInt(),bJ:ToInt()),n.jump(bN:ToInt(),bJ:ToInt())}Process.WriteMemory(bi,bP)local a_={["unlimitconfig_checkbox1"]={["Checked"]=false},["unlimitconfig_input1"]={["Value"]=100000,["Style.Width"]=70,["Format"]="%.2f"},["unlimitconfig_input2"]={["Value"]=0,["Style.Width"]=70,["Format"]="%.2f"}}return{["OnGUI"]=function(self)local bT=a_.unlimitconfig_checkbox1;local bU=a_.unlimitconfig_input1;local bV=a_.unlimitconfig_input2;GUI.CheckBox("##unlimitconfig_checkbox1",bT)GUI.SameLine()GUI.Label("Unlimited Config")if bT.Clicked then self.Callback(bT.Checked,nil,nil)end;if bT.Checked then GUI.Label("Max Value")GUI.SameLine()GUI.InputFloat("##unlimitconfig_input1",bU)GUI.Label("Min Value")GUI.SameLine()GUI.InputFloat("##unlimitconfig_input2",bV)if bU.Changed or bV.Changed then self.Callback(bT.Checked,bU.Value,bV.Value)end end end,["Callback"]=function(bm,bW,bX)if bW~=nil then Il2Cpp.Primitives.SetFloat(bO[1].Pointer+1,bW)end;if bX~=nil then Il2Cpp.Primitives.SetFloat(bO[3].Pointer+1,bX)end;if bm then Process.WriteMemory(bF,bO[1])Process.WriteMemory(bG,bO[1])Process.WriteMemory(bH,bO[3])Process.WriteMemory(bI,bO[3])Process.WriteMemory(bL+1,bS[1])Process.WriteMemory(bM+1,bS[2])Process.WriteMemory(bN+1,bS[3])else Process.WriteMemory(bL+1,bS[4])Process.WriteMemory(bM+1,bS[5])Process.WriteMemory(bN+1,bS[6])Process.WriteMemory(bF,bO[2])Process.WriteMemory(bG,bO[2])Process.WriteMemory(bH,bO[2])Process.WriteMemory(bI,bO[2])end end}end;local function bY()local L=b["Assembly-CSharp"]()local bZ=b.FromName("UnityEngine.InputLegacyModule.dll")local b_=L.GetClass("","MVGameControllerBase")local c0=L.GetClass("","MVGameControllerDesktop")local c1=bZ.GetClass("UnityEngine","Input")local c2=L.GetClass("","MVInputWrapper")local c3=false;local c4=false;local a_={["checkbox1_colorpick"]={["Checked"]=false}}return{["Invoke"]=function()local c5=b_.GetProperty("GameMode").get()local c6=nil;if c5==0 then local c7=b_.GetProperty("EditModeUI").get()local c8=c7.Cast()c6=c8.GetProperty("EditModeStateMachine").get()elseif c5==2 then local g=c0.GetProperty("Instance").get()local c9=g.GetValue("modeController")local ca=c9.Cast()c6=ca.GetValue("editorStateMachine")end;if c6~=nil then local cb=c6.GetValue("cubeModelingStateMachine")local cc=cb.GetProperty("TargetCubeModel").get()if cc~=nil then local cd=cb.GetMethod("DoPicking")()if cd~=nil then local ce=cd.GetValue("pickedFace")local cf=cd.GetValue("cube")local cg=cf.GetValue("faceMaterials")local ch=cg.GetMethod("GetValue",{"int"})(ce)local ci=ch.Cast()cb.GetProperty("CurrentMaterialId").set(ci)end end end end,["Callback"]=function(self)local cj=a_.checkbox1_colorpick;if cj.Checked then if c2.GetProperty("IsAllInputSuppressed").get()==false then local ck=c1.GetMethod("GetKey",{"UnityEngine.KeyCode"})(325)if c3~=ck then c3=ck;c4=true end;if c4 and ck then self.Invoke()end end;c4=false elseif cj.Clicked and not cj.Checked then c4=false;c3=false end end,["OnGUI"]=function(self)local cj=a_["checkbox1_colorpick"]GUI.CheckBox("##checkbox1_colorpick",cj)GUI.SameLine()GUI.Label("Color Pick (Mouse 3)")end}end;local function cl()local L=b["Assembly-CSharp"]()local bZ=b.FromName("UnityEngine.InputLegacyModule.dll")local b_=L.GetClass("","MVGameControllerBase")local c0=L.GetClass("","MVGameControllerDesktop")local c2=L.GetClass("","MVInputWrapper")local c1=bZ.GetClass("UnityEngine","Input")local c3=false;local c4=false;local cm={["checkbox1_activeUiHotkey"]={["Checked"]=true}}return{["Invoke"]=function()local c5=b_.GetProperty("GameMode").get()if c5==0 then local c7=b_.GetProperty("EditModeUI").get()local c8=c7.Cast()local cn=c8.GetProperty("IsInPlayInEditMode").get()if not cn then local co=c8.GetProperty("gameObject").get()local cp=co.GetProperty("activeSelf").get()co.GetMethod("SetActive",{"bool"})(not cp)else local cq=b_.GetProperty("PlayModeUI").get()local cr=cq.Cast()local co=cr.GetProperty("gameObject").get()local cp=co.GetProperty("activeSelf").get()co.GetMethod("SetActive",{"bool"})(not cp)end elseif c5==1 then local cq=b_.GetProperty("PlayModeUI").get()local cr=cq.Cast()local co=cr.GetProperty("gameObject").get()local cp=co.GetProperty("activeSelf").get()co.GetMethod("SetActive",{"bool"})(not cp)elseif c5==2 then local g=c0.GetProperty("Instance").get()local c9=g.GetValue("modeController")local ca=c9.Cast()local co=ca.GetProperty("gameObject").get()local cp=co.GetProperty("activeSelf").get()co.GetMethod("SetActive",{"bool"})(not cp)end end,["Callback"]=function(self)local cs=cm.checkbox1_activeUiHotkey;if cs.Checked then if c2.GetProperty("IsAllInputSuppressed").get()==false then local ck=c1.GetMethod("GetKey",{"UnityEngine.KeyCode"})(106)if c3~=ck then c3=ck;c4=true end;if c4 and ck then self.Invoke()end end;c4=false elseif cs.Clicked and not cs.Checked then c4=false;c3=false end end,["OnGUI"]=function(self)local cs=cm.checkbox1_activeUiHotkey;GUI.CheckBox("##checkbox1_activeUiHotkey",cs)GUI.SameLine()GUI.Label("Toggle UI (J)")end}end;local function ct()local cu=b["Assembly-CSharp"]()local cv=b["UnityEngine.CoreModule"]()local bZ=b.FromName("UnityEngine.InputLegacyModule.dll")local cw=cv.GetClass("UnityEngine","Screen")local cx=cu.GetClass("","FullScreenController")local c1=bZ.GetClass("UnityEngine","Input")local c2=cu.GetClass("","MVInputWrapper")local c3=false;local c4=false;local a_={["checkbox1_fullScreenHotkey"]={["Checked"]=false}}return{["Invoke"]=function()local cy=cw.GetProperty("fullScreen").get()cx.GetProperty("FullScreen").set(not cy)end,["Callback"]=function(self)local cz=a_.checkbox1_fullScreenHotkey;if cz.Checked then if c2.GetProperty("IsAllInputSuppressed").get()==false then local ck=c1.GetMethod("GetKey",{"UnityEngine.KeyCode"})(292)if c3~=ck then c3=ck;c4=true end;if c4 and ck then self.Invoke()end end;c4=false elseif cz.Clicked and not cz.Checked then c4=false;c3=false end end,["OnGUI"]=function(self)local cz=a_["checkbox1_fullScreenHotkey"]GUI.CheckBox("##checkbox1_fullScreen",cz)GUI.SameLine()GUI.Label("Toggle FullScreen (F11)")end}end;local function cA()local L=b["Assembly-CSharp"]()local b_=L.GetClass("","MVGameControllerBase")local cB=L.GetClass("","ThemeRepository")local cC=L.GetClass("","AvatarEditModeBodyController")local cD=nil;local a_={["checkbox1_themeUtils"]={["Checked"]=true},["button1_themeUtils"]={},["button2_themeUtils"]={},["comboxbox1_themeUtils"]={["Items"]={"Current","RoundSquare","Normal","Christmas","Puzzle","Scary","BoxPumpkin","RoundCircleSkull","Cartoon","Triangles","Pumpkin","Animals","Heart","SquareSkull","BoxHalloween","RoundSkull","BoxSkull","Candy","Square","RoundBoxSkull","RoundSquareSkull","Cloudy"},["SelectItem"]="Current",["SelectIndex"]=0}}return{["EnableTheme"]=function(bm)local c5=b_.GetProperty("GameMode").get()if c5~=2 then local cE=cB.GetProperty("Instance").get()local cF=cE.GetProperty("CurrentThemeVisualization").get()if cF~=nil then if bm then cF.GetMethod("Activate")()else cF.GetMethod("Deactivate")()end end else local cG=cC.GetValue("Theme")if cG~=nil then if bm then cG.GetMethod("Activate")()else cG.GetMethod("Deactivate")()end end end end,["CreateThemePreview"]=function(bB)local c5=b_.GetProperty("GameMode").get()if c5~=2 then local cE=cB.GetProperty("Instance").get()if cD~=nil then cE.GetMethod("DestroyTemporary",{"Theme"})(cD)cD=nil end;if bB~="Current"then cD=cE.GetMethod("CreateTemporaryThemeVisualization",{"string"})(bB)local cH=cD.Cast()end else end end,["SetupThemePreview"]=function(cI,j)if cD~=nil then local cH=cD.Cast()if cI=="dayNightCycle"then cH.GetMethod("ToggleDayNightCycle",{"bool"})(j)elseif cI=="useServerTime"then cH.GetMethod("ToggleDayNightCycleUseServerTime",{"bool"})(j)end end end,["GetInfoTheme"]=function(cI,cJ)if cD~=nil then local cH=cD.Cast()if cI=="dayNightCycle"then local cK=cH.GetValue("dayNightCycle")local cp=cK.GetProperty("enabled").get()return cp elseif cI=="useServerTime"then local cK=cH.GetValue("dayNightCycle")local cL=cK.GetValue("useServerTime")return cL end else return cJ end end,["OnGUI"]=function(self)local cM=a_["checkbox1_themeUtils"]local cN=a_["comboxbox1_themeUtils"]GUI.CheckBox("##checkbox1_themeUtils",cM)GUI.SameLine()GUI.Label("Theme")if cM.Clicked then self.EnableTheme(cM.Checked)end;GUI.ComboBox("##comboxbox1_themeUtils",cN)GUI.SameLine()local cO=GUI.Button("OK##button1_themeUtils")if cM.Checked and cO then self.CreateThemePreview(cN.SelectItem)end;local cP=GUI.Button("Theme Config##button2_themeUtils")if cP then local cQ=self;cQ:CreateThemeConfig()end end,["CreateThemeConfig"]=function(self)if cD==nil then return end;local cR={["checkbox1_themeUtils"]={["Checked"]=self.GetInfoTheme("dayNightCycle",false)},["checkbox2_themeUtils"]={["Checked"]=self.GetInfoTheme("useServerTime",false)}}Il2Cpp.RegisterInOneUpdate(function()local cS=5;local cT=Window("Theme Config")local cU=Size(400,300)cT.Size=cU;local cV=tostring(cT)Il2Cpp.RegisterInUpdate(cV,function()cT:Render(function(cW)if cW then local cM=cR.checkbox1_themeUtils;local cX=cR.checkbox2_themeUtils;GUI.CheckBox("##checkbox1_themeUtils",cM)GUI.SameLine()GUI.Label("DayNightCycle")if cM.Clicked then self.SetupThemePreview("dayNightCycle",cM["Checked"])end;GUI.CheckBox("##checkbox2_themeUtils",cX)GUI.SameLine()GUI.Label("UseServerTime")if cX.Clicked then self.SetupThemePreview("useServerTime",cX["Checked"])end else cS=cS-1;if cS==0 then Il2Cpp.RegisterInUpdate(cV)end end end)end)end)end}end;local function cY()local cZ=Il2Cpp.ResolveIcall("UnityEngine.QualitySettings::set_shadowDistance")local c_=ByteArray({0x55,0x89,0xE5,0x8B,0x5D,0x08,0xFF,0x73,0x04,0xFF,0x13,0x83,0xC4,0x04,0xC9,0xC3})local bi=Process.Alloc(nil,c_.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)Process.WriteMemory(bi,c_)local d0=ByteArray(8)local d1={["inputfloat1_shadowDistance"]={["Value"]=70,["Style.Width"]=70,["Format"]="%.2f"}}return{["Invoke"]=function(j)Il2Cpp.Primitives.SetPointer(d0.Pointer,cZ)Il2Cpp.Primitives.SetFloat(d0.Pointer+4,j)Process.Invoke(bi,d0)end,["OnGUI"]=function(self)local d2=d1.inputfloat1_shadowDistance;GUI.Label("Shadow Distance")GUI.SameLine()GUI.InputFloat("##inputfloat1_shadowDistance",d2)if d2.Changed then self.Invoke(d2.Value)end end}end;local function d3()local a_={["checkbox1_antiafk"]={["Checked"]=false}}return{["OnGUI"]=function(self)local d4=a_["checkbox1_antiafk"]GUI.CheckBox("##checkbox1_antiafk",d4)GUI.SameLine()GUI.Label("Anti AFK")if d4.Clicked then self.Callback(d4.Checked)end end,["Callback"]=function(bm)local d5=b["Assembly-CSharp"]()local d6=d5.GetClass("","AwayMonitor")local g=d6.GetValue("instance")g.SetValue("idleKickEnabled",not bm)end}end;if globalThis:Get("KoGaMa Plugin")==nil and Process.GetName()=="kogama.exe"then globalThis:Set("KoGaMa Plugin",true)local ba=s()local d7=K()local d8=ar()local d9=ax()local da=aN()local db=b9(ba)local dc=bd()local dd=bp()local de=bY()local df=cl()local dg=ct()local dh=cA()local di=cY()local dj=d3()local dk=Process.GetModuleFromName("UnityPlayer.dll")local dl=Il2Cpp.Pointer(0x55BC77)Il2Cpp.SetMainUpdateHook(dk+dl)local dm=nil;local dn=function()local dp=Il2Cpp.ResolveIcall("UnityEngine.QualitySettings::set_vSyncCount")local dq={}dq.Application_set_targetFrameRate=function(j)local dr=m.NewInt(j)ba["UnityEngine.Application.set_targetFrameRate"](dr)end;dq.QualitySettings_set_vSyncCount=function(ds)local dt=m.NewInt(ds)local du=m.GetPointer(dt)Process.Invoke(dp,du)end;return dq end;local dv=dn()local dw=function()local bb=nil;Il2Cpp.RegisterInOneUpdate(function()bb=ba["UnityEngine.Application.get_main"]()end)return function(j)ba["UnityEngine.Application.set_aspect"](bb,m.NewFloat(j))end end;local dx=dw()local dy=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local dz=Il2Cpp.Class.FromName(M,"","ESCubeEdit")local dA=Il2Cpp.Class.FromName(M,"","CEEditBodyUUI")local dB={ByteArray({0x31,0xC0}),ByteArray({0x89,0x01}),ByteArray({0xFF,0xD1})}local dC=l(dz:GetMethodFromName("Enter",1))+0x396;local dD=l(dA:GetMethodFromName("Enter",1))+0x6B6;return function(bm)if bm then Process.WriteMemory(dC,dB[1])Process.WriteMemory(dD,dB[1])else Process.WriteMemory(dC,dB[2])Process.WriteMemory(dD,dB[3])end end end;local dE=dy()local dF=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local dG=Il2Cpp.Class.FromName(M,"","PaintCubes")local aj=Il2Cpp.Class.FromName(M,"","MVCubeModelBase")local dH=dG:GetMethodFromName("Execute",1)local dI=aj:GetMethodFromName("SetMaterial",3)local dJ=aj:GetMethodFromName("ReplaceCube",2)local dK=l(dH)+0xAB;local dL=l(dH)+0x125;local dM=l(dI)local dN=l(dJ)local dO=ByteArray({0x90,0x90,0x90,0x90,0x90,0x90,0x90})local dP=ByteArray({0x0F,0x84,0x9C,0x00,0x00,0x00})local dQ=ByteArray({0x55,0x8B,0xEC,0x83,0xEC,0x10,0x8B,0xDE,0x8B,0x5B,0x4C,0x8B,0x5B,0x0C,0xFF,0x75,0x14,0x53,0xFF,0x75,0x10,0xFF,0x75,0x0C,0xFF,0x75,0x08,0xE8,0x0,0x0,0x0,0x0,0x83,0xC4,0x20,0xC9,0xC3})local bi=Process.Alloc(nil,dQ.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local dR=bi+0x1B;dQ:SetFromByteArray(0x1C,n.jump(dR:ToInt(),dM:ToInt()))Process.WriteMemory(bi,dQ)return function(bm)if bm then Process.WriteMemory(dK,dO)Process.WriteMemory(dL+1,n.jump(dL:ToInt(),bi:ToInt()))else Process.WriteMemory(dK,dP)Process.WriteMemory(dL+1,n.jump(dL:ToInt(),dN:ToInt()))end end end;local dS=dF()local dT=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local dU=Il2Cpp.Class.FromName(M,"","MaterialsController")local dV={ByteArray({0x8A,0x7F,0x0C}),ByteArray({0xB7,0x01,0x90})}local dW=l(dU:GetMethodFromName("UpdateContent",0))+0x144;return function(bm)local dX=nil;if bm then dX=dV[2]else dX=dV[1]end;Process.WriteMemory(dW,dX)end end;local dY=dT()local dZ=function()local d_={ByteArray({0xB8,0x00,0x00,0x00,0x00}),ByteArray({0x89,0x46,0x0C,0x90,0x90}),ByteArray({0xF3,0x0F,0x10,0x45,0x0C}),ByteArray({0xF3,0x0F,0x11,0x46,0x0C})}local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local e0=Il2Cpp.Class.FromName(M,"","CubeModelPopup")local e1=e0:GetMethodFromName("OnModelScalePressed",1)local dK=l(e1)+0x99;local e2=l(e1)+0XA1;return function(bm,j)if bm then Il2Cpp.Primitives.SetFloat(d_[1].Pointer+1,j)Process.WriteMemory(dK,d_[1])Process.WriteMemory(e2,d_[2])else Process.WriteMemory(dK,d_[3])Process.WriteMemory(e2,d_[4])end end end;local e3=dZ()local e4=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local u=t:AssemblyOpen("UnityEngine.CoreModule.dll")local v=u.Image;local e5=Il2Cpp.Class.FromName(M,"","ESRotating")local dH=e5:GetMethodFromName("Execute",1)local e6=Il2Cpp.Class.FromName(v,"UnityEngine","Vector3")local e7=e6:GetMethodFromName("get_up",0)local e8=ByteArray({0x55,0x8B,0xEC,0x8B,0x45,0x08,0x8D,0x15,0x00,0x00,0x00,0x00,0xF3,0x0F,0x7E,0x02,0x8B,0x4A,0x08,0x66,0x0F,0xD6,0x00,0x89,0x48,0x08,0xC9,0xC3,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00})local dK=l(dH)+0x49B;local e2=l(e7)local bi=Process.Alloc(nil,e8.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local e9=bi+0x1D;local ea=n.jump(dK:ToInt(),bi:ToInt())local eb=n.jump(dK:ToInt(),e2:ToInt())m.SetInt(e8.Pointer+8,e9:ToInt())Process.WriteMemory(bi,e8)return function(bm,ec)if bm~=nil then if bm then Process.WriteMemory(dK+1,ea)else Process.WriteMemory(dK+1,eb)end end;if ec~=nil then m.SetFloat(e9,ec[1])m.SetFloat(e9+4,ec[2])m.SetFloat(e9+8,ec[3])end end end;local ed=e4()local ee=function()local ef=Il2Cpp.ResolveIcall("UnityEngine.Screen::SetResolution(System.Int32,System.Int32,UnityEngine.FullScreenMode,System.Int32)")local eg=ByteArray({0x55,0x8B,0xEC,0x8B,0x45,0x08,0x6A,0x00,0xFF,0x70,0x08,0xFF,0x70,0x04,0xFF,0x30,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x16,0xC9,0xC3})local d0=ByteArray(12)local bi=Process.Alloc(nil,eg.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)eg:SetFromByteArray(0x11,n.jump(bi:ToInt()+0x10,ef:ToInt()))Process.WriteMemory(bi,eg)return function(eh,ei,ej)local ek=d0.Pointer;m.SetInt(ek,eh)m.SetInt(ek+4,ei)m.SetInt(ek+8,ej)Process.Invoke(bi,d0.Pointer)end end;local el=ee()local em=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local en=Il2Cpp.Class.FromName(M,"","MVBuildModeAvatarLocal/EditMode")local eo=en:GetMethodFromName("MoveCharacter",1)local ep=l(eo)+0x21;local bO={ByteArray({0x90,0xE9}),ByteArray({0x0F,0x84})}return function(bm)if bm then Process.WriteMemory(ep,bO[1])else Process.WriteMemory(ep,bO[2])end end end;local eq=em()local er=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local es=Il2Cpp.Class.FromName(M,"","MVGameControllerBase")local et=es:GetMethodFromName("PostGameMsg",2)local eu=l(et)+0x2D;local bO={ByteArray({0xEB}),ByteArray({0x74})}return function(bm)if bm then Process.WriteMemory(eu,bO[1])else Process.WriteMemory(eu,bO[2])end end end;local ev=er()local ew=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local ex=Il2Cpp.Class.FromName(M,"","MVNetworkGame")local ey=ex:GetMethodFromName("OnNotificationEventReceived",2)local ez=l(ey)+0x2D;local bO={ByteArray({0xEB}),ByteArray({0x74})}return function(bm)if bm then Process.WriteMemory(ez,bO[1])else Process.WriteMemory(ez,bO[2])end end end;local eA=ew()local eB=function()local t=Il2Cpp.Domain.MainDomain;local eC=t:AssemblyOpen("Assembly-CSharp-firstpass.dll")local eD=eC.Image;local eE=Il2Cpp.Class.FromName(eD,"","Water")local eF=eE:GetMethodFromName("CreateWaterObjects",3)local eG=eE:GetMethodFromName("OnWillRenderObject",0)local eH=l(eF)+0xED;local eI=l(eG)+0x154;local eJ=l(eG)+0x229;local eK=l(eG)+0x237;local bO={ByteArray({0x90,0x90,0x90}),ByteArray({0x90,0x90,0x90,0x90,0x90,0x90}),ByteArray({0x0F,0x4C,0xF7}),ByteArray({0x0F,0x85,0xFA,0x07,0x00,0x00}),ByteArray({0x0F,0x95,0xC1}),ByteArray({0x0F,0x4C,0xC1})}return function(bm)if bm then Process.WriteMemory(eH,bO[1])Process.WriteMemory(eI,bO[2])Process.WriteMemory(eJ,bO[1])Process.WriteMemory(eK,bO[1])else Process.WriteMemory(eH,bO[3])Process.WriteMemory(eI,bO[4])Process.WriteMemory(eJ,bO[5])Process.WriteMemory(eK,bO[6])end end end;local eL=eB()local eM=function()local eN=nil;return function()if eN==nil then local eO=Il2Cpp.String.FromAny(ba["UnityEngine.Application.get_version"]())eN=tostring(eO.Chars)end;return eN end end;local eP=eM()local eQ=function()return{["FPS"]=function(self)return 1.0/self["get_deltaTime"]()end,["get_deltaTime"]=function()return m.GetFloat(ba["UnityEngine.Time.get_deltaTime"]().Unbox)end}end;local eR=eQ()local eS=function()local t=Il2Cpp.Domain.MainDomain;local eT=t:AssemblyOpen("Photon3Unity3D.dll")local eU=eT.Image;local eV=Il2Cpp.Class.FromName(eU,"ExitGames.Client.Photon","PhotonPeer")local eW=eV:GetMethodFromName("get_RoundTripTime",0)local eX=nil;local eY=nil;return function()if eX==nil then eX=d7["MVGameControllerBase.get_Game"]()end;if eY==nil then eY=d7["MVNetworkGame.get_Peer"](eX)end;local eZ=Il2Cpp.Runtime.Invoke(eW,eY,{},function(f)print("Error")end)return Il2Cpp.Primitives.GetInt(eZ.Unbox)end end;local e_=eS()local f0=function(f1)local f2=Il2Cpp.String(f1)d7["TextCommand.NotifyUser"](f2)end;local f3=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local e5=Il2Cpp.Class.FromName(M,"","ESRotating")local f4=Il2Cpp.Class.FromName(M,"","ESTranslate")local f5=Il2Cpp.Class.FromName(M,"","ESInsert")local f6=e5:GetMethodFromName("DoGridSnapping",0)local f7=f4:GetMethodFromName("Enter",1)local f8=f5:GetMethodFromName("ComputeSnapPosition",2)local f9=l(f6)+0xB5+4;local fa=l(f7)+0x1AF+4;local fb=l(f8)+0x6F+4;local fc=m.NewFloat(0.0625)local fd=ByteArray(4)m.SetPointer(fd.Pointer,fc.Pointer)Process.WriteMemory(f9,fd)Process.WriteMemory(fa,fd)Process.WriteMemory(fb,fd)return function(j)m.SetFloat(fc,j)end end;local fe=f3()local ff=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local fg=Il2Cpp.Class.FromName(M,"","GizmoController")local f8=fg:GetMethodFromName("Handle",1)local fh=l(f8)+0x1BF+3;local fi=ByteArray(4)return function(j)m.SetFloat(fi,j)Process.WriteMemory(fh,fi)end end;local fj=ff()local fk=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local fl=Il2Cpp.Class.FromName(M,"","WinningConditionControl")local fm=fl:GetMethodFromName("TryGetPrioritizedStat",1)local fn=l(fm)+0x4E+2;local fo=ByteArray(1)return function(bm)m.SetBool(fo,bm)Process.WriteMemory(fn,fo)end end;local fp=fk()local fq=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local fr=Il2Cpp.Class.FromName(M,"","SelectionController")local fs=fr:GetMethodFromName("DeSelectAll",0)local ft=fr:GetMethodFromName("DeSelectAllExcept",1)local fu=l(fs)local fv=l(ft)local bO={ByteArray({0xC3}),ByteArray({0x55})}return function(bm)if bm then Process.WriteMemory(fu,bO[1])Process.WriteMemory(fv,bO[1])else Process.WriteMemory(fu,bO[2])Process.WriteMemory(fv,bO[2])end end end;local fw=fq()local fx=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local f4=Il2Cpp.Class.FromName(M,"","ESTranslate")local fs=f4:GetMethodFromName("GetDeltaMouse",1)local fy=l(fs)+0x3F1+4;local fz=l(fs)+0x40A+4;local fA=l(fs)+0x31B+4;local fB=m.NewFloat(0.005)local fd=ByteArray(4)m.SetPointer(fd.Pointer,fB.Pointer)Process.WriteMemory(fy,fd)Process.WriteMemory(fz,fd)Process.WriteMemory(fA,fd)return function(j)m.SetFloat(fB,j)end end;local fC=fx()local fD=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local fE=Il2Cpp.Class.FromName(M,"","DeathUIBoostMenuController")local fF=fE:GetMethodFromName("Update",0)local fG=l(fF)+0x288;local fH={ByteArray({0x90,0x90,0x90,0x90,0x90,0x90}),ByteArray({0x0F,0x82,0xD5,0x00,0x00,0x00})}return function(bm)if bm then Process.WriteMemory(fG,fH[1])else Process.WriteMemory(fG,fH[2])end end end;local fI=fD()local fJ=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local fE=Il2Cpp.Class.FromName(M,"","ESCubeEdit")local f7=fE:GetMethodFromName("Enter",1)local fK=l(f7)+0x928;local fH={ByteArray({0}),ByteArray({1})}return function(bm)if bm then Process.WriteMemory(fK,fH[1])else Process.WriteMemory(fK,fH[2])end end end;local fL=fJ()local fM=function()return function()local fN=d7["MVGameControllerBase.get_EditModeUI"]()local fO=d7["MVGameControllerBase.get_WOCM"]()local fP=d7["DesktopEditModeController.contextMenuController"].get(fN)local fQ=d7["ContextMenuController.woID"].get(fP)local fR=d7["MVWorldObjectClientManager.GetWorldObject"](fO,fQ.Unbox)return fR end end;local fS=fM()local fT=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local fU=Il2Cpp.Class.FromName(M,"","MVBuildModeAvatarLocal/EditMode")local fV=fU:GetMethodFromName("FrameUpdate",1)local fW=fU:GetMethodFromName("GetMovementVelocity",0)local fX=l(fV)+0x38;local e2=l(fW)local fY=ByteArray({0x55,0x89,0xE5,0x53,0x51,0x8B,0x45,0x0C,0x8D,0x1D,0x2E,0x00,0x00,0x00,0x8B,0x0B,0x89,0x48,0x44,0x8B,0x4B,0x04,0x89,0x48,0x48,0x6A,0x00,0x50,0xFF,0x75,0x08,0xE8,0xDC,0xFF,0xFF,0xFF,0x83,0xC4,0x0C,0x8B,0x45,0x08,0x59,0x5B,0xC9,0xC3,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x40})local fZ=ByteArray(4)local bi=Process.Alloc(nil,fY.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local ea=n.jump(bi:ToInt()+0X1F,e2:ToInt())fY:SetFromByteArray(0x20,ea)m.SetInt(fY.Pointer+0xA,bi:ToInt()+0x2E)local eb=n.jump(fX:ToInt(),bi:ToInt())local f_=n.jump(fX:ToInt(),e2:ToInt())Process.WriteMemory(bi,fY)return function(bm,g0)if bm~=nil then if bm then Process.WriteMemory(fX+1,eb)else Process.WriteMemory(fX+1,f_)end end;if g0~=nil then m.SetFloat(fZ,g0[1])Process.WriteMemory(bi+0x2E,fZ)m.SetFloat(fZ,g0[2])Process.WriteMemory(bi+0x2E+4,fZ)end end end;local g1=fT()local g2=function(g3)local g4=nil;local g5=true;Il2Cpp.RegisterInUpdate("KoGaMaPlugin.CustomTexture",function()if g5 then if g4==nil then local g3=Il2Cpp.String(g3)local g6=Il2Cpp.Primitives.NewBool(false)g4=d9["UnityEngine.Networking.UnityWebRequestTexture.GetTexture"](g3,g6)d9["UnityEngine.Networking.UnityWebRequest.SendWebRequest"](g4)else local g7=d9["UnityEngine.Networking.UnityWebRequest.get_isDone"](g4)local g8=Il2Cpp.Primitives.GetBool(g7.Unbox)if g8 then local g9=d9["UnityEngine.Networking.DownloadHandler.GetContent"](g4)local ga=d7["MVGameControllerBase.get_MaterialLoader"]()d7["MaterialLoader.SetMainTexture"](ga,g9)d7["MaterialLoader.SetupMaterials"](ga)g5=false;Il2Cpp.UnregisterInUpdate("KoGaMaPlugin.CustomTexture")end end end end)end;local gb=function(g3)local g4=nil;local g5=true;Il2Cpp.RegisterInUpdate("KoGaMaPlugin.CustomCrossHair",function()if g5 then if g4==nil then local g3=Il2Cpp.String(g3)local g6=Il2Cpp.Primitives.NewBool(false)g4=d9["UnityEngine.Networking.UnityWebRequestTexture.GetTexture"](g3,g6)d9["UnityEngine.Networking.UnityWebRequest.SendWebRequest"](g4)else local g7=d9["UnityEngine.Networking.UnityWebRequest.get_isDone"](g4)local g8=Il2Cpp.Primitives.GetBool(g7.Unbox)if g8 then local g9=d9["UnityEngine.Networking.DownloadHandler.GetContent"](g4)local gc=d7["MVGameControllerBase.get_PlayModeUI"]()local gd=d7["DesktopPlayModeController.GetCrossHair"](gc)local ge=d7["CrossHair.crossHair"].get(gd)local gf=d8["UnityEngine.UI.Image.get_sprite"](ge)local gg=ba["UnityEngine.Sprite.get_pivot"](gf)local gh=ba["UnityEngine.Sprite.get_rect"](gf)local gi=ba["UnityEngine.Sprite.Create"](g9,gh.Unbox,gg.Unbox)d8["UnityEngine.UI.Image.set_sprite"](ge,gi)g5=false;Il2Cpp.UnregisterInUpdate("KoGaMaPlugin.CustomCrossHair")end end end end)end;local gj=function()local gk={}gk.Checked=false;gk.Clicked=false;return gk end;local a_={["checkbox1"]=gj(),["checkbox2"]=gj(),["checkbox3"]=gj(),["checkbox4"]=gj(),["checkbox5"]=gj(),["checkbox6"]=gj(),["checkbox7"]=gj(),["checkbox8"]=gj(),["checkbox9"]=gj(),["checkbox13"]=gj(),["checkbox14"]=gj(),["checkbox15"]=gj(),["checkbox16"]=gj(),["checkbox17"]=gj(),["checkbox18"]=gj(),["inputfloat1"]={["Value"]=1,["Style.Width"]=70,["Format"]="%.2f"},["dragint1"]={["Value"]=60,["Style.Width"]=120,["Min"]=0},["inputfloat2"]={["Value"]=4,["Style.Width"]=70,["Format"]="%.2f"},["inputfloat3"]={["Value"]=3,["Style.Width"]=70,["Format"]="%.2f"},["inputint1"]={["Value"]=1280,["Style.Width"]=90},["inputint2"]={["Value"]=780,["Style.Width"]=90},["comboxbox1"]={["Items"]={"ExclusiveFullScreen","FullScreenWindow","MaximizedWindow","Windowed"},["SelectItem"]="Windowed",["SelectIndex"]=3},["plotlines1"]={["Values"]={}},["plotlines2"]={["Values"]={}},["inputfloat4"]={["Value"]=0.0625,["Style.Width"]=100,["Format"]="%.6f"},["inputfloat5"]={["Value"]=15,["Style.Width"]=100,["Format"]="%.2f"},["inputfloat6"]={["Value"]=0.005,["Style.Width"]=100,["Format"]="%.5f"},["inputfloat7"]={["Value"]=2,["Style.Width"]=100,["Format"]="%.2f"},["inputfloat8"]={["Value"]=2,["Style.Width"]=100,["Format"]="%.2f"},["textinput1"]={["Text"]="",["Width"]=250},["textinput2"]={["Text"]="",["Width"]=250}}local gl={["timing"]=0,["fps_value"]=0,["ping_value"]=0,["fps_values_index"]=0,["fps_values_len"]=30,["ping_values_index"]=0,["ping_values_len"]=30}local cS=5;local gm=function()dm:Render(function(gn)if gn then local go=a_.checkbox1;local gp=a_.checkbox2;local gq=a_.inputfloat1;local gr=a_.dragint1;local gs=a_.checkbox3;local gt=a_.checkbox4;local gu=a_.comboxbox1;local gv=a_.checkbox5;local gw=a_.inputfloat2;local gx=a_.inputfloat3;local gy=a_.inputint1;local gz=a_.inputint2;local gA=a_.checkbox6;local gB=a_.checkbox7;local gC=a_.checkbox8;local gD=a_.checkbox9;local gE=a_.plotlines1;local gF=a_.plotlines2;local gG=a_.inputfloat4;local gH=a_.inputfloat5;local gI=a_.checkbox13;local gJ=a_.checkbox14;local gK=a_.inputfloat6;local gL=a_.checkbox15;local gM=a_.inputfloat7;local gN=a_.inputfloat8;local gO=a_.checkbox16;local gP=a_.textinput1;local gQ=a_.textinput2;local gR=a_.checkbox17;local gS=a_.checkbox18;if GUI.CollapsingHeader("Build##collapsingheader_Build")then GUI.CheckBox("##checkbox1",go)if go.Clicked then dE(go.Checked)end;GUI.SameLine()GUI.Label("No Build Limit")GUI.CheckBox("##checkbox2",gp)if gp.Clicked then dY(gp.Checked)end;GUI.SameLine()GUI.Label("Free Materials")GUI.CheckBox("##checkbox3",gs)if gs.Clicked then dS(gs.Checked)end;GUI.SameLine()GUI.Label("Custom Face Model")GUI.CheckBox("##checkbox4",gt)if gt.Clicked and not gt.Checked then e3(false,0)end;GUI.SameLine()GUI.Label("Custom Model Size")if gt.Checked then GUI.Label("Model Size")GUI.SameLine()GUI.InputFloat("##inputfloat1",gq)if gq.Changed then if gq.Value>0 and gq.Value<50 then e3(true,gq.Value)end end end;GUI.CheckBox("##checkbox5",gv)GUI.SameLine()GUI.Label("Rotation Custom")if gv.Clicked then if gv.Checked then f0("< X > Press to rotate model on an X axis\n< Y > Press to rotate model on an Y axis\n< Z > Press to rotate model on an Z axis")end;ed(gv.Checked)end;if gv.Checked then if Process.KeyIsDown(90)then ed(nil,{0,1,0})elseif Process.KeyIsDown(89)then ed(nil,{1,0,0})elseif Process.KeyIsDown(88)then ed(nil,{0,0,1})end end;GUI.CheckBox("##checkbox6",gA)GUI.SameLine()GUI.Label("Free Edit Speed Movement")if gA.Clicked then eq(gA.Checked)end;dd:OnGUI()GUI.Label("Custom Grid")GUI.SameLine()GUI.InputFloat("##inputfloat4",gG)if gG.Changed and gG.Value>0 then fe(gG.Value)end;GUI.Label("Rotation Custom Speed")GUI.SameLine()GUI.InputFloat("##inputfloat5",gH)if gH.Changed and gH.Value>0 then fj(gH.Value)end;GUI.CheckBox("##checkbox14",gJ)GUI.SameLine()GUI.Label("MultiSelect BETA")if gJ.Clicked then fw(gJ.Checked)end;GUI.Label("Custom Speed Translate")GUI.SameLine()GUI.InputFloat("##inputfloat6",gK)if gK.Changed and gK.Value>0 and gK.Value<0.5 then fC(gK.Value)end;GUI.CheckBox("##checkbox15",gL)GUI.SameLine()GUI.Label("Edit Mode Speed Hack")if gL.Clicked then g1(gL.Checked,nil)end;if gL.Checked then GUI.Label("Y Speed")GUI.SameLine()GUI.InputFloat("##inputfloat7",gM)GUI.Label("XZ Speed")GUI.SameLine()GUI.InputFloat("##inputfloat8",gN)if gM.Changed or gN.Changed then g1(nil,{math.min(gM.Value,20),math.min(gN.Value,20)})end end;GUI.CheckBox("##checkbox18",gS)GUI.SameLine()GUI.Label("Model Edit Background")if gS.Clicked then fL(gS.Checked)end;de:OnGUI()end;if GUI.CollapsingHeader("PvP##collapsingheader_PvP")then GUI.Label("FPS")GUI.SameLine()GUI.DragInt("##dragint1",gr)if gr.Changed then if gr.Value>15 then dv.Application_set_targetFrameRate(gr.Value)dv.QualitySettings_set_vSyncCount(0)end end;GUI.Label("Aspect Ration")GUI.SameLine()GUI.InputFloat("##inputfloat2",gw)GUI.SameLine()GUI.Label(" : ")GUI.SameLine()GUI.InputFloat("##inputfloat3",gx)GUI.SameLine()if GUI.Button("OK##button1")then if gw.Value>0 and gx.Value>0 then dx(gw.Value/gx.Value)end end;GUI.Label("Resolution")GUI.SameLine()GUI.InputInt("##inputint1",gy)GUI.SameLine()GUI.Label(" x ")GUI.SameLine()GUI.InputInt("##inputint2",gz)GUI.ComboBox("##comboxbox1",gu)GUI.SameLine()if GUI.Button("OK##button2")then if gy.Value>0 and gz.Value>0 then el(gy.Value,gz.Value,gu.SelectIndex)end end;GUI.CheckBox("##checkbox13",gI)GUI.SameLine()GUI.Label("Kill Count")if gI.Clicked then fp(gI.Checked)end;GUI.CheckBox("##checkbox17",gR)GUI.SameLine()GUI.Label("Fast Respawn")if gR.Clicked then fI(gR.Checked)end;dc:OnGUI()end;if GUI.CollapsingHeader("Texture##collapsingheader_PvP")then GUI.TextInput("##textinput1",gP)if GUI.Button("Custom Texture Materials ##button4")then g2(gP.Text)end;GUI.TextInput("##textinput2",gQ)if GUI.Button("Texture Crosshair ##button5")then gb(gQ.Text)end end;if GUI.CollapsingHeader("Interface##collapsingheader_Interface")then da:OnGUI()GUI.CheckBox("##checkbox7",gB)GUI.SameLine()GUI.Label("No Chat")if gB.Clicked then ev(gB.Checked)end;GUI.CheckBox("##checkbox8",gC)GUI.SameLine()GUI.Label("No Notification")if gC.Clicked then eA(gC.Checked)end;df:OnGUI()dg:OnGUI()end;if GUI.CollapsingHeader("Quality##collapsingheader_Quality")then GUI.CheckBox("##checkbox9",gD)GUI.SameLine()GUI.Label("Water Reflective")if gD.Clicked then eL(gD.Checked)end;dh:OnGUI()dj:OnGUI()db:OnGUI()di:OnGUI()end;gl.timing=gl.timing+eR["get_deltaTime"]()if gl.timing>0.3 then gl.fps_value=eR:FPS()gl.ping_value=e_()gl.timing=0;if gl.fps_values_index<gl.fps_values_len then gl.fps_values_index=gl.fps_values_index+1;gE.Values[gl.fps_values_index]=gl.fps_value else for gT=1,gl.fps_values_len-1,1 do gE.Values[gT]=gE.Values[gT+1]end;gE.Values[gl.fps_values_len]=gl.fps_value end;if gl.ping_values_index<gl.ping_values_len then gl.ping_values_index=gl.ping_values_index+1;gF.Values[gl.ping_values_index]=gl.ping_value else for gT=1,gl.ping_values_len-1,1 do gF.Values[gT]=gF.Values[gT+1]end;gF.Values[gl.ping_values_len]=gl.ping_value end end;if GUI.CollapsingHeader("Config and Info##collapsingheader_Config_And_Info")then GUI.CheckBox("##checkbox16",gO)GUI.SameLine()if gO.Checked then GUI.Label("Light")else GUI.Label("Dark")end;GUI.Label(string.format("FPS: %.0f",gl.fps_value))GUI.SameLine()GUI.PlotLines("##plotlines1",gE)GUI.Label(string.format("Ping: %dms",gl.ping_value))GUI.SameLine()GUI.PlotLines("##plotlines2",gF)GUI.Label("KoGaMa Version: "..eP())GUI.Label("Helper: Henrique")GUI.Label("Created By Maury")if gO.Clicked then if gO.Checked then dm:StyleLight()else dm:StyleDark()end end end;do df:Callback()de:Callback()dg:Callback()end else cS=cS-1;if cS==0 then Il2Cpp.UnregisterInUpdate(tostring(dm))end end end)end;Il2Cpp.RegisterInOneUpdate(function()dm=Window("KoGaMa Plugin")local cU=Size(400,300)dm.Size=cU;Il2Cpp.RegisterInUpdate(tostring(dm),gm)end)end
