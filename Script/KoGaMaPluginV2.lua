local a=import("Helper.lua")local b=a.AssemblyInfo;local c=function(d,e)if e then return function(...)return Il2Cpp.Runtime.Invoke(d,nil,{...},function(f)print("Error")end)end else return function(g,...)return Il2Cpp.Runtime.Invoke(d,g,{...},function(f)print("Error")end)end end end;local h=function(i,e)if e then return{["get"]=function()return i:GetValueObject(Il2Cpp.Object.FromAny(nil))end,["set"]=function(j)i:StaticSetValue(j)end}else return{["get"]=function(k)return i:GetValueObject(k)end,["set"]=function(k,j)i:SetValue(k,j)end}end end;local l=function(d)return Il2Cpp.Primitives.GetPointer(d.Pointer)end;local m=Il2Cpp.Primitives;local n={["jump"]=function(o,p)local q=p-o-5;local r=ByteArray(4)m.SetInt(r,q)return r end}local s=function()local t=Il2Cpp.Domain.MainDomain;local u=t:AssemblyOpen("UnityEngine.CoreModule.dll")local v=u.Image;local w={}do local x=Il2Cpp.Class.FromName(v,"UnityEngine","Time")local y=x:GetMethodFromName("get_deltaTime",0)w["UnityEngine.Time.get_deltaTime"]=c(y,true)end;do local z=Il2Cpp.Class.FromName(v,"UnityEngine","Application")local A=z:GetMethodFromName("set_targetFrameRate",1)w["UnityEngine.Application.set_targetFrameRate"]=c(A,true)local B=z:GetMethodFromName("get_version",0)w["UnityEngine.Application.get_version"]=c(B,true)end;do local C=Il2Cpp.Class.FromName(v,"UnityEngine","Camera")local D=C:GetMethodFromName("set_aspect",1)local E=C:GetMethodFromName("get_main",0)local F=C:GetMethodFromName("set_farClipPlane",1)w["UnityEngine.Application.set_aspect"]=c(D,false)w["UnityEngine.Application.get_main"]=c(E,true)w["UnityEngine.Application.set_farClipPlane"]=c(F,false)end;do local G=Il2Cpp.Class.FromName(v,"UnityEngine","Sprite")local H=G:GetMethodFromName("Create",3)w["UnityEngine.Sprite.Create"]=c(H,true)local I=G:GetMethodFromName("get_rect",0)w["UnityEngine.Sprite.get_rect"]=c(I,false)local J=G:GetMethodFromName("get_pivot",0)w["UnityEngine.Sprite.get_pivot"]=c(J,false)end;return w end;local K=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local w={}do local N=Il2Cpp.Class.FromName(M,"","MVGameControllerBase")local O=N:GetMethodFromName("get_Game",0)w["MVGameControllerBase.get_Game"]=c(O,true)local P=N:GetMethodFromName("get_GameMode",0)w["MVGameControllerBase.get_GameMode"]=c(P,true)local Q=N:GetMethodFromName("get_EditModeUI",0)w["MVGameControllerBase.get_EditModeUI"]=c(Q,true)local R=N:GetMethodFromName("get_WOCM",0)w["MVGameControllerBase.get_WOCM"]=c(R,true)local S=N:GetMethodFromName("get_OperationRequests",0)w["MVGameControllerBase.get_OperationRequests"]=c(S,true)local Q=N:GetMethodFromName("get_PlayModeUI",0)w["MVGameControllerBase.get_PlayModeUI"]=c(Q,true)local T=N:GetMethodFromName("get_MaterialLoader",0)w["MVGameControllerBase.get_MaterialLoader"]=c(T,true)end;do local U=Il2Cpp.Class.FromName(M,"","MaterialLoader")local V=U:GetMethodFromName("SetMainTexture",1)w["MaterialLoader.SetMainTexture"]=c(V,false)local W=U:GetMethodFromName("SetupMaterials",0)w["MaterialLoader.SetupMaterials"]=c(W,false)end;do local X=Il2Cpp.Class.FromName(M,"","MVNetworkGame")local Y=X:GetMethodFromName("get_Peer",0)w["MVNetworkGame.get_Peer"]=c(Y,false)end;do local Z=Il2Cpp.Class.FromName(M,"","TextCommand")local _=Z:GetMethodFromName("NotifyUser",1)w["TextCommand.NotifyUser"]=c(_,true)end;do local a0=Il2Cpp.Class.FromName(M,"","ThemeRepository")local a1=a0:GetMethodFromName("get_Instance",0)local a2=a0:GetMethodFromName("get_CurrentThemeVisualization",0)local a3=a0:GetMethodFromName("DestroyTemporary",1)local a4=a0:GetMethodFromName("CreateTemporaryThemeVisualization",1)w["ThemeRepository.get_Instance"]=c(a1,true)w["ThemeRepository.get_CurrentThemeVisualization"]=c(a2,false)w["ThemeRepository.DestroyTemporary"]=c(a3,false)w["ThemeRepository.CreateTemporaryThemeVisualization"]=c(a4,false)end;do local a5=Il2Cpp.Class.FromName(M,"","Theme")local a6=a5:GetMethodFromName("Activate",0)local a7=a5:GetMethodFromName("Deactivate",0)w["Theme.Activate"]=c(a6,false)w["Theme.Deactivate"]=c(a7,false)end;do local a8=Il2Cpp.Class.FromName(M,"","AvatarEditModeBodyController")local a9=a8:GetFieldFromName("Theme")w["AvatarEditModeBodyController.Theme"]=h(a9,true)end;do local aa=Il2Cpp.Class.FromName(M,"","AwayMonitor")local ab=aa:GetFieldFromName("instance")local ac=aa:GetFieldFromName("idleKickEnabled")w["AwayMonitor.instance"]=h(ab,true)w["AwayMonitor.idleKickEnabled"]=h(ac,false)end;do local ad=Il2Cpp.Class.FromName(M,"","DesktopEditModeController")local ae=ad:GetFieldFromName("contextMenuController")w["DesktopEditModeController.contextMenuController"]=h(ae,false)end;do local af=Il2Cpp.Class.FromName(M,"","ContextMenuController")local ag=af:GetFieldFromName("woID")w["ContextMenuController.woID"]=h(ag,false)end;do local ah=Il2Cpp.Class.FromName(M,"","MVWorldObjectClientManager")local ai=ah:GetMethodFromName("GetWorldObject",1)w["MVWorldObjectClientManager.GetWorldObject"]=c(ai,false)end;do local aj=Il2Cpp.Class.FromName(M,"","MVCubeModelBase")local ak=aj:GetMethodFromName("get_Pid",0)w["MVCubeModelBase.get_Pid"]=c(ak,false)end;do local al=Il2Cpp.Class.FromName(M,"","DesktopPlayModeController")local am=al:GetMethodFromName("GetCrossHair",0)w["DesktopPlayModeController.GetCrossHair"]=c(am,false)end;do local an=Il2Cpp.Class.FromName(M,"","CrossHair")local ao=an:GetFieldFromName("crossHair")w["CrossHair.crossHair"]=h(ao,false)end;do local ap=Il2Cpp.Class.FromName(M,"","CrossHair")local aq=ap:GetFieldFromName("crossHair")w["CrossHair.crossHair"]=h(aq,false)end;return w end;local ar=function()local t=Il2Cpp.Domain.MainDomain;local as=t:AssemblyOpen("UnityEngine.UI.dll")local at=as.Image;local w={}do local au=Il2Cpp.Class.FromName(at,"UnityEngine.UI","Image")local av=au:GetMethodFromName("set_sprite",1)w["UnityEngine.UI.Image.set_sprite"]=c(av,false)local aw=au:GetMethodFromName("get_sprite",0)w["UnityEngine.UI.Image.get_sprite"]=c(aw,false)end;return w end;local ax=function()local t=Il2Cpp.Domain.MainDomain;local ay=t:AssemblyOpen("UnityEngine.UnityWebRequestModule.dll")local az=ay.Image;local aA=t:AssemblyOpen("UnityEngine.UnityWebRequestTextureModule.dll")local aB=aA.Image;local w={}do local aC=Il2Cpp.Class.FromName(az,"UnityEngine.Networking","UnityWebRequest")local aD=aC:GetMethodFromName("Get",1)local aE=aC:GetMethodFromName("get_isDone",0)local aF=aC:GetMethodFromName("SendWebRequest",0)local aG=aC:GetMethodFromName("get_downloadHandler",0)w["UnityEngine.Networking.UnityWebRequest.Get"]=c(aD,true)w["UnityEngine.Networking.UnityWebRequest.get_isDone"]=c(aE,false)w["UnityEngine.Networking.UnityWebRequest.SendWebRequest"]=c(aF,false)w["UnityEngine.Networking.UnityWebRequest.get_downloadHandler"]=c(aG,false)end;do local aH=Il2Cpp.Class.FromName(az,"UnityEngine.Networking","DownloadHandler")local aI=aH:GetMethodFromName("get_text",0)w["UnityEngine.Networking.DownloadHandler.get_text"]=c(aI,false)end;do local aJ=Il2Cpp.Class.FromName(aB,"UnityEngine.Networking","DownloadHandlerTexture")local aK=aJ:GetMethodFromName("GetContent",1)w["UnityEngine.Networking.DownloadHandler.GetContent"]=c(aK,true)end;do local aL=Il2Cpp.Class.FromName(aB,"UnityEngine.Networking","UnityWebRequestTexture")local aM=aL:GetMethodFromName("GetTexture",2)w["UnityEngine.Networking.UnityWebRequestTexture.GetTexture"]=c(aM,true)end;return w end;local aN=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local aO=Il2Cpp.get_Corlib()local u=t:AssemblyOpen("UnityEngine.CoreModule.dll")local v=u.Image;local aP=Il2Cpp.Class.FromName(M,"","MVInputWrapper")local aQ=aP:GetFieldFromName("inputMap")local aR=Il2Cpp.Class.FromName(M,"","DesktopPlayMode")local aS=aR:GetFieldFromName("keyMapping")local aT=Il2Cpp.Class.FromType(aS.Type)local aU=aT:GetMethodFromName("get_Item",1)local aV=Il2Cpp.Class.FromName(aO,"System","Enum")local aW=aV:GetMethodFromName("Parse",2)local aX=Il2Cpp.Class.FromName(M,"","KogamaControls")local aY=Il2Cpp.Class.FromName(v,"UnityEngine","KeyCode")local aZ={}aZ["MVInputWrapper.inputMap"]=h(aQ,true)aZ["DesktopPlayMode.keyMapping"]=h(aS,false)aZ["Dictionary.get_Item"]=c(aU,false)aZ["Enum.Parse"]=c(aW,true)local a_={["comboxbox_keybind1"]={["Items"]={"Jump","MoveForward","MoveBackwards","MoveLeft","MoveRight","Fire"},["SelectItem"]="Jump",["SelectIndex"]=0},["textinput_keybind1"]={["Text"]=""}}return{["OnGUI"]=function(self)local b0=a_["comboxbox_keybind1"]local b1=a_["textinput_keybind1"]GUI.ComboBox("##comboxbox_keybind1",b0)GUI.TextInput("##textinput_keybind1",b1)if GUI.Button("Change##button_keybind1")then self.Keybind(b0.SelectItem,b1.Text)end end,["Keybind"]=function(b2,b3)local b4=aZ["MVInputWrapper.inputMap"].get()local b5=aZ["DesktopPlayMode.keyMapping"].get(b4)local b6=aZ["Enum.Parse"](aX.Type.Object,Il2Cpp.String(b2))local b7=aZ["Enum.Parse"](aY.Type.Object,Il2Cpp.String(b3))local b8=aZ["Dictionary.get_Item"](b5,b6.Unbox)Il2Cpp.Primitives.SetInt(b8.Pointer+0x10,Il2Cpp.Primitives.GetInt(b7.Unbox))end}end;local b9=function(ba)local bb=nil;Il2Cpp.RegisterInOneUpdate(function()bb=ba["UnityEngine.Application.get_main"]()end)local a_={["inputfloat_customdrawdistance1"]={["Value"]=400.0,["Style.Width"]=70,["Format"]="%.2f"}}return{["OnGUI"]=function(self)local bc=a_.inputfloat_customdrawdistance1;GUI.Label("Custom Draw Distance")GUI.SameLine()GUI.InputFloat("##inputfloat_customdrawdistance1",bc)GUI.SameLine()if GUI.Button("OK##button_customdrawdistance1")then self.Callback(bc.Value)end end,["Callback"]=function(j)ba["UnityEngine.Application.set_farClipPlane"](bb,m.NewFloat(j))end}end;local bd=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local an=Il2Cpp.Class.FromName(M,"","CrossHair")local be=an:GetMethodFromName("UpdateCrossHair",1)local bf=l(be)local bg=bf+0x56;local bh=ByteArray({0x55,0x8B,0xEC,0xB8,0x00,0x00,0x00,0x00,0xC9,0xC3,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3F})local bi=Process.Alloc(nil,bh.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)m.SetInt(bh.Pointer+0x04,bi:ToInt()+0x0A)Process.WriteMemory(bi,bh)local bj={ByteArray({0x8B,0x88,0xEC,0x00,0x00,0x00}),ByteArray({0xB9,0x00,0x00,0x00,0x00,0x90})}m.SetInt(bj[2].Pointer+0x01,bi:ToInt())local a_={["coloredit4_customcrosshaircolor1"]={["Color"]=GUI.Color(0,1,0,1),["Style.Width"]=120},["checkbox_customcrosshaircolor1"]={["Checked"]=false}}return{["OnGUI"]=function(self)local bk=a_.coloredit4_customcrosshaircolor1;local bl=a_.coloredit4_customcrosshaircolor1;GUI.CheckBox("##checkbox_customcrosshaircolor1",bl)GUI.SameLine()GUI.Label("Custom Color CrossHair")if bl.Clicked then self.Callback(bl.Checked,nil)end;if bl.Checked then GUI.ColorEdit4("##coloredit4_customcrosshaircolor1",bk)if bk.Changed then self.Callback(nil,bk.Color)end end end,["Callback"]=function(bm,bn)if bm~=nil then if bm then Process.WriteMemory(bg,bj[2])else Process.WriteMemory(bg,bj[1])end end;if bn~=nil then local bo=bi+0x0A;m.SetFloat(bo,bn.R)m.SetFloat(bo+4,bn.G)m.SetFloat(bo+8,bn.B)m.SetFloat(bo+12,bn.A)end end}end;local bp=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local as=t:AssemblyOpen("UnityEngine.UI.dll")local at=as.Image;local bq=Il2Cpp.Class.FromName(at,"UnityEngine.UI","InputField")local br=Il2Cpp.Class.FromName(M,"","SettingsSlider")local bs=Il2Cpp.Class.FromName(M,"","SettingsInputFieldSlider")local bt=Il2Cpp.Class.FromName(M,"","SettingsInputField")local bu=bt:GetMethodFromName("Initialize",2)local bv=bq:GetMethodFromName("set_text",1)local bw=bq:GetMethodFromName("set_characterLimit",1)local bx=bs.Methods;local by=nil;local bz=nil;for bA,d in pairs(bx)do if d.ParamCount==2 and d.Name=="Initialize"then local bB=d:GetParam(1).Name;if bB=="System.Single"then by=d elseif bB=="System.Int32"then bz=d end end end;local bC=br.Methods;local bD=nil;local bE=nil;for bA,d in pairs(bC)do if d.ParamCount==4 and d.Name=="Initialize"then local bB=d:GetParam(1).Name;if bB=="System.Single"then bD=d elseif bB=="System.Int32"then bE=d end end end;local bF=l(bE)+0x2A;local bG=l(bD)+0x27;local bH=l(bE)+0x4A;local bI=l(bD)+0x44;local bJ=l(bv)local bK=l(bw)local bL=l(bu)+0x59;local bM=l(by)+0xA2;local bN=l(bz)+0xA5;local bO={ByteArray({0x68,0x00,0x50,0xC3,0x47,0x90}),ByteArray({0x51,0xF3,0x0F,0x11,0x04,0x24}),ByteArray({0x68,0x00,0x00,0x00,0x00,0x90})}local bP=ByteArray({0x55,0x89,0xE5,0xFF,0x75,0x0C,0xFF,0x75,0x08,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x08,0x68,0xE8,0x03,0x00,0x00,0xFF,0x75,0x08,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x08,0xC9,0xC3})local bi=Process.Alloc(nil,bP.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local bQ=bi+0x9;local bR=bi+0x19;bP:SetFromByteArray(0xA,n.jump(bQ:ToInt(),bJ:ToInt()))bP:SetFromByteArray(0x1A,n.jump(bR:ToInt(),bK:ToInt()))local bS={n.jump(bL:ToInt(),bi:ToInt()),n.jump(bM:ToInt(),bi:ToInt()),n.jump(bN:ToInt(),bi:ToInt()),n.jump(bL:ToInt(),bJ:ToInt()),n.jump(bM:ToInt(),bJ:ToInt()),n.jump(bN:ToInt(),bJ:ToInt())}Process.WriteMemory(bi,bP)local a_={["unlimitconfig_checkbox1"]={["Checked"]=false},["unlimitconfig_input1"]={["Value"]=100000,["Style.Width"]=70,["Format"]="%.2f"},["unlimitconfig_input2"]={["Value"]=0,["Style.Width"]=70,["Format"]="%.2f"}}return{["OnGUI"]=function(self)local bT=a_.unlimitconfig_checkbox1;local bU=a_.unlimitconfig_input1;local bV=a_.unlimitconfig_input2;GUI.CheckBox("##unlimitconfig_checkbox1",bT)GUI.SameLine()GUI.Label("Unlimited Config")if bT.Clicked then self.Callback(bT.Checked,nil,nil)end;if bT.Checked then GUI.Label("Max Value")GUI.SameLine()GUI.InputFloat("##unlimitconfig_input1",bU)GUI.Label("Min Value")GUI.SameLine()GUI.InputFloat("##unlimitconfig_input2",bV)if bU.Changed or bV.Changed then self.Callback(bT.Checked,bU.Value,bV.Value)end end end,["Callback"]=function(bm,bW,bX)if bW~=nil then Il2Cpp.Primitives.SetFloat(bO[1].Pointer+1,bW)end;if bX~=nil then Il2Cpp.Primitives.SetFloat(bO[3].Pointer+1,bX)end;if bm then Process.WriteMemory(bF,bO[1])Process.WriteMemory(bG,bO[1])Process.WriteMemory(bH,bO[3])Process.WriteMemory(bI,bO[3])Process.WriteMemory(bL+1,bS[1])Process.WriteMemory(bM+1,bS[2])Process.WriteMemory(bN+1,bS[3])else Process.WriteMemory(bL+1,bS[4])Process.WriteMemory(bM+1,bS[5])Process.WriteMemory(bN+1,bS[6])Process.WriteMemory(bF,bO[2])Process.WriteMemory(bG,bO[2])Process.WriteMemory(bH,bO[2])Process.WriteMemory(bI,bO[2])end end}end;local function bY()local L=b["Assembly-CSharp"]()local bZ=b.FromName("UnityEngine.InputLegacyModule.dll")local b_=L.GetClass("","MVGameControllerBase")local c0=L.GetClass("","MVGameControllerDesktop")local c1=bZ.GetClass("UnityEngine","Input")local c2=L.GetClass("","MVInputWrapper")local c3=false;local c4=false;local a_={["checkbox1_colorpick"]={["Checked"]=false}}return{["Invoke"]=function()local c5=b_.GetProperty("GameMode").get()local c6=nil;if c5==0 then local c7=b_.GetProperty("EditModeUI").get()local c8=c7.Cast()c6=c8.GetProperty("EditModeStateMachine").get()elseif c5==2 then local g=c0.GetProperty("Instance").get()local c9=g.GetValue("modeController")local ca=c9.Cast()c6=ca.GetValue("editorStateMachine")end;if c6~=nil then local cb=c6.GetValue("cubeModelingStateMachine")local cc=cb.GetProperty("TargetCubeModel").get()if cc~=nil then local cd=cb.GetMethod("DoPicking")()if cd~=nil then local ce=cd.GetValue("pickedFace")local cf=cd.GetValue("cube")local cg=cf.GetValue("faceMaterials")local ch=cg.GetMethod("GetValue",{"int"})(ce)local ci=ch.Cast()cb.GetProperty("CurrentMaterialId").set(ci)end end end end,["Callback"]=function(self)local cj=a_.checkbox1_colorpick;if cj.Checked then if c2.GetProperty("IsAllInputSuppressed").get()==false then local ck=c1.GetMethod("GetKey",{"UnityEngine.KeyCode"})(325)if c3~=ck then c3=ck;c4=true end;if c4 and ck then self.Invoke()end end;c4=false elseif cj.Clicked and not cj.Checked then c4=false;c3=false end end,["OnGUI"]=function(self)local cj=a_["checkbox1_colorpick"]GUI.CheckBox("##checkbox1_colorpick",cj)GUI.SameLine()GUI.Label("Color Pick (Mouse 3)")end}end;local function cl()local L=b["Assembly-CSharp"]()local bZ=b.FromName("UnityEngine.InputLegacyModule.dll")local b_=L.GetClass("","MVGameControllerBase")local c0=L.GetClass("","MVGameControllerDesktop")local c2=L.GetClass("","MVInputWrapper")local c1=bZ.GetClass("UnityEngine","Input")local c3=false;local c4=false;local cm={["checkbox1_activeUiHotkey"]={["Checked"]=true}}return{["Invoke"]=function()local c5=b_.GetProperty("GameMode").get()if c5==0 then local c7=b_.GetProperty("EditModeUI").get()local c8=c7.Cast()local cn=c8.GetProperty("IsInPlayInEditMode").get()if not cn then local co=c8.GetProperty("gameObject").get()local cp=co.GetProperty("activeSelf").get()co.GetMethod("SetActive",{"bool"})(not cp)else local cq=b_.GetProperty("PlayModeUI").get()local cr=cq.Cast()local co=cr.GetProperty("gameObject").get()local cp=co.GetProperty("activeSelf").get()co.GetMethod("SetActive",{"bool"})(not cp)end elseif c5==1 then local cq=b_.GetProperty("PlayModeUI").get()local cr=cq.Cast()local co=cr.GetProperty("gameObject").get()local cp=co.GetProperty("activeSelf").get()co.GetMethod("SetActive",{"bool"})(not cp)elseif c5==2 then local g=c0.GetProperty("Instance").get()local c9=g.GetValue("modeController")local ca=c9.Cast()local co=ca.GetProperty("gameObject").get()local cp=co.GetProperty("activeSelf").get()co.GetMethod("SetActive",{"bool"})(not cp)end end,["Callback"]=function(self)local cs=cm.checkbox1_activeUiHotkey;if cs.Checked then if c2.GetProperty("IsAllInputSuppressed").get()==false then local ck=c1.GetMethod("GetKey",{"UnityEngine.KeyCode"})(106)if c3~=ck then c3=ck;c4=true end;if c4 and ck then self.Invoke()end end;c4=false elseif cs.Clicked and not cs.Checked then c4=false;c3=false end end,["OnGUI"]=function(self)local cs=cm.checkbox1_activeUiHotkey;GUI.CheckBox("##checkbox1_activeUiHotkey",cs)GUI.SameLine()GUI.Label("Toggle UI (J)")end}end;local function ct()local cu=b["Assembly-CSharp"]()local cv=b["UnityEngine.CoreModule"]()local bZ=b.FromName("UnityEngine.InputLegacyModule.dll")local cw=cv.GetClass("UnityEngine","Screen")local cx=cu.GetClass("","FullScreenController")local c1=bZ.GetClass("UnityEngine","Input")local c2=cu.GetClass("","MVInputWrapper")local c3=false;local c4=false;local a_={["checkbox1_fullScreenHotkey"]={["Checked"]=false}}return{["Invoke"]=function()local cy=cw.GetProperty("fullScreen").get()cx.GetProperty("FullScreen").set(not cy)end,["Callback"]=function(self)local cz=a_.checkbox1_fullScreenHotkey;if cz.Checked then if c2.GetProperty("IsAllInputSuppressed").get()==false then local ck=c1.GetMethod("GetKey",{"UnityEngine.KeyCode"})(292)if c3~=ck then c3=ck;c4=true end;if c4 and ck then self.Invoke()end end;c4=false elseif cz.Clicked and not cz.Checked then c4=false;c3=false end end,["OnGUI"]=function(self)local cz=a_["checkbox1_fullScreenHotkey"]GUI.CheckBox("##checkbox1_fullScreen",cz)GUI.SameLine()GUI.Label("Toggle FullScreen (F11)")end}end;if globalThis:Get("KoGaMa Plugin")==nil and Process.GetName()=="kogama.exe"then globalThis:Set("KoGaMa Plugin",true)local ba=s()local cA=K()local cB=ar()local cC=ax()local cD=aN()local cE=b9(ba)local cF=bd()local cG=bp()local cH=bY()local cI=cl()local cJ=ct()local cK=Process.GetModuleFromName("UnityPlayer.dll")local cL=Il2Cpp.Pointer(0x55BC77)Il2Cpp.SetMainUpdateHook(cK+cL)local cM=nil;local cN=function()local cO=Il2Cpp.ResolveIcall("UnityEngine.QualitySettings::set_vSyncCount")local cP={}cP.Application_set_targetFrameRate=function(j)local cQ=m.NewInt(j)ba["UnityEngine.Application.set_targetFrameRate"](cQ)end;cP.QualitySettings_set_vSyncCount=function(cR)local cS=m.NewInt(cR)local cT=m.GetPointer(cS)Process.Invoke(cO,cT)end;return cP end;local cU=cN()local cV=function()local bb=nil;Il2Cpp.RegisterInOneUpdate(function()bb=ba["UnityEngine.Application.get_main"]()end)return function(j)ba["UnityEngine.Application.set_aspect"](bb,m.NewFloat(j))end end;local cW=cV()local cX=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local cY=Il2Cpp.Class.FromName(M,"","ESCubeEdit")local cZ=Il2Cpp.Class.FromName(M,"","CEEditBodyUUI")local c_={ByteArray({0x31,0xC0}),ByteArray({0x89,0x01}),ByteArray({0xFF,0xD1})}local d0=l(cY:GetMethodFromName("Enter",1))+0x396;local d1=l(cZ:GetMethodFromName("Enter",1))+0x6B6;return function(bm)if bm then Process.WriteMemory(d0,c_[1])Process.WriteMemory(d1,c_[1])else Process.WriteMemory(d0,c_[2])Process.WriteMemory(d1,c_[3])end end end;local d2=cX()local d3=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local d4=Il2Cpp.Class.FromName(M,"","PaintCubes")local aj=Il2Cpp.Class.FromName(M,"","MVCubeModelBase")local d5=d4:GetMethodFromName("Execute",1)local d6=aj:GetMethodFromName("SetMaterial",3)local d7=aj:GetMethodFromName("ReplaceCube",2)local d8=l(d5)+0xAB;local d9=l(d5)+0x125;local da=l(d6)local db=l(d7)local dc=ByteArray({0x90,0x90,0x90,0x90,0x90,0x90,0x90})local dd=ByteArray({0x0F,0x84,0x9C,0x00,0x00,0x00})local de=ByteArray({0x55,0x8B,0xEC,0x83,0xEC,0x10,0x8B,0xDE,0x8B,0x5B,0x4C,0x8B,0x5B,0x0C,0xFF,0x75,0x14,0x53,0xFF,0x75,0x10,0xFF,0x75,0x0C,0xFF,0x75,0x08,0xE8,0x0,0x0,0x0,0x0,0x83,0xC4,0x20,0xC9,0xC3})local bi=Process.Alloc(nil,de.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local df=bi+0x1B;de:SetFromByteArray(0x1C,n.jump(df:ToInt(),da:ToInt()))Process.WriteMemory(bi,de)return function(bm)if bm then Process.WriteMemory(d8,dc)Process.WriteMemory(d9+1,n.jump(d9:ToInt(),bi:ToInt()))else Process.WriteMemory(d8,dd)Process.WriteMemory(d9+1,n.jump(d9:ToInt(),db:ToInt()))end end end;local dg=d3()local dh=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local di=Il2Cpp.Class.FromName(M,"","MaterialsController")local dj={ByteArray({0x8A,0x7F,0x0C}),ByteArray({0xB7,0x01,0x90})}local dk=l(di:GetMethodFromName("UpdateContent",0))+0x144;return function(bm)local dl=nil;if bm then dl=dj[2]else dl=dj[1]end;Process.WriteMemory(dk,dl)end end;local dm=dh()local dn=function()local dp={ByteArray({0xB8,0x00,0x00,0x00,0x00}),ByteArray({0x89,0x46,0x0C,0x90,0x90}),ByteArray({0xF3,0x0F,0x10,0x45,0x0C}),ByteArray({0xF3,0x0F,0x11,0x46,0x0C})}local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local dq=Il2Cpp.Class.FromName(M,"","CubeModelPopup")local dr=dq:GetMethodFromName("OnModelScalePressed",1)local d8=l(dr)+0x99;local ds=l(dr)+0XA1;return function(bm,j)if bm then Il2Cpp.Primitives.SetFloat(dp[1].Pointer+1,j)Process.WriteMemory(d8,dp[1])Process.WriteMemory(ds,dp[2])else Process.WriteMemory(d8,dp[3])Process.WriteMemory(ds,dp[4])end end end;local dt=dn()local du=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local u=t:AssemblyOpen("UnityEngine.CoreModule.dll")local v=u.Image;local dv=Il2Cpp.Class.FromName(M,"","ESRotating")local d5=dv:GetMethodFromName("Execute",1)local dw=Il2Cpp.Class.FromName(v,"UnityEngine","Vector3")local dx=dw:GetMethodFromName("get_up",0)local dy=ByteArray({0x55,0x8B,0xEC,0x8B,0x45,0x08,0x8D,0x15,0x00,0x00,0x00,0x00,0xF3,0x0F,0x7E,0x02,0x8B,0x4A,0x08,0x66,0x0F,0xD6,0x00,0x89,0x48,0x08,0xC9,0xC3,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00})local d8=l(d5)+0x49B;local ds=l(dx)local bi=Process.Alloc(nil,dy.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local dz=bi+0x1D;local dA=n.jump(d8:ToInt(),bi:ToInt())local dB=n.jump(d8:ToInt(),ds:ToInt())m.SetInt(dy.Pointer+8,dz:ToInt())Process.WriteMemory(bi,dy)return function(bm,dC)if bm~=nil then if bm then Process.WriteMemory(d8+1,dA)else Process.WriteMemory(d8+1,dB)end end;if dC~=nil then m.SetFloat(dz,dC[1])m.SetFloat(dz+4,dC[2])m.SetFloat(dz+8,dC[3])end end end;local dD=du()local dE=function()local dF=Il2Cpp.ResolveIcall("UnityEngine.Screen::SetResolution(System.Int32,System.Int32,UnityEngine.FullScreenMode,System.Int32)")local dG=ByteArray({0x55,0x8B,0xEC,0x8B,0x45,0x08,0x6A,0x00,0xFF,0x70,0x08,0xFF,0x70,0x04,0xFF,0x30,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x16,0xC9,0xC3})local dH=ByteArray(12)local bi=Process.Alloc(nil,dG.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)dG:SetFromByteArray(0x11,n.jump(bi:ToInt()+0x10,dF:ToInt()))Process.WriteMemory(bi,dG)return function(dI,dJ,dK)local dL=dH.Pointer;m.SetInt(dL,dI)m.SetInt(dL+4,dJ)m.SetInt(dL+8,dK)Process.Invoke(bi,dH.Pointer)end end;local dM=dE()local dN=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local dO=Il2Cpp.Class.FromName(M,"","MVBuildModeAvatarLocal/EditMode")local dP=dO:GetMethodFromName("MoveCharacter",1)local dQ=l(dP)+0x21;local bO={ByteArray({0x90,0xE9}),ByteArray({0x0F,0x84})}return function(bm)if bm then Process.WriteMemory(dQ,bO[1])else Process.WriteMemory(dQ,bO[2])end end end;local dR=dN()local dS=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local dT=Il2Cpp.Class.FromName(M,"","MVGameControllerBase")local dU=dT:GetMethodFromName("PostGameMsg",2)local dV=l(dU)+0x2D;local bO={ByteArray({0xEB}),ByteArray({0x74})}return function(bm)if bm then Process.WriteMemory(dV,bO[1])else Process.WriteMemory(dV,bO[2])end end end;local dW=dS()local dX=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local dY=Il2Cpp.Class.FromName(M,"","MVNetworkGame")local dZ=dY:GetMethodFromName("OnNotificationEventReceived",2)local d_=l(dZ)+0x2D;local bO={ByteArray({0xEB}),ByteArray({0x74})}return function(bm)if bm then Process.WriteMemory(d_,bO[1])else Process.WriteMemory(d_,bO[2])end end end;local e0=dX()local e1=function()local t=Il2Cpp.Domain.MainDomain;local e2=t:AssemblyOpen("Assembly-CSharp-firstpass.dll")local e3=e2.Image;local e4=Il2Cpp.Class.FromName(e3,"","Water")local e5=e4:GetMethodFromName("CreateWaterObjects",3)local e6=e4:GetMethodFromName("OnWillRenderObject",0)local e7=l(e5)+0xED;local e8=l(e6)+0x154;local e9=l(e6)+0x229;local ea=l(e6)+0x237;local bO={ByteArray({0x90,0x90,0x90}),ByteArray({0x90,0x90,0x90,0x90,0x90,0x90}),ByteArray({0x0F,0x4C,0xF7}),ByteArray({0x0F,0x85,0xFA,0x07,0x00,0x00}),ByteArray({0x0F,0x95,0xC1}),ByteArray({0x0F,0x4C,0xC1})}return function(bm)if bm then Process.WriteMemory(e7,bO[1])Process.WriteMemory(e8,bO[2])Process.WriteMemory(e9,bO[1])Process.WriteMemory(ea,bO[1])else Process.WriteMemory(e7,bO[3])Process.WriteMemory(e8,bO[4])Process.WriteMemory(e9,bO[5])Process.WriteMemory(ea,bO[6])end end end;local eb=e1()local ec=function()local ed=nil;return function()if ed==nil then local ee=Il2Cpp.String.FromAny(ba["UnityEngine.Application.get_version"]())ed=tostring(ee.Chars)end;return ed end end;local ef=ec()local eg=function()return{["FPS"]=function(self)return 1.0/self["get_deltaTime"]()end,["get_deltaTime"]=function()return m.GetFloat(ba["UnityEngine.Time.get_deltaTime"]().Unbox)end}end;local eh=eg()local ei=function()local t=Il2Cpp.Domain.MainDomain;local ej=t:AssemblyOpen("Photon3Unity3D.dll")local ek=ej.Image;local el=Il2Cpp.Class.FromName(ek,"ExitGames.Client.Photon","PhotonPeer")local em=el:GetMethodFromName("get_RoundTripTime",0)local en=nil;local eo=nil;return function()if en==nil then en=cA["MVGameControllerBase.get_Game"]()end;if eo==nil then eo=cA["MVNetworkGame.get_Peer"](en)end;local ep=Il2Cpp.Runtime.Invoke(em,eo,{},function(f)print("Error")end)return Il2Cpp.Primitives.GetInt(ep.Unbox)end end;local eq=ei()local er=function(es)local et=Il2Cpp.String(es)cA["TextCommand.NotifyUser"](et)end;local eu=function()return function(bm)local ev=cA["MVGameControllerBase.get_GameMode"]()local ew=m.GetInt(ev.Unbox)if ew~=2 then local g=cA["ThemeRepository.get_Instance"]()local ex=cA["ThemeRepository.get_CurrentThemeVisualization"](g)if ex.Pointer~=Il2Cpp.Pointer.Nil then if bm then cA["Theme.Activate"](ex)else cA["Theme.Deactivate"](ex)end end else local ex=cA["AvatarEditModeBodyController.Theme"].get()if ex.Pointer~=Il2Cpp.Pointer.Nil then if bm then cA["Theme.Activate"](ex)else cA["Theme.Deactivate"](ex)end end end end end;local ey=eu()local ez=function()local eA=nil;return function(eB)local ev=cA["MVGameControllerBase.get_GameMode"]()local ew=m.GetInt(ev.Unbox)if ew~=2 then local g=cA["ThemeRepository.get_Instance"]()local et=Il2Cpp.String(eB)if eA~=nil then cA["ThemeRepository.DestroyTemporary"](g,eA)eA=nil end;if eB~="Current"then eA=cA["ThemeRepository.CreateTemporaryThemeVisualization"](g,et)end else end end end;local eC=ez()local eD=function()local eE=Il2Cpp.SafePointer(1)return function(bm)local g=cA["AwayMonitor.instance"].get()m.SetBool(eE,not bm)cA["AwayMonitor.idleKickEnabled"].set(g,eE)end end;local eF=eD()local eG=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local dv=Il2Cpp.Class.FromName(M,"","ESRotating")local eH=Il2Cpp.Class.FromName(M,"","ESTranslate")local eI=Il2Cpp.Class.FromName(M,"","ESInsert")local eJ=dv:GetMethodFromName("DoGridSnapping",0)local eK=eH:GetMethodFromName("Enter",1)local eL=eI:GetMethodFromName("ComputeSnapPosition",2)local eM=l(eJ)+0xB5+4;local eN=l(eK)+0x1AF+4;local eO=l(eL)+0x6F+4;local eP=m.NewFloat(0.0625)local eQ=ByteArray(4)m.SetPointer(eQ.Pointer,eP.Pointer)Process.WriteMemory(eM,eQ)Process.WriteMemory(eN,eQ)Process.WriteMemory(eO,eQ)return function(j)m.SetFloat(eP,j)end end;local eR=eG()local eS=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local eT=Il2Cpp.Class.FromName(M,"","GizmoController")local eL=eT:GetMethodFromName("Handle",1)local eU=l(eL)+0x1BF+3;local eV=ByteArray(4)return function(j)m.SetFloat(eV,j)Process.WriteMemory(eU,eV)end end;local eW=eS()local eX=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local eY=Il2Cpp.Class.FromName(M,"","WinningConditionControl")local eZ=eY:GetMethodFromName("TryGetPrioritizedStat",1)local e_=l(eZ)+0x4E+2;local f0=ByteArray(1)return function(bm)m.SetBool(f0,bm)Process.WriteMemory(e_,f0)end end;local f1=eX()local f2=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local f3=Il2Cpp.Class.FromName(M,"","SelectionController")local f4=f3:GetMethodFromName("DeSelectAll",0)local f5=f3:GetMethodFromName("DeSelectAllExcept",1)local f6=l(f4)local f7=l(f5)local bO={ByteArray({0xC3}),ByteArray({0x55})}return function(bm)if bm then Process.WriteMemory(f6,bO[1])Process.WriteMemory(f7,bO[1])else Process.WriteMemory(f6,bO[2])Process.WriteMemory(f7,bO[2])end end end;local f8=f2()local f9=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local eH=Il2Cpp.Class.FromName(M,"","ESTranslate")local f4=eH:GetMethodFromName("GetDeltaMouse",1)local fa=l(f4)+0x3F1+4;local fb=l(f4)+0x40A+4;local fc=l(f4)+0x31B+4;local fd=m.NewFloat(0.005)local eQ=ByteArray(4)m.SetPointer(eQ.Pointer,fd.Pointer)Process.WriteMemory(fa,eQ)Process.WriteMemory(fb,eQ)Process.WriteMemory(fc,eQ)return function(j)m.SetFloat(fd,j)end end;local fe=f9()local ff=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local fg=Il2Cpp.Class.FromName(M,"","DeathUIBoostMenuController")local fh=fg:GetMethodFromName("Update",0)local fi=l(fh)+0x288;local fj={ByteArray({0x90,0x90,0x90,0x90,0x90,0x90}),ByteArray({0x0F,0x82,0xD5,0x00,0x00,0x00})}return function(bm)if bm then Process.WriteMemory(fi,fj[1])else Process.WriteMemory(fi,fj[2])end end end;local fk=ff()local fl=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local fg=Il2Cpp.Class.FromName(M,"","ESCubeEdit")local eK=fg:GetMethodFromName("Enter",1)local fm=l(eK)+0x928;local fj={ByteArray({0}),ByteArray({1})}return function(bm)if bm then Process.WriteMemory(fm,fj[1])else Process.WriteMemory(fm,fj[2])end end end;local fn=fl()local fo=function()return function()local fp=cA["MVGameControllerBase.get_EditModeUI"]()local fq=cA["MVGameControllerBase.get_WOCM"]()local fr=cA["DesktopEditModeController.contextMenuController"].get(fp)local fs=cA["ContextMenuController.woID"].get(fr)local ft=cA["MVWorldObjectClientManager.GetWorldObject"](fq,fs.Unbox)return ft end end;local fu=fo()local fv=function()local t=Il2Cpp.Domain.MainDomain;local L=t:AssemblyOpen("Assembly-CSharp.dll")local M=L.Image;local fw=Il2Cpp.Class.FromName(M,"","MVBuildModeAvatarLocal/EditMode")local fx=fw:GetMethodFromName("FrameUpdate",1)local fy=fw:GetMethodFromName("GetMovementVelocity",0)local fz=l(fx)+0x38;local ds=l(fy)local fA=ByteArray({0x55,0x89,0xE5,0x53,0x51,0x8B,0x45,0x0C,0x8D,0x1D,0x2E,0x00,0x00,0x00,0x8B,0x0B,0x89,0x48,0x44,0x8B,0x4B,0x04,0x89,0x48,0x48,0x6A,0x00,0x50,0xFF,0x75,0x08,0xE8,0xDC,0xFF,0xFF,0xFF,0x83,0xC4,0x0C,0x8B,0x45,0x08,0x59,0x5B,0xC9,0xC3,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x40})local fB=ByteArray(4)local bi=Process.Alloc(nil,fA.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local dA=n.jump(bi:ToInt()+0X1F,ds:ToInt())fA:SetFromByteArray(0x20,dA)m.SetInt(fA.Pointer+0xA,bi:ToInt()+0x2E)local dB=n.jump(fz:ToInt(),bi:ToInt())local fC=n.jump(fz:ToInt(),ds:ToInt())Process.WriteMemory(bi,fA)return function(bm,fD)if bm~=nil then if bm then Process.WriteMemory(fz+1,dB)else Process.WriteMemory(fz+1,fC)end end;if fD~=nil then m.SetFloat(fB,fD[1])Process.WriteMemory(bi+0x2E,fB)m.SetFloat(fB,fD[2])Process.WriteMemory(bi+0x2E+4,fB)end end end;local fE=fv()local fF=function(fG)local fH=nil;local fI=true;Il2Cpp.RegisterInUpdate("KoGaMaPlugin.CustomTexture",function()if fI then if fH==nil then local fG=Il2Cpp.String(fG)local fJ=Il2Cpp.Primitives.NewBool(false)fH=cC["UnityEngine.Networking.UnityWebRequestTexture.GetTexture"](fG,fJ)cC["UnityEngine.Networking.UnityWebRequest.SendWebRequest"](fH)else local fK=cC["UnityEngine.Networking.UnityWebRequest.get_isDone"](fH)local fL=Il2Cpp.Primitives.GetBool(fK.Unbox)if fL then local fM=cC["UnityEngine.Networking.DownloadHandler.GetContent"](fH)local fN=cA["MVGameControllerBase.get_MaterialLoader"]()cA["MaterialLoader.SetMainTexture"](fN,fM)cA["MaterialLoader.SetupMaterials"](fN)fI=false;Il2Cpp.UnregisterInUpdate("KoGaMaPlugin.CustomTexture")end end end end)end;local fO=function(fG)local fH=nil;local fI=true;Il2Cpp.RegisterInUpdate("KoGaMaPlugin.CustomCrossHair",function()if fI then if fH==nil then local fG=Il2Cpp.String(fG)local fJ=Il2Cpp.Primitives.NewBool(false)fH=cC["UnityEngine.Networking.UnityWebRequestTexture.GetTexture"](fG,fJ)cC["UnityEngine.Networking.UnityWebRequest.SendWebRequest"](fH)else local fK=cC["UnityEngine.Networking.UnityWebRequest.get_isDone"](fH)local fL=Il2Cpp.Primitives.GetBool(fK.Unbox)if fL then local fM=cC["UnityEngine.Networking.DownloadHandler.GetContent"](fH)local fP=cA["MVGameControllerBase.get_PlayModeUI"]()local fQ=cA["DesktopPlayModeController.GetCrossHair"](fP)local fR=cA["CrossHair.crossHair"].get(fQ)local fS=cB["UnityEngine.UI.Image.get_sprite"](fR)local fT=ba["UnityEngine.Sprite.get_pivot"](fS)local fU=ba["UnityEngine.Sprite.get_rect"](fS)local fV=ba["UnityEngine.Sprite.Create"](fM,fU.Unbox,fT.Unbox)cB["UnityEngine.UI.Image.set_sprite"](fR,fV)fI=false;Il2Cpp.UnregisterInUpdate("KoGaMaPlugin.CustomCrossHair")end end end end)end;local fW=function()local fX={}fX.Checked=false;fX.Clicked=false;return fX end;local a_={["checkbox1"]=fW(),["checkbox2"]=fW(),["checkbox3"]=fW(),["checkbox4"]=fW(),["checkbox5"]=fW(),["checkbox6"]=fW(),["checkbox7"]=fW(),["checkbox8"]=fW(),["checkbox9"]=fW(),["checkbox11"]={["Checked"]=true},["checkbox12"]=fW(),["checkbox13"]=fW(),["checkbox14"]=fW(),["checkbox15"]=fW(),["checkbox16"]=fW(),["checkbox17"]=fW(),["checkbox18"]=fW(),["comboxbox2"]={["Items"]={"Current","RoundSquare","Normal","Christmas","Puzzle","Scary","BoxPumpkin","RoundCircleSkull","Cartoon","Triangles","Pumpkin","Animals","Heart","SquareSkull","BoxHalloween","RoundSkull","BoxSkull","Candy","Square","RoundBoxSkull","RoundSquareSkull","Cloudy"},["SelectItem"]="Current",["SelectIndex"]=0},["inputfloat1"]={["Value"]=1,["Style.Width"]=70,["Format"]="%.2f"},["dragint1"]={["Value"]=60,["Style.Width"]=120,["Min"]=0},["inputfloat2"]={["Value"]=4,["Style.Width"]=70,["Format"]="%.2f"},["inputfloat3"]={["Value"]=3,["Style.Width"]=70,["Format"]="%.2f"},["inputint1"]={["Value"]=1280,["Style.Width"]=90},["inputint2"]={["Value"]=780,["Style.Width"]=90},["comboxbox1"]={["Items"]={"ExclusiveFullScreen","FullScreenWindow","MaximizedWindow","Windowed"},["SelectItem"]="Windowed",["SelectIndex"]=3},["plotlines1"]={["Values"]={}},["plotlines2"]={["Values"]={}},["inputfloat4"]={["Value"]=0.0625,["Style.Width"]=100,["Format"]="%.6f"},["inputfloat5"]={["Value"]=15,["Style.Width"]=100,["Format"]="%.2f"},["inputfloat6"]={["Value"]=0.005,["Style.Width"]=100,["Format"]="%.5f"},["inputfloat7"]={["Value"]=2,["Style.Width"]=100,["Format"]="%.2f"},["inputfloat8"]={["Value"]=2,["Style.Width"]=100,["Format"]="%.2f"},["textinput1"]={["Text"]="",["Width"]=250},["textinput2"]={["Text"]="",["Width"]=250}}local fY={["timing"]=0,["fps_value"]=0,["ping_value"]=0,["fps_values_index"]=0,["fps_values_len"]=30,["ping_values_index"]=0,["ping_values_len"]=30}local fZ=function()cM:Render(function(f_)if f_ then local g0=a_.checkbox1;local g1=a_.checkbox2;local g2=a_.inputfloat1;local g3=a_.dragint1;local g4=a_.checkbox3;local g5=a_.checkbox4;local g6=a_.comboxbox1;local g7=a_.checkbox5;local g8=a_.inputfloat2;local g9=a_.inputfloat3;local ga=a_.inputint1;local gb=a_.inputint2;local gc=a_.checkbox6;local gd=a_.checkbox7;local ge=a_.checkbox8;local gf=a_.checkbox9;local gg=a_.checkbox11;local gh=a_.plotlines1;local gi=a_.plotlines2;local gj=a_.comboxbox2;local gk=a_.checkbox12;local gl=a_.inputfloat4;local gm=a_.inputfloat5;local gn=a_.checkbox13;local go=a_.checkbox14;local gp=a_.inputfloat6;local gq=a_.checkbox15;local gr=a_.inputfloat7;local gs=a_.inputfloat8;local gt=a_.checkbox16;local gu=a_.textinput1;local gv=a_.textinput2;local gw=a_.checkbox17;local gx=a_.checkbox18;if GUI.CollapsingHeader("Build##collapsingheader_Build")then GUI.CheckBox("##checkbox1",g0)if g0.Clicked then d2(g0.Checked)end;GUI.SameLine()GUI.Label("No Build Limit")GUI.CheckBox("##checkbox2",g1)if g1.Clicked then dm(g1.Checked)end;GUI.SameLine()GUI.Label("Free Materials")GUI.CheckBox("##checkbox3",g4)if g4.Clicked then dg(g4.Checked)end;GUI.SameLine()GUI.Label("Custom Face Model")GUI.CheckBox("##checkbox4",g5)if g5.Clicked and not g5.Checked then dt(false,0)end;GUI.SameLine()GUI.Label("Custom Model Size")if g5.Checked then GUI.Label("Model Size")GUI.SameLine()GUI.InputFloat("##inputfloat1",g2)if g2.Changed then if g2.Value>0 and g2.Value<50 then dt(true,g2.Value)end end end;GUI.CheckBox("##checkbox5",g7)GUI.SameLine()GUI.Label("Rotation Custom")if g7.Clicked then if g7.Checked then er("< X > Press to rotate model on an X axis\n< Y > Press to rotate model on an Y axis\n< Z > Press to rotate model on an Z axis")end;dD(g7.Checked)end;if g7.Checked then if Process.KeyIsDown(90)then dD(nil,{0,1,0})elseif Process.KeyIsDown(89)then dD(nil,{1,0,0})elseif Process.KeyIsDown(88)then dD(nil,{0,0,1})end end;GUI.CheckBox("##checkbox6",gc)GUI.SameLine()GUI.Label("Free Edit Speed Movement")if gc.Clicked then dR(gc.Checked)end;cG:OnGUI()GUI.Label("Custom Grid")GUI.SameLine()GUI.InputFloat("##inputfloat4",gl)if gl.Changed and gl.Value>0 then eR(gl.Value)end;GUI.Label("Rotation Custom Speed")GUI.SameLine()GUI.InputFloat("##inputfloat5",gm)if gm.Changed and gm.Value>0 then eW(gm.Value)end;GUI.CheckBox("##checkbox14",go)GUI.SameLine()GUI.Label("MultiSelect BETA")if go.Clicked then f8(go.Checked)end;GUI.Label("Custom Speed Translate")GUI.SameLine()GUI.InputFloat("##inputfloat6",gp)if gp.Changed and gp.Value>0 and gp.Value<0.5 then fe(gp.Value)end;GUI.CheckBox("##checkbox15",gq)GUI.SameLine()GUI.Label("Edit Mode Speed Hack")if gq.Clicked then fE(gq.Checked,nil)end;if gq.Checked then GUI.Label("Y Speed")GUI.SameLine()GUI.InputFloat("##inputfloat7",gr)GUI.Label("XZ Speed")GUI.SameLine()GUI.InputFloat("##inputfloat8",gs)if gr.Changed or gs.Changed then fE(nil,{math.min(gr.Value,20),math.min(gs.Value,20)})end end;GUI.CheckBox("##checkbox18",gx)GUI.SameLine()GUI.Label("Model Edit Background")if gx.Clicked then fn(gx.Checked)end;cH:OnGUI()end;if GUI.CollapsingHeader("PvP##collapsingheader_PvP")then GUI.Label("FPS")GUI.SameLine()GUI.DragInt("##dragint1",g3)if g3.Changed then if g3.Value>15 then cU.Application_set_targetFrameRate(g3.Value)cU.QualitySettings_set_vSyncCount(0)end end;GUI.Label("Aspect Ration")GUI.SameLine()GUI.InputFloat("##inputfloat2",g8)GUI.SameLine()GUI.Label(" : ")GUI.SameLine()GUI.InputFloat("##inputfloat3",g9)GUI.SameLine()if GUI.Button("OK##button1")then if g8.Value>0 and g9.Value>0 then cW(g8.Value/g9.Value)end end;GUI.Label("Resolution")GUI.SameLine()GUI.InputInt("##inputint1",ga)GUI.SameLine()GUI.Label(" x ")GUI.SameLine()GUI.InputInt("##inputint2",gb)GUI.ComboBox("##comboxbox1",g6)GUI.SameLine()if GUI.Button("OK##button2")then if ga.Value>0 and gb.Value>0 then dM(ga.Value,gb.Value,g6.SelectIndex)end end;GUI.CheckBox("##checkbox13",gn)GUI.SameLine()GUI.Label("Kill Count")if gn.Clicked then f1(gn.Checked)end;GUI.CheckBox("##checkbox17",gw)GUI.SameLine()GUI.Label("Fast Respawn")if gw.Clicked then fk(gw.Checked)end;cF:OnGUI()end;if GUI.CollapsingHeader("Texture##collapsingheader_PvP")then GUI.TextInput("##textinput1",gu)if GUI.Button("Custom Texture Materials ##button4")then fF(gu.Text)end;GUI.TextInput("##textinput2",gv)if GUI.Button("Texture Crosshair ##button5")then fO(gv.Text)end end;if GUI.CollapsingHeader("Interface##collapsingheader_Interface")then cD:OnGUI()GUI.CheckBox("##checkbox7",gd)GUI.SameLine()GUI.Label("No Chat")if gd.Clicked then dW(gd.Checked)end;GUI.CheckBox("##checkbox8",ge)GUI.SameLine()GUI.Label("No Notification")if ge.Clicked then e0(ge.Checked)end;cI:OnGUI()cJ:OnGUI()end;if GUI.CollapsingHeader("Quality##collapsingheader_Quality")then GUI.CheckBox("##checkbox9",gf)GUI.SameLine()GUI.Label("Water Reflective")if gf.Clicked then eb(gf.Checked)end;GUI.CheckBox("##checkbox11",gg)GUI.SameLine()GUI.Label("Theme")if gg.Clicked then ey(gg.Checked)end;GUI.ComboBox("##comboxbox2",gj)GUI.SameLine()local gy=GUI.Button("OK##button3")if gg.Checked and gy then eC(gj.SelectItem)end;GUI.CheckBox("##checkbox12",gk)GUI.SameLine()GUI.Label("Anti AFK")if gk.Clicked then eF(gk.Checked)end;cE:OnGUI()end;fY.timing=fY.timing+eh["get_deltaTime"]()if fY.timing>0.3 then fY.fps_value=eh:FPS()fY.ping_value=eq()fY.timing=0;if fY.fps_values_index<fY.fps_values_len then fY.fps_values_index=fY.fps_values_index+1;gh.Values[fY.fps_values_index]=fY.fps_value else for gz=1,fY.fps_values_len-1,1 do gh.Values[gz]=gh.Values[gz+1]end;gh.Values[fY.fps_values_len]=fY.fps_value end;if fY.ping_values_index<fY.ping_values_len then fY.ping_values_index=fY.ping_values_index+1;gi.Values[fY.ping_values_index]=fY.ping_value else for gz=1,fY.ping_values_len-1,1 do gi.Values[gz]=gi.Values[gz+1]end;gi.Values[fY.ping_values_len]=fY.ping_value end end;if GUI.CollapsingHeader("Config and Info##collapsingheader_Quality")then GUI.CheckBox("##checkbox16",gt)GUI.SameLine()if gt.Checked then GUI.Label("Light")else GUI.Label("Dark")end;GUI.Label(string.format("FPS: %.0f",fY.fps_value))GUI.SameLine()GUI.PlotLines("##plotlines1",gh)GUI.Label(string.format("Ping: %dms",fY.ping_value))GUI.SameLine()GUI.PlotLines("##plotlines2",gi)GUI.Label("KoGaMa Version: "..ef())GUI.Label("Helper: Henrique")GUI.Label("Created By Maury")if gt.Clicked then if gt.Checked then cM:StyleLight()else cM:StyleDark()end end end;do cI:Callback()cH:Callback()cJ:Callback()end end end)end;Il2Cpp.RegisterInOneUpdate(function()cM=Window("KoGaMa Plugin")local gA=Size(400,300)cM.Size=gA;Il2Cpp.RegisterInUpdate(tostring(cM),fZ)end)end
