local a=require("Helper")local b=a.AssemblyInfo;local c=function(d,e)if e then return function(...)return Il2Cpp.Runtime.Invoke(d,nil,{...},function(f)print("Error")end)end else return function(g,...)return Il2Cpp.Runtime.Invoke(d,g,{...},function(f)print("Error")end)end end end;local h=function(i,e)if e then return{["get"]=function()return i:GetValueObject(Il2Cpp.Object.FromAny(nil))end,["set"]=function(j)i:StaticSetValue(j)end}else return{["get"]=function(k)return i:GetValueObject(k)end,["set"]=function(k,j)i:SetValue(k,j)end}end end;local l=function(d)return Primitives.GetPointer(d.Address)end;local Primitives=Primitives;local m={["jump"]=function(n,o)local p=o-n-5;local q=ByteArray(4)Primitives.SetInt(q,p)return q end}local r=function()local s=b.FromName("Assembly-CSharp.dll")local t=b.FromName("mscorlib.dll")local u=b.FromName("UnityEngine.CoreModule.dll")local v=s.GetClass("","MVInputWrapper")local w=t.GetClass("System","Enum")local x=s.GetClass("","KogamaControls")local y=x.klass().Type.Object;local z=u.GetClass("UnityEngine","KeyCode")local A=z.klass().Type.Object;local B={["comboxbox_keybind1"]={["Items"]={"Jump","MoveForward","MoveBackwards","MoveLeft","MoveRight","Fire"},["SelectItem"]="Jump",["SelectIndex"]=0},["textinput_keybind1"]={["Text"]=""}}return{["OnGUI"]=function(self)local C=B["comboxbox_keybind1"]local D=B["textinput_keybind1"]GUI.ComboBox("##comboxbox_keybind1",C)GUI.TextInput("##textinput_keybind1",D)if GUI.Button("Change##button_keybind1")then self.Keybind(C.SelectItem,D.Text)end end,["Keybind"]=function(E,F)local G=v.GetValue("inputMap").Cast()local H=G.GetValue("keyMapping")local E=w.GetMethod("Parse",{"System.Type","System.String"})(y,E)local F=w.GetMethod("Parse",{"System.Type","System.String"})(A,F)local I=H.GetProperty("Item",{"KogamaControls"}).get(E)I.GetMethod("SetValue",{"System.Object","System.Int32"})(F,0)end}end;local J=function()local K=b.FromName("UnityEngine.CoreModule.dll")local L=K.GetClass("UnityEngine","Camera")local M=nil;Unity.RegisterInOneUpdate(function()M=L.GetProperty("main").get()end)local B={["inputfloat_customdrawdistance1"]={["Value"]=400.0,["Style.Width"]=70,["Format"]="%.2f"}}return{["OnGUI"]=function(self)local N=B.inputfloat_customdrawdistance1;GUI.Label("Custom Draw Distance")GUI.SameLine()GUI.InputFloat("##inputfloat_customdrawdistance1",N)GUI.SameLine()if GUI.Button("OK##button_customdrawdistance1")then self.Callback(N.Value)end end,["Callback"]=function(j)M.GetProperty("farClipPlane").set(j)end}end;local O=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local R=Il2Cpp.Class.FromName(Q,"","CrossHair")local S=R:GetMethodFromName("UpdateCrossHair",1)local T=l(S)local U=T+0x56;local V=ByteArray({0x55,0x8B,0xEC,0xB8,0x00,0x00,0x00,0x00,0xC9,0xC3,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3F})local W=Process.Alloc(nil,V.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)Primitives.SetInt(V.Address+0x04,W:ToInt()+0x0A)Process.WriteMemory(W,V)local X={ByteArray({0x8B,0x88,0xEC,0x00,0x00,0x00}),ByteArray({0xB9,0x00,0x00,0x00,0x00,0x90})}Primitives.SetInt(X[2].Address+0x01,W:ToInt())local B={["coloredit4_customcrosshaircolor1"]={["Color"]=GUI.Color(0,1,0,1),["Style.Width"]=120},["checkbox_customcrosshaircolor1"]={["Checked"]=false}}return{["OnGUI"]=function(self)local Y=B.coloredit4_customcrosshaircolor1;local Z=B.coloredit4_customcrosshaircolor1;GUI.CheckBox("##checkbox_customcrosshaircolor1",Z)GUI.SameLine()GUI.Label("Custom Color CrossHair")if Z.Clicked then self.Callback(Z.Checked,nil)end;if Z.Checked then GUI.ColorEdit4("##coloredit4_customcrosshaircolor1",Y)if Y.Changed then self.Callback(nil,Y.Color)end end end,["Callback"]=function(_,a0)if _~=nil then if _ then Process.WriteMemory(U,X[2])else Process.WriteMemory(U,X[1])end end;if a0~=nil then local a1=W+0x0A;Primitives.SetFloat(a1,a0.R)Primitives.SetFloat(a1+4,a0.G)Primitives.SetFloat(a1+8,a0.B)Primitives.SetFloat(a1+12,a0.A)end end}end;local a2=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local a3=P:AssemblyOpen("UnityEngine.UI.dll")local a4=a3.Image;local a5=Il2Cpp.Class.FromName(a4,"UnityEngine.UI","InputField")local a6=Il2Cpp.Class.FromName(Q,"","SettingsSlider")local a7=Il2Cpp.Class.FromName(Q,"","SettingsInputFieldSlider")local a8=Il2Cpp.Class.FromName(Q,"","SettingsInputField")local a9=a8:GetMethodFromName("Initialize",2)local aa=a5:GetMethodFromName("set_text",1)local ab=a5:GetMethodFromName("set_characterLimit",1)local ac=a7.Methods;local ad=nil;local ae=nil;for af,d in pairs(ac)do if d.ParamCount==2 and d.Name=="Initialize"then local ag=d:GetParam(1).Name;if ag=="System.Single"then ad=d elseif ag=="System.Int32"then ae=d end end end;local ah=a6.Methods;local ai=nil;local aj=nil;for af,d in pairs(ah)do if d.ParamCount==4 and d.Name=="Initialize"then local ag=d:GetParam(1).Name;if ag=="System.Single"then ai=d elseif ag=="System.Int32"then aj=d end end end;local ak=l(aj)+0x2A;local al=l(ai)+0x27;local am=l(aj)+0x4A;local an=l(ai)+0x44;local ao=l(aa)local ap=l(ab)local aq=l(a9)+0x59;local ar=l(ad)+0xA2;local as=l(ae)+0xA5;local at={ByteArray({0x68,0x00,0x50,0xC3,0x47,0x90}),ByteArray({0x51,0xF3,0x0F,0x11,0x04,0x24}),ByteArray({0x68,0x00,0x00,0x00,0x00,0x90})}local au=ByteArray({0x55,0x89,0xE5,0xFF,0x75,0x0C,0xFF,0x75,0x08,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x08,0x68,0xE8,0x03,0x00,0x00,0xFF,0x75,0x08,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x08,0xC9,0xC3})local W=Process.Alloc(nil,au.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local av=W+0x9;local aw=W+0x19;au:SetFromByteArray(0xA,m.jump(av:ToInt(),ao:ToInt()))au:SetFromByteArray(0x1A,m.jump(aw:ToInt(),ap:ToInt()))local ax={m.jump(aq:ToInt(),W:ToInt()),m.jump(ar:ToInt(),W:ToInt()),m.jump(as:ToInt(),W:ToInt()),m.jump(aq:ToInt(),ao:ToInt()),m.jump(ar:ToInt(),ao:ToInt()),m.jump(as:ToInt(),ao:ToInt())}Process.WriteMemory(W,au)local B={["unlimitconfig_checkbox1"]={["Checked"]=false},["unlimitconfig_input1"]={["Value"]=100000,["Style.Width"]=70,["Format"]="%.2f"},["unlimitconfig_input2"]={["Value"]=0,["Style.Width"]=70,["Format"]="%.2f"}}return{["OnGUI"]=function(self)local ay=B.unlimitconfig_checkbox1;local az=B.unlimitconfig_input1;local aA=B.unlimitconfig_input2;GUI.CheckBox("##unlimitconfig_checkbox1",ay)GUI.SameLine()GUI.Label("Unlimited Config")if ay.Clicked then self.Callback(ay.Checked,nil,nil)end;if ay.Checked then GUI.Label("Max Value")GUI.SameLine()GUI.InputFloat("##unlimitconfig_input1",az)GUI.Label("Min Value")GUI.SameLine()GUI.InputFloat("##unlimitconfig_input2",aA)if az.Changed or aA.Changed then self.Callback(ay.Checked,az.Value,aA.Value)end end end,["Callback"]=function(_,aB,aC)if aB~=nil then Primitives.SetFloat(at[1].Address+1,aB)end;if aC~=nil then Primitives.SetFloat(at[3].Address+1,aC)end;if _ then Process.WriteMemory(ak,at[1])Process.WriteMemory(al,at[1])Process.WriteMemory(am,at[3])Process.WriteMemory(an,at[3])Process.WriteMemory(aq+1,ax[1])Process.WriteMemory(ar+1,ax[2])Process.WriteMemory(as+1,ax[3])else Process.WriteMemory(aq+1,ax[4])Process.WriteMemory(ar+1,ax[5])Process.WriteMemory(as+1,ax[6])Process.WriteMemory(ak,at[2])Process.WriteMemory(al,at[2])Process.WriteMemory(am,at[2])Process.WriteMemory(an,at[2])end end}end;local function aD()local s=b["Assembly-CSharp"]()local aE=b.FromName("UnityEngine.InputLegacyModule.dll")local aF=s.GetClass("","MVGameControllerBase")local aG=s.GetClass("","MVGameControllerDesktop")local aH=aE.GetClass("UnityEngine","Input")local aI=s.GetClass("","MVInputWrapper")local aJ=false;local aK=false;local B={["checkbox1_colorpick"]={["Checked"]=false}}return{["Invoke"]=function()local aL=aF.GetProperty("GameMode").get()local aM=nil;if aL==0 then local aN=aF.GetProperty("EditModeUI").get()local aO=aN.Cast()aM=aO.GetProperty("EditModeStateMachine").get()elseif aL==2 then local g=aG.GetProperty("Instance").get()local aP=g.GetValue("modeController")local aQ=aP.Cast()aM=aQ.GetValue("editorStateMachine")end;if aM~=nil then local aR=aM.GetValue("cubeModelingStateMachine")local aS=aR.GetProperty("TargetCubeModel").get()if aS~=nil then local aT=aR.GetMethod("DoPicking")()if aT~=nil then local aU=aT.GetValue("pickedFace")local aV=aT.GetValue("cube")local aW=aV.GetValue("faceMaterials")local aX=aW.GetMethod("GetValue",{"int"})(aU)local aY=aX.Cast()aR.GetProperty("CurrentMaterialId").set(aY)end end end end,["Callback"]=function(self)local aZ=B.checkbox1_colorpick;if aZ.Checked then if aI.GetProperty("IsAllInputSuppressed").get()==false then local a_=aH.GetMethod("GetKey",{"UnityEngine.KeyCode"})(325)if aJ~=a_ then aJ=a_;aK=true end;if aK and a_ then self.Invoke()end end;aK=false elseif aZ.Clicked and not aZ.Checked then aK=false;aJ=false end end,["OnGUI"]=function(self)local aZ=B["checkbox1_colorpick"]GUI.CheckBox("##checkbox1_colorpick",aZ)GUI.SameLine()GUI.Label("Color Pick (Mouse 3)")end}end;local function b0()local s=b["Assembly-CSharp"]()local aE=b.FromName("UnityEngine.InputLegacyModule.dll")local aF=s.GetClass("","MVGameControllerBase")local aG=s.GetClass("","MVGameControllerDesktop")local aI=s.GetClass("","MVInputWrapper")local aH=aE.GetClass("UnityEngine","Input")local aJ=false;local aK=false;local b1={["checkbox1_activeUiHotkey"]={["Checked"]=false}}return{["Invoke"]=function()local aL=aF.GetProperty("GameMode").get()if aL==0 then local aN=aF.GetProperty("EditModeUI").get()local aO=aN.Cast()local b2=aO.GetProperty("IsInPlayInEditMode").get()if not b2 then local b3=aO.GetProperty("gameObject").get()local b4=b3.GetProperty("activeSelf").get()b3.GetMethod("SetActive",{"bool"})(not b4)else local b5=aF.GetProperty("PlayModeUI").get()local b6=b5.Cast()local b3=b6.GetProperty("gameObject").get()local b4=b3.GetProperty("activeSelf").get()b3.GetMethod("SetActive",{"bool"})(not b4)end elseif aL==1 then local b5=aF.GetProperty("PlayModeUI").get()local b6=b5.Cast()local b3=b6.GetProperty("gameObject").get()local b4=b3.GetProperty("activeSelf").get()b3.GetMethod("SetActive",{"bool"})(not b4)elseif aL==2 then local g=aG.GetProperty("Instance").get()local aP=g.GetValue("modeController")local aQ=aP.Cast()local b3=aQ.GetProperty("gameObject").get()local b4=b3.GetProperty("activeSelf").get()b3.GetMethod("SetActive",{"bool"})(not b4)end end,["Callback"]=function(self)local b7=b1.checkbox1_activeUiHotkey;if b7.Checked then if aI.GetProperty("IsAllInputSuppressed").get()==false then local a_=aH.GetMethod("GetKey",{"UnityEngine.KeyCode"})(106)if aJ~=a_ then aJ=a_;aK=true end;if aK and a_ then self.Invoke()end end;aK=false elseif b7.Clicked and not b7.Checked then aK=false;aJ=false end end,["OnGUI"]=function(self)local b7=b1.checkbox1_activeUiHotkey;GUI.CheckBox("##checkbox1_activeUiHotkey",b7)GUI.SameLine()GUI.Label("Toggle UI (J)")end}end;local function b8()local b9=b["Assembly-CSharp"]()local ba=b["UnityEngine.CoreModule"]()local aE=b.FromName("UnityEngine.InputLegacyModule.dll")local bb=ba.GetClass("UnityEngine","Screen")local bc=b9.GetClass("","FullScreenController")local aH=aE.GetClass("UnityEngine","Input")local aI=b9.GetClass("","MVInputWrapper")local aJ=false;local aK=false;local B={["checkbox1_fullScreenHotkey"]={["Checked"]=false}}return{["Invoke"]=function()local bd=bb.GetProperty("fullScreen").get()bc.GetProperty("FullScreen").set(not bd)end,["Callback"]=function(self)local be=B.checkbox1_fullScreenHotkey;if be.Checked then if aI.GetProperty("IsAllInputSuppressed").get()==false then local a_=aH.GetMethod("GetKey",{"UnityEngine.KeyCode"})(292)if aJ~=a_ then aJ=a_;aK=true end;if aK and a_ then self.Invoke()end end;aK=false elseif be.Clicked and not be.Checked then aK=false;aJ=false end end,["OnGUI"]=function(self)local be=B["checkbox1_fullScreenHotkey"]GUI.CheckBox("##checkbox1_fullScreen",be)GUI.SameLine()GUI.Label("Toggle FullScreen (F11)")end}end;local function bf()local s=b["Assembly-CSharp"]()local aF=s.GetClass("","MVGameControllerBase")local bg=s.GetClass("","ThemeRepository")local bh=s.GetClass("","AvatarEditModeBodyController")local bi=nil;local B={["checkbox1_themeUtils"]={["Checked"]=true},["button1_themeUtils"]={},["button2_themeUtils"]={},["comboxbox1_themeUtils"]={["Items"]={"Current","RoundSquare","Normal","Christmas","Puzzle","Scary","BoxPumpkin","RoundCircleSkull","Cartoon","Triangles","Pumpkin","Animals","Heart","SquareSkull","BoxHalloween","RoundSkull","BoxSkull","Candy","Square","RoundBoxSkull","RoundSquareSkull","Cloudy"},["SelectItem"]="Current",["SelectIndex"]=0}}return{["EnableTheme"]=function(_)local aL=aF.GetProperty("GameMode").get()if aL~=2 then local bj=bg.GetProperty("Instance").get()local bk=bj.GetProperty("CurrentThemeVisualization").get()if bk~=nil then if _ then bk.GetMethod("Activate")()else bk.GetMethod("Deactivate")()end end else local bl=bh.GetValue("Theme")if bl~=nil then if _ then bl.GetMethod("Activate")()else bl.GetMethod("Deactivate")()end end end end,["CreateThemePreview"]=function(ag)local aL=aF.GetProperty("GameMode").get()if aL~=2 then local bj=bg.GetProperty("Instance").get()if bi~=nil then bj.GetMethod("DestroyTemporary",{"Theme"})(bi)bi=nil end;if ag~="Current"then bi=bj.GetMethod("CreateTemporaryThemeVisualization",{"string"})(ag)local bm=bi.Cast()end else end end,["SetupThemePreview"]=function(bn,j)if bi~=nil then local bm=bi.Cast()if bn=="dayNightCycle"then bm.GetMethod("ToggleDayNightCycle",{"bool"})(j)elseif bn=="useServerTime"then bm.GetMethod("ToggleDayNightCycleUseServerTime",{"bool"})(j)end end end,["GetInfoTheme"]=function(bn,bo)if bi~=nil then local bm=bi.Cast()if bn=="dayNightCycle"then local bp=bm.GetValue("dayNightCycle")local b4=bp.GetProperty("enabled").get()return b4 elseif bn=="useServerTime"then local bp=bm.GetValue("dayNightCycle")local bq=bp.GetValue("useServerTime")return bq end else return bo end end,["OnGUI"]=function(self)local br=B["checkbox1_themeUtils"]local bs=B["comboxbox1_themeUtils"]GUI.CheckBox("##checkbox1_themeUtils",br)GUI.SameLine()GUI.Label("Theme")if br.Clicked then self.EnableTheme(br.Checked)end;GUI.ComboBox("##comboxbox1_themeUtils",bs)GUI.SameLine()local bt=GUI.Button("OK##button1_themeUtils")if br.Checked and bt then self.CreateThemePreview(bs.SelectItem)end;local bu=GUI.Button("Theme Config##button2_themeUtils")if bu then local bv=self;bv:CreateThemeConfig()end end,["CreateThemeConfig"]=function(self)if bi==nil then return end;local bw={["checkbox1_themeUtils"]={["Checked"]=self.GetInfoTheme("dayNightCycle",false)},["checkbox2_themeUtils"]={["Checked"]=self.GetInfoTheme("useServerTime",false)}}Unity.RegisterInOneUpdate(function()local bx=5;local by=Window("Theme Config")local bz=Size(400,300)by.Size=bz;local bA=tostring(by)Unity.RegisterInUpdate(bA,function()by:Render(function(bB)if bB then local br=bw.checkbox1_themeUtils;local bC=bw.checkbox2_themeUtils;GUI.CheckBox("##checkbox1_themeUtils",br)GUI.SameLine()GUI.Label("DayNightCycle")if br.Clicked then self.SetupThemePreview("dayNightCycle",br["Checked"])end;GUI.CheckBox("##checkbox2_themeUtils",bC)GUI.SameLine()GUI.Label("UseServerTime")if bC.Clicked then self.SetupThemePreview("useServerTime",bC["Checked"])end else bx=bx-1;if bx==0 then Unity.RegisterInUpdate(bA)end end end)end)end)end}end;local function bD()local bE=Il2Cpp.ResolveIcall("UnityEngine.QualitySettings::set_shadowDistance")local bF=ByteArray({0x55,0x89,0xE5,0x8B,0x5D,0x08,0xFF,0x73,0x04,0xFF,0x13,0x83,0xC4,0x04,0xC9,0xC3})local W=Process.Alloc(nil,bF.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)Process.WriteMemory(W,bF)local bG=ByteArray(8)local bH={["inputfloat1_shadowDistance"]={["Value"]=70,["Style.Width"]=70,["Format"]="%.2f"}}return{["Invoke"]=function(j)if j>0 then local bI=Primitives.NewFloat(j)local bJ=Primitives.GetPointer(bI.Address)Process.Invoke(bE,bJ)end end,["OnGUI"]=function(self)local bK=bH.inputfloat1_shadowDistance;GUI.Label("Shadow Distance")GUI.SameLine()GUI.InputFloat("##inputfloat1_shadowDistance",bK)if bK.Changed then self.Invoke(bK.Value)end end}end;local function bL()local B={["checkbox1_antiafk"]={["Checked"]=false}}return{["OnGUI"]=function(self)local bM=B["checkbox1_antiafk"]GUI.CheckBox("##checkbox1_antiafk",bM)GUI.SameLine()GUI.Label("Anti AFK")if bM.Clicked then self.Callback(bM.Checked)end end,["Callback"]=function(_)local bN=b["Assembly-CSharp"]()local bO=bN.GetClass("","AwayMonitor")local g=bO.GetValue("instance")g.SetValue("idleKickEnabled",not _)end}end;local function bP()local bN=b["Assembly-CSharp"]()local aE=b.FromName("UnityEngine.InputLegacyModule.dll")local bQ=bN.GetClass("","EditModeObjectPicker")local bR=bN.GetClass("","VoxelHit")local bS=bN.GetClass("","MVGameControllerBase")local aI=bN.GetClass("","MVInputWrapper")local aH=aE.GetClass("UnityEngine","Input")local aJ=false;local aK=false;local function bT()local bU=bR.New()local bV=bQ.GetMethod("Pick",{"VoxelHit&","System.Collections.Generic.HashSet<System.Int32>","System.Int32"})local bW=bV(bU,nil,-262149)if bW then local bX=bU.GetValue("woId")return bX else return-1 end end;local bY={}local bZ={}bZ["AddItem"]=function()local b_=bT()table.insert(bY,b_)print(b_)end;bZ["Reset"]=function()bY={}end;bZ["Clone"]=function()local c0=bS.GetProperty("OperationRequests").get()local c1=bS.GetProperty("WOCM").get()local d=c0.GetMethod("CloneWorldObjectTree",{"MVWorldObjectClient","bool","bool","bool"})local c2=c1.GetMethod("GetWorldObject",{"int"})for c3=1,#bY,1 do local c4=c2(bY[c3]).Cast()if c4~=nil then local c5=c4.GetMethod("HasInteractionFlag",{"InteractionFlags"})if c5(8192)and not c5(131072)then d(c4,false,false,false)end end end end;bZ["OnGUI"]=function()GUI.Separator()GUI.Label("Multi Clone (F1)")if GUI.Button("Clone##button1_multiclone")then try(function()bZ["Clone"]()end,function(f)print(f)end)end;GUI.SameLine()if GUI.Button("Reset##button2_multiclone")then bZ["Reset"]()end end;bZ["Callback"]=function()if aI.GetProperty("IsAllInputSuppressed").get()==false then local a_=aH.GetMethod("GetKey",{"UnityEngine.KeyCode"})(0x11A)if aJ~=a_ then aJ=a_;aK=true end;if aK and a_ then try(function()bZ["AddItem"]()end,function(f)print(f)end)end end;aK=false end;return bZ end;local function c6()local c7=b.FromName("UnityEngine.UnityWebRequestTextureModule.dll")local c8=b.FromName("Assembly-CSharp.dll")local c9=c7.GetClass("UnityEngine.Networking","UnityWebRequestTexture")local ca=c7.GetClass("UnityEngine.Networking","DownloadHandlerTexture")local bS=c8.GetClass("","MVGameControllerBase")local function cb(cc,cd)local ce=c9.GetMethod("GetTexture",{"string"})(cc)ce.GetMethod("SendWebRequest")()local ag=tostring(ce)Unity.RegisterInUpdate(ag,function()local cf=ce.GetProperty("isDone").get()if cf then local cg=ca.GetMethod("GetContent",{"UnityEngine.Networking.UnityWebRequest"})(ce)cd(cg)Unity.UnregisterInUpdate(ag)end end)end;local ch={["textinput1_customtexturematerial"]={["Text"]="",["Width"]=250}}return{["Callback"]=function(cc)cb(cc,function(cd)local ci=bS.GetProperty("MaterialLoader").get()ci.GetMethod("SetMainTexture",{"UnityEngine.Texture2D"})(cd)ci.GetMethod("SetupMaterials",{})()end)end,["OnGUI"]=function(self)local cj=ch["textinput1_customtexturematerial"]GUI.TextInput("##textinput1_customtexturematerial",cj)if GUI.Button("Custom Texture Materials ##button1_customtexturematerial")then self.Callback(cj.Text)end end}end;local function ck()local c7=b.FromName("UnityEngine.UnityWebRequestTextureModule.dll")local c8=b.FromName("Assembly-CSharp.dll")local u=b.FromName("UnityEngine.CoreModule.dll")local c9=c7.GetClass("UnityEngine.Networking","UnityWebRequestTexture")local ca=c7.GetClass("UnityEngine.Networking","DownloadHandlerTexture")local bS=c8.GetClass("","MVGameControllerBase")local cl=u.GetClass("UnityEngine","Sprite")local function cb(cc,cd)local ce=c9.GetMethod("GetTexture",{"string"})(cc)ce.GetMethod("SendWebRequest")()local ag=tostring(ce)Unity.RegisterInUpdate(ag,function()local cf=ce.GetProperty("isDone").get()if cf then local cg=ca.GetMethod("GetContent",{"UnityEngine.Networking.UnityWebRequest"})(ce)cd(cg)Unity.UnregisterInUpdate(ag)end end)end;local ch={["textinput1_customtexturecrosshair"]={["Text"]="",["Width"]=250}}return{["Callback"]=function(cc)cb(cc,function(cd)local cm=bS.GetProperty("PlayModeUI").get().Cast()local cn=cm.GetMethod("GetCrossHair",{})().Cast()local co=cn.GetValue("crossHair")local cp=co.GetProperty("sprite").get()local cq=cp.GetProperty("pivot").get()local cr=cp.GetProperty("rect").get()local cs=cl.GetMethod("Create",{"UnityEngine.Texture2D","UnityEngine.Rect","UnityEngine.Vector2"})(cd,cr,cq)co.GetProperty("sprite").set(cs)end)end,["OnGUI"]=function(self)local cj=ch["textinput1_customtexturecrosshair"]GUI.TextInput("##textinput1_customtexturecrosshair",cj)if GUI.Button("Texture Crosshair ##button1_customtexturecrosshair")then self.Callback(cj.Text)end end}end;if globalThis:Get("KoGaMa Plugin")==nil and Process.GetName()=="kogama.exe"then globalThis:Set("KoGaMa Plugin",true)local ct=r()local cu=J()local cv=O()local cw=a2()local cx=aD()local cy=b0()local cz=b8()local cA=bf()local cB=bD()local cC=bL()local bP=bP()local cD=c6()local cE=ck()local cF=Process.GetModuleFromName("UnityPlayer.dll")local cG=Pointer(0x55BC77)Unity.SetMainUpdateHook(cF+cG)local cH=nil;local cI=function()local K=b.FromName("UnityEngine.CoreModule.dll")local cJ=K.GetClass("UnityEngine","Application")local cK=Il2Cpp.ResolveIcall("UnityEngine.QualitySettings::set_vSyncCount")local cL={}cL.Application_set_targetFrameRate=function(j)cJ.GetProperty("targetFrameRate").set(j)end;cL.QualitySettings_set_vSyncCount=function(cM)local cN=Primitives.NewInt(cM)local cO=Primitives.GetPointer(cN)Process.Invoke(cK,cO)end;return cL end;local cP=cI()local cQ=function()local K=b.FromName("UnityEngine.CoreModule.dll")local L=K.GetClass("UnityEngine","Camera")local M=nil;Unity.RegisterInOneUpdate(function()M=L.GetProperty("main").get()end)return function(j)M.GetProperty("aspect").set(j)end end;local cR=cQ()local cS=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local cT=Il2Cpp.Class.FromName(Q,"","ESCubeEdit")local cU=Il2Cpp.Class.FromName(Q,"","CEEditBodyUUI")local cV={ByteArray({0x31,0xC0}),ByteArray({0x89,0x01}),ByteArray({0xFF,0xD1})}local cW=l(cT:GetMethodFromName("Enter",1))+0x396;local cX=l(cU:GetMethodFromName("Enter",1))+0x6B6;return function(_)if _ then Process.WriteMemory(cW,cV[1])Process.WriteMemory(cX,cV[1])else Process.WriteMemory(cW,cV[2])Process.WriteMemory(cX,cV[3])end end end;local cY=cS()local cZ=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local c_=Il2Cpp.Class.FromName(Q,"","PaintCubes")local d0=Il2Cpp.Class.FromName(Q,"","MVCubeModelBase")local d1=c_:GetMethodFromName("Execute",1)local d2=d0:GetMethodFromName("SetMaterial",3)local d3=d0:GetMethodFromName("ReplaceCube",2)local d4=l(d1)+0xB1;local d5=l(d1)+0x1B8;local d6=l(d2)local d7=l(d3)local d8=ByteArray({0x90,0x90,0x90,0x90,0x90,0x90})local d9=ByteArray({0x0F,0x84,0x8F,0x01,0x00,0x00})local da=ByteArray({0x55,0x89,0xE5,0x83,0xEC,0x10,0x89,0xF3,0x83,0xFB,0x00,0x74,0x20,0x8B,0x5B,0x4C,0x83,0xFB,0x00,0x74,0x18,0x8B,0x5B,0x0C,0xFF,0x75,0x14,0x53,0xFF,0x75,0x10,0xFF,0x75,0x0C,0xFF,0x75,0x08,0xE8,0xD6,0xFF,0xFF,0xFF,0x83,0xC4,0x14,0xC9,0xC3})local W=Process.Alloc(nil,da.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local db=W+0x25;da:SetFromByteArray(0x26,m.jump(db:ToInt(),d6:ToInt()))Process.WriteMemory(W,da)return function(_)if _ then Process.WriteMemory(d4,d8)Process.WriteMemory(d5+1,m.jump(d5:ToInt(),W:ToInt()))else Process.WriteMemory(d4,d9)Process.WriteMemory(d5+1,m.jump(d5:ToInt(),d7:ToInt()))end end end;local dc=cZ()local dd=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local de=Il2Cpp.Class.FromName(Q,"","MaterialsController")local df=Il2Cpp.Class.FromName(Q,"","MVMaterialRepository")local dg={}for dh,d in pairs(df.Methods)do if d.ParamCount==1 and d.Name=="IsMaterialUnlocked"then local ag=d:GetParam(0).Name;if ag=="System.Byte"then dg[1]=l(d)+0x56 elseif ag=="System.Byte[]"then dg[2]=l(d)+0x90 end end end;local di={{ByteArray({0x8A,0x40,0x0C}),ByteArray({0xB0,0x01,0x90})},{ByteArray({0x32,0xC0}),ByteArray({0xB0,0x01})}}local dj={ByteArray({0x8A,0x7F,0x0C}),ByteArray({0xB7,0x01,0x90})}local dk=l(de:GetMethodFromName("UpdateContent",0))+0x144;return function(_)local dl=nil;local dm={}if _ then dl=dj[2]dm[1]=di[1][2]dm[2]=di[2][2]else dl=dj[1]dm[1]=di[1][1]dm[2]=di[2][1]end;Process.WriteMemory(dk,dl)Process.WriteMemory(dg[1],dm[1])Process.WriteMemory(dg[2],dm[2])end end;local dn=dd()local dp=function()local dq={ByteArray({0xB8,0x00,0x00,0x00,0x00}),ByteArray({0x89,0x46,0x0C,0x90,0x90}),ByteArray({0xF3,0x0F,0x10,0x45,0x0C}),ByteArray({0xF3,0x0F,0x11,0x46,0x0C})}local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local dr=Il2Cpp.Class.FromName(Q,"","CubeModelPopup")local ds=dr:GetMethodFromName("OnModelScalePressed",1)local d4=l(ds)+0x99;local dt=l(ds)+0XA1;return function(_,j)if _ then Primitives.SetFloat(dq[1].Address+1,j)Process.WriteMemory(d4,dq[1])Process.WriteMemory(dt,dq[2])else Process.WriteMemory(d4,dq[3])Process.WriteMemory(dt,dq[4])end end end;local du=dp()local dv=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local u=P:AssemblyOpen("UnityEngine.CoreModule.dll")local dw=u.Image;local dx=Il2Cpp.Class.FromName(Q,"","ESRotating")local d1=dx:GetMethodFromName("Execute",1)local dy=Il2Cpp.Class.FromName(dw,"UnityEngine","Vector3")local dz=dy:GetMethodFromName("get_up",0)local dA=ByteArray({0x55,0x8B,0xEC,0x8B,0x45,0x08,0x8D,0x15,0x00,0x00,0x00,0x00,0xF3,0x0F,0x7E,0x02,0x8B,0x4A,0x08,0x66,0x0F,0xD6,0x00,0x89,0x48,0x08,0xC9,0xC3,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00})local d4=l(d1)+0x49B;local dt=l(dz)local W=Process.Alloc(nil,dA.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local dB=W+0x1D;local dC=m.jump(d4:ToInt(),W:ToInt())local dD=m.jump(d4:ToInt(),dt:ToInt())Primitives.SetInt(dA.Address+8,dB:ToInt())Process.WriteMemory(W,dA)return function(_,dE)if _~=nil then if _ then Process.WriteMemory(d4+1,dC)else Process.WriteMemory(d4+1,dD)end end;if dE~=nil then Primitives.SetFloat(dB,dE[1])Primitives.SetFloat(dB+4,dE[2])Primitives.SetFloat(dB+8,dE[3])end end end;local dF=function()local dG=Il2Cpp.ResolveIcall("UnityEngine.Screen::SetResolution(System.Int32,System.Int32,UnityEngine.FullScreenMode,System.Int32)")local dH=ByteArray({0x55,0x8B,0xEC,0x8B,0x45,0x08,0x6A,0x00,0xFF,0x70,0x08,0xFF,0x70,0x04,0xFF,0x30,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x16,0xC9,0xC3})local bG=ByteArray(12)local W=Process.Alloc(nil,dH.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)dH:SetFromByteArray(0x11,m.jump(W:ToInt()+0x10,dG:ToInt()))Process.WriteMemory(W,dH)return function(dI,dJ,dK)local dL=bG.Address;Primitives.SetInt(dL,dI)Primitives.SetInt(dL+4,dJ)Primitives.SetInt(dL+8,dK)Process.Invoke(W,bG.Address)end end;local dM=dF()local dN=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local dO=Il2Cpp.Class.FromName(Q,"","MVBuildModeAvatarLocal/EditMode")local dP=dO:GetMethodFromName("MoveCharacter",1)local dQ=l(dP)+0x21;local at={ByteArray({0x90,0xE9}),ByteArray({0x0F,0x84})}return function(_)if _ then Process.WriteMemory(dQ,at[1])else Process.WriteMemory(dQ,at[2])end end end;local dR=dN()local dS=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local dT=Il2Cpp.Class.FromName(Q,"","MVGameControllerBase")local dU=dT:GetMethodFromName("PostGameMsg",2)local dV=l(dU)+0x2D;local at={ByteArray({0xEB}),ByteArray({0x74})}return function(_)if _ then Process.WriteMemory(dV,at[1])else Process.WriteMemory(dV,at[2])end end end;local dW=dS()local dX=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local dY=Il2Cpp.Class.FromName(Q,"","MVNetworkGame")local dZ=dY:GetMethodFromName("OnNotificationEventReceived",2)local d_=l(dZ)+0x2D;local at={ByteArray({0xEB}),ByteArray({0x74})}return function(_)if _ then Process.WriteMemory(d_,at[1])else Process.WriteMemory(d_,at[2])end end end;local e0=dX()local e1=function()local P=Il2Cpp.Domain.MainDomain;local e2=P:AssemblyOpen("Assembly-CSharp-firstpass.dll")local e3=e2.Image;local e4=Il2Cpp.Class.FromName(e3,"","Water")local e5=e4:GetMethodFromName("CreateWaterObjects",3)local e6=e4:GetMethodFromName("OnWillRenderObject",0)local e7=l(e5)+0xED;local e8=l(e6)+0x154;local e9=l(e6)+0x229;local ea=l(e6)+0x237;local at={ByteArray({0x90,0x90,0x90}),ByteArray({0x90,0x90,0x90,0x90,0x90,0x90}),ByteArray({0x0F,0x4C,0xF7}),ByteArray({0x0F,0x85,0xFA,0x07,0x00,0x00}),ByteArray({0x0F,0x95,0xC1}),ByteArray({0x0F,0x4C,0xC1})}return function(_)if _ then Process.WriteMemory(e7,at[1])Process.WriteMemory(e8,at[2])Process.WriteMemory(e9,at[1])Process.WriteMemory(ea,at[1])else Process.WriteMemory(e7,at[3])Process.WriteMemory(e8,at[4])Process.WriteMemory(e9,at[5])Process.WriteMemory(ea,at[6])end end end;local eb=e1()local ec=function()local u=b.FromName("UnityEngine.CoreModule.dll")local cJ=u.GetClass("UnityEngine","Application")local ed=nil;return function()if ed==nil then local ee=cJ.GetProperty("version").get()ed=tostring(ee.Chars)end;return ed end end;local ef=ec()local eg=function()local K=b.FromName("UnityEngine.CoreModule.dll")local eh=K.GetClass("UnityEngine","Time")return{["FPS"]=function(self)return 1.0/self["get_deltaTime"]()end,["get_deltaTime"]=function()local ei=eh.GetProperty("deltaTime").get()return ei end}end;local ej=eg()local ek=function()local c8=b.FromName("Assembly-CSharp.dll")local bS=c8.GetClass("","MVGameControllerBase")local el=nil;local em=nil;return function()if el==nil then el=bS.GetProperty("Game").get()end;if em==nil then em=el.GetProperty("Peer").get()end;local en=em.GetProperty("RoundTripTime").get()return en end end;local eo=ek()local function ep()local c8=b.FromName("Assembly-CSharp.dll")local eq=c8.GetClass("","TextCommand")return function(er)eq.GetMethod("NotifyUser",{"System.String"})(tostring(er))end end;local es=ep()local et=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local dx=Il2Cpp.Class.FromName(Q,"","ESRotating")local eu=Il2Cpp.Class.FromName(Q,"","ESTranslate")local ev=Il2Cpp.Class.FromName(Q,"","ESInsert")local ew=dx:GetMethodFromName("DoGridSnapping",0)local ex=eu:GetMethodFromName("Enter",1)local ey=ev:GetMethodFromName("ComputeSnapPosition",2)local ez=l(ew)+0xB5+4;local eA=l(ex)+0x1AF+4;local eB=l(ey)+0x6F+4;local eC=Primitives.NewFloat(0.0625)local eD=ByteArray(4)Primitives.SetPointer(eD.Address,eC.Address)Process.WriteMemory(ez,eD)Process.WriteMemory(eA,eD)Process.WriteMemory(eB,eD)return function(j)Primitives.SetFloat(eC,j)end end;local eE=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local eF=Il2Cpp.Class.FromName(Q,"","GizmoController")local ey=eF:GetMethodFromName("Handle",1)local eG=l(ey)+0x1BF+3;local eH=ByteArray(4)return function(j)Primitives.SetFloat(eH,j)Process.WriteMemory(eG,eH)end end;local eI=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local eJ=Il2Cpp.Class.FromName(Q,"","WinningConditionControl")local eK=eJ:GetMethodFromName("TryGetPrioritizedStat",1)local eL=l(eK)+0x4E+2;local eM=ByteArray(1)return function(_)Primitives.SetBool(eM,_)Process.WriteMemory(eL,eM)end end;local eN=eI()local eO=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local eP=Il2Cpp.Class.FromName(Q,"","SelectionController")local eQ=eP:GetMethodFromName("DeSelectAll",0)local eR=eP:GetMethodFromName("DeSelectAllExcept",1)local eS=l(eQ)local eT=l(eR)local at={ByteArray({0xC3}),ByteArray({0x55})}return function(_)if _ then Process.WriteMemory(eS,at[1])Process.WriteMemory(eT,at[1])else Process.WriteMemory(eS,at[2])Process.WriteMemory(eT,at[2])end end end;local eU=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local eu=Il2Cpp.Class.FromName(Q,"","ESTranslate")local eQ=eu:GetMethodFromName("GetDeltaMouse",1)local eV=l(eQ)+0x3F1+4;local eW=l(eQ)+0x40A+4;local eX=l(eQ)+0x31B+4;local eY=Primitives.NewFloat(0.005)local eD=ByteArray(4)Primitives.SetPointer(eD.Address,eY.Address)Process.WriteMemory(eV,eD)Process.WriteMemory(eW,eD)Process.WriteMemory(eX,eD)return function(j)Primitives.SetFloat(eY,j)end end;local eZ=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local e_=Il2Cpp.Class.FromName(Q,"","DeathUIBoostMenuController")local f0=e_:GetMethodFromName("Update",0)local f1=l(f0)+0x288;local f2={ByteArray({0x90,0x90,0x90,0x90,0x90,0x90}),ByteArray({0x0F,0x82,0xD5,0x00,0x00,0x00})}return function(_)if _ then Process.WriteMemory(f1,f2[1])else Process.WriteMemory(f1,f2[2])end end end;local f3=eZ()local f4=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local f5=Il2Cpp.Class.FromName(Q,"","MVBuildModeAvatarLocal/EditMode")local f6=f5:GetMethodFromName("AvatarCommandsBuildModeOnEnterBuildStateEvent",2)local e_=Il2Cpp.Class.FromName(Q,"","ESCubeEdit")local ex=e_:GetMethodFromName("Enter",1)local f7=l(ex)+0x8D7;local f8=l(f6)+0x410;local f9={ByteArray({0x6A,0x01}),ByteArray({0x6A,0x00})}return function(_)if _ then local q=f9[2]Process.WriteMemory(f7,q)Process.WriteMemory(f8,q)else local q=f9[1]Process.WriteMemory(f7,q)Process.WriteMemory(f8,q)end end end;local fa=f4()local fb=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local fc=Il2Cpp.Class.FromName(Q,"","MVBuildModeAvatarLocal/EditMode")local fd=fc:GetMethodFromName("FrameUpdate",1)local fe=fc:GetMethodFromName("GetMovementVelocity",0)local ff=l(fd)+0x38;local dt=l(fe)local fg=ByteArray({0x55,0x89,0xE5,0x53,0x51,0x8B,0x45,0x0C,0x8D,0x1D,0x2E,0x00,0x00,0x00,0x8B,0x0B,0x89,0x48,0x44,0x8B,0x4B,0x04,0x89,0x48,0x48,0x6A,0x00,0x50,0xFF,0x75,0x08,0xE8,0xDC,0xFF,0xFF,0xFF,0x83,0xC4,0x0C,0x8B,0x45,0x08,0x59,0x5B,0xC9,0xC3,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x40})local fh=ByteArray(4)local W=Process.Alloc(nil,fg.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local dC=m.jump(W:ToInt()+0X1F,dt:ToInt())fg:SetFromByteArray(0x20,dC)Primitives.SetInt(fg.Address+0xA,W:ToInt()+0x2E)local dD=m.jump(ff:ToInt(),W:ToInt())local fi=m.jump(ff:ToInt(),dt:ToInt())Process.WriteMemory(W,fg)return function(_,fj)if _~=nil then if _ then Process.WriteMemory(ff+1,dD)else Process.WriteMemory(ff+1,fi)end end;if fj~=nil then Primitives.SetFloat(fh,fj[1])Process.WriteMemory(W+0x2E,fh)Primitives.SetFloat(fh,fj[2])Process.WriteMemory(W+0x2E+4,fh)end end end;local fk=fb()local fl=function()local fm={}fm.Checked=false;fm.Clicked=false;return fm end;local B={["checkbox1"]=fl(),["checkbox2"]=fl(),["checkbox3"]=fl(),["checkbox4"]=fl(),["checkbox5"]=fl(),["checkbox6"]=fl(),["checkbox7"]=fl(),["checkbox8"]=fl(),["checkbox9"]=fl(),["checkbox13"]=fl(),["checkbox14"]=fl(),["checkbox15"]=fl(),["checkbox16"]=fl(),["checkbox17"]=fl(),["checkbox18"]=fl(),["inputfloat1"]={["Value"]=1,["Style.Width"]=70,["Format"]="%.2f"},["dragint1"]={["Value"]=60,["Style.Width"]=120,["Min"]=0},["inputfloat2"]={["Value"]=4,["Style.Width"]=70,["Format"]="%.2f"},["inputfloat3"]={["Value"]=3,["Style.Width"]=70,["Format"]="%.2f"},["inputint1"]={["Value"]=1280,["Style.Width"]=90},["inputint2"]={["Value"]=780,["Style.Width"]=90},["comboxbox1"]={["Items"]={"ExclusiveFullScreen","FullScreenWindow","MaximizedWindow","Windowed"},["SelectItem"]="Windowed",["SelectIndex"]=3},["plotlines1"]={["Values"]={}},["plotlines2"]={["Values"]={}},["inputfloat4"]={["Value"]=0.0625,["Style.Width"]=100,["Format"]="%.6f"},["inputfloat5"]={["Value"]=15,["Style.Width"]=100,["Format"]="%.2f"},["inputfloat6"]={["Value"]=0.005,["Style.Width"]=100,["Format"]="%.5f"},["inputfloat7"]={["Value"]=2,["Style.Width"]=100,["Format"]="%.2f"},["inputfloat8"]={["Value"]=2,["Style.Width"]=100,["Format"]="%.2f"},["textinput1"]={["Text"]="",["Width"]=250},["textinput2"]={["Text"]="",["Width"]=250}}local fn={["timing"]=0,["fps_value"]=0,["ping_value"]=0,["fps_values_index"]=0,["fps_values_len"]=30,["ping_values_index"]=0,["ping_values_len"]=30}local bx=5;local fo=function()cH:Render(function(fp)if fp then local fq=B.checkbox1;local fr=B.checkbox2;local fs=B.inputfloat1;local ft=B.dragint1;local fu=B.checkbox3;local fv=B.checkbox4;local fw=B.comboxbox1;local fx=B.checkbox5;local fy=B.inputfloat2;local fz=B.inputfloat3;local fA=B.inputint1;local fB=B.inputint2;local fC=B.checkbox6;local fD=B.checkbox7;local fE=B.checkbox8;local fF=B.checkbox9;local fG=B.plotlines1;local fH=B.plotlines2;local fI=B.inputfloat4;local fJ=B.inputfloat5;local fK=B.checkbox13;local fL=B.checkbox14;local fM=B.inputfloat6;local fN=B.checkbox15;local fO=B.inputfloat7;local fP=B.inputfloat8;local fQ=B.checkbox16;local cj=B.textinput1;local fR=B.textinput2;local fS=B.checkbox17;local fT=B.checkbox18;if GUI.CollapsingHeader("Build##collapsingheader_Build")then GUI.CheckBox("##checkbox1",fq)if fq.Clicked then cY(fq.Checked)end;GUI.SameLine()GUI.Label("No Build Limit")GUI.CheckBox("##checkbox2",fr)if fr.Clicked then dn(fr.Checked)end;GUI.SameLine()GUI.Label("Free Materials")GUI.CheckBox("##checkbox3",fu)if fu.Clicked then dc(fu.Checked)end;GUI.SameLine()GUI.Label("Custom Face Model")GUI.CheckBox("##checkbox4",fv)if fv.Clicked and not fv.Checked then du(false,0)end;GUI.SameLine()GUI.Label("Custom Model Size")if fv.Checked then GUI.Label("Model Size")GUI.SameLine()GUI.InputFloat("##inputfloat1",fs)if fs.Changed then if fs.Value>0 and fs.Value<50 then du(true,fs.Value)end end end;GUI.CheckBox("##checkbox5",fx)GUI.SameLine()GUI.Label("Rotation Custom")if fx.Clicked then if fx.Checked then es("< X > Press to rotate model on an X axis\n< Y > Press to rotate model on an Y axis\n< Z > Press to rotate model on an Z axis")end;RotationType(fx.Checked)end;if fx.Checked then if Process.KeyIsDown(90)then RotationType(nil,{0,1,0})elseif Process.KeyIsDown(89)then RotationType(nil,{1,0,0})elseif Process.KeyIsDown(88)then RotationType(nil,{0,0,1})end end;GUI.CheckBox("##checkbox6",fC)GUI.SameLine()GUI.Label("Free Edit Speed Movement")if fC.Clicked then dR(fC.Checked)end;cw:OnGUI()GUI.Label("Custom Grid")GUI.SameLine()GUI.InputFloat("##inputfloat4",fI)if fI.Changed and fI.Value>0 then GridFree(fI.Value)end;GUI.Label("Rotation Custom Speed")GUI.SameLine()GUI.InputFloat("##inputfloat5",fJ)if fJ.Changed and fJ.Value>0 then RotationSpeedCustom(fJ.Value)end;GUI.CheckBox("##checkbox14",fL)GUI.SameLine()GUI.Label("MultiSelect BETA")if fL.Clicked then MultiSelect(fL.Checked)end;GUI.Label("Custom Speed Translate")GUI.SameLine()GUI.InputFloat("##inputfloat6",fM)if fM.Changed and fM.Value>0 and fM.Value<0.5 then TranslateSpeedCustom(fM.Value)end;GUI.CheckBox("##checkbox15",fN)GUI.SameLine()GUI.Label("Edit Mode Speed Hack")if fN.Clicked then fk(fN.Checked,nil)end;if fN.Checked then GUI.Label("Y Speed")GUI.SameLine()GUI.InputFloat("##inputfloat7",fO)GUI.Label("XZ Speed")GUI.SameLine()GUI.InputFloat("##inputfloat8",fP)if fO.Changed or fP.Changed then fk(nil,{math.min(fO.Value,20),math.min(fP.Value,20)})end end;GUI.CheckBox("##checkbox18",fT)GUI.SameLine()GUI.Label("Model Edit No Background")if fT.Clicked then fa(fT.Checked)end;cx:OnGUI()bP.OnGUI()end;if GUI.CollapsingHeader("PvP##collapsingheader_PvP")then GUI.Label("FPS")GUI.SameLine()GUI.DragInt("##dragint1",ft)if ft.Changed then if ft.Value>15 then cP.Application_set_targetFrameRate(ft.Value)cP.QualitySettings_set_vSyncCount(0)end end;GUI.Label("Aspect Ration")GUI.SameLine()GUI.InputFloat("##inputfloat2",fy)GUI.SameLine()GUI.Label(" : ")GUI.SameLine()GUI.InputFloat("##inputfloat3",fz)GUI.SameLine()if GUI.Button("OK##button1")then if fy.Value>0 and fz.Value>0 then cR(fy.Value/fz.Value)end end;GUI.Label("Resolution")GUI.SameLine()GUI.InputInt("##inputint1",fA)GUI.SameLine()GUI.Label(" x ")GUI.SameLine()GUI.InputInt("##inputint2",fB)GUI.ComboBox("##comboxbox1",fw)GUI.SameLine()if GUI.Button("OK##button2")then if fA.Value>0 and fB.Value>0 then dM(fA.Value,fB.Value,fw.SelectIndex)end end;GUI.CheckBox("##checkbox13",fK)GUI.SameLine()GUI.Label("Kill Count")if fK.Clicked then eN(fK.Checked)end;GUI.CheckBox("##checkbox17",fS)GUI.SameLine()GUI.Label("Fast Respawn")if fS.Clicked then f3(fS.Checked)end;cv:OnGUI()end;if GUI.CollapsingHeader("Texture##collapsingheader_PvP")then cD:OnGUI()cE:OnGUI()end;if GUI.CollapsingHeader("Interface##collapsingheader_Interface")then ct:OnGUI()GUI.CheckBox("##checkbox7",fD)GUI.SameLine()GUI.Label("No Chat")if fD.Clicked then dW(fD.Checked)end;GUI.CheckBox("##checkbox8",fE)GUI.SameLine()GUI.Label("No Notification")if fE.Clicked then e0(fE.Checked)end;cy:OnGUI()cz:OnGUI()end;if GUI.CollapsingHeader("Quality##collapsingheader_Quality")then GUI.CheckBox("##checkbox9",fF)GUI.SameLine()GUI.Label("Water Reflective")if fF.Clicked then eb(fF.Checked)end;cA:OnGUI()cC:OnGUI()cu:OnGUI()cB:OnGUI()end;fn.timing=fn.timing+ej["get_deltaTime"]()if fn.timing>0.3 then fn.fps_value=ej:FPS()fn.ping_value=eo()fn.timing=0;if fn.fps_values_index<fn.fps_values_len then fn.fps_values_index=fn.fps_values_index+1;fG.Values[fn.fps_values_index]=fn.fps_value else for c3=1,fn.fps_values_len-1,1 do fG.Values[c3]=fG.Values[c3+1]end;fG.Values[fn.fps_values_len]=fn.fps_value end;if fn.ping_values_index<fn.ping_values_len then fn.ping_values_index=fn.ping_values_index+1;fH.Values[fn.ping_values_index]=fn.ping_value else for c3=1,fn.ping_values_len-1,1 do fH.Values[c3]=fH.Values[c3+1]end;fH.Values[fn.ping_values_len]=fn.ping_value end end;if GUI.CollapsingHeader("Config and Info##collapsingheader_Config_And_Info")then GUI.CheckBox("##checkbox16",fQ)GUI.SameLine()if fQ.Checked then GUI.Label("Light")else GUI.Label("Dark")end;if fQ.Clicked then if fQ.Checked then cH:StyleLight()else cH:StyleDark()end end;GUI.Label(string.format("FPS: %.0f",fn.fps_value))GUI.SameLine()GUI.PlotLines("##plotlines1",fG)GUI.Label(string.format("Ping: %dms",fn.ping_value))GUI.SameLine()GUI.PlotLines("##plotlines2",fH)GUI.Label("KoGaMa Version: "..ef())GUI.Label("Helper: Henrique and Pipocalio")GUI.Label("Created By Maury")end;do cy:Callback()cx:Callback()cz:Callback()bP.Callback()end else bx=bx-1;if bx==0 then Unity.UnregisterInUpdate(tostring(cH))end end end)end;Unity.RegisterInOneUpdate(function()es("Welcome to KoGaMa Plugin 4.5.1")cH=Window("KoGaMa Plugin")local bz=Size(400,300)cH.Size=bz;Unity.RegisterInUpdate(tostring(cH),fo)end)end
