local a=require("Helper")local b=a.AssemblyInfo;local c=function(d,e)if e then return function(...)return Il2Cpp.Runtime.Invoke(d,nil,{...},function(f)print("Error")end)end else return function(g,...)return Il2Cpp.Runtime.Invoke(d,g,{...},function(f)print("Error")end)end end end;local h=function(i,e)if e then return{["get"]=function()return i:GetValueObject(Il2Cpp.Object.FromAny(nil))end,["set"]=function(j)i:StaticSetValue(j)end}else return{["get"]=function(k)return i:GetValueObject(k)end,["set"]=function(k,j)i:SetValue(k,j)end}end end;local l=function(d)return Primitives.GetPointer(d.Address)end;local Primitives=Primitives;local m={["jump"]=function(n,o)local p=o-n-5;local q=ByteArray(4)Primitives.SetInt(q,p)return q end}local r=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local v=Il2Cpp.get_Corlib()local w=s:AssemblyOpen("UnityEngine.CoreModule.dll")local x=w.Image;local y=Il2Cpp.Class.FromName(u,"","MVInputWrapper")local z=y:GetFieldFromName("inputMap")local A=Il2Cpp.Class.FromName(u,"","DesktopPlayMode")local B=A:GetFieldFromName("keyMapping")local C=Il2Cpp.Class.FromType(B.Type)local D=C:GetMethodFromName("get_Item",1)local E=Il2Cpp.Class.FromName(v,"System","Enum")local F=E:GetMethodFromName("Parse",2)local G=Il2Cpp.Class.FromName(u,"","KogamaControls")local H=Il2Cpp.Class.FromName(x,"UnityEngine","KeyCode")local I={}I["MVInputWrapper.inputMap"]=h(z,true)I["DesktopPlayMode.keyMapping"]=h(B,false)I["Dictionary.get_Item"]=c(D,false)I["Enum.Parse"]=c(F,true)local J={["comboxbox_keybind1"]={["Items"]={"Jump","MoveForward","MoveBackwards","MoveLeft","MoveRight","Fire"},["SelectItem"]="Jump",["SelectIndex"]=0},["textinput_keybind1"]={["Text"]=""}}return{["OnGUI"]=function(self)local K=J["comboxbox_keybind1"]local L=J["textinput_keybind1"]GUI.ComboBox("##comboxbox_keybind1",K)GUI.TextInput("##textinput_keybind1",L)if GUI.Button("Change##button_keybind1")then self.Keybind(K.SelectItem,L.Text)end end,["Keybind"]=function(M,N)local O=I["MVInputWrapper.inputMap"].get()local P=I["DesktopPlayMode.keyMapping"].get(O)local Q=I["Enum.Parse"](G.Type.Object,Il2Cpp.String(M))local R=I["Enum.Parse"](H.Type.Object,Il2Cpp.String(N))local S=I["Dictionary.get_Item"](P,Q.Unbox)Primitives.SetInt(S.Address+0x10,Primitives.GetInt(R.Unbox))end}end;local T=function()local U=b.FromName("UnityEngine.CoreModule.dll")local V=U.GetClass("UnityEngine","Camera")local W=nil;Unity.RegisterInOneUpdate(function()W=V.GetProperty("main").get()end)local J={["inputfloat_customdrawdistance1"]={["Value"]=400.0,["Style.Width"]=70,["Format"]="%.2f"}}return{["OnGUI"]=function(self)local X=J.inputfloat_customdrawdistance1;GUI.Label("Custom Draw Distance")GUI.SameLine()GUI.InputFloat("##inputfloat_customdrawdistance1",X)GUI.SameLine()if GUI.Button("OK##button_customdrawdistance1")then self.Callback(X.Value)end end,["Callback"]=function(j)W.GetProperty("farClipPlane").set(j)end}end;local Y=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local Z=Il2Cpp.Class.FromName(u,"","CrossHair")local _=Z:GetMethodFromName("UpdateCrossHair",1)local a0=l(_)local a1=a0+0x56;local a2=ByteArray({0x55,0x8B,0xEC,0xB8,0x00,0x00,0x00,0x00,0xC9,0xC3,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3F})local a3=Process.Alloc(nil,a2.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)Primitives.SetInt(a2.Address+0x04,a3:ToInt()+0x0A)Process.WriteMemory(a3,a2)local a4={ByteArray({0x8B,0x88,0xEC,0x00,0x00,0x00}),ByteArray({0xB9,0x00,0x00,0x00,0x00,0x90})}Primitives.SetInt(a4[2].Address+0x01,a3:ToInt())local J={["coloredit4_customcrosshaircolor1"]={["Color"]=GUI.Color(0,1,0,1),["Style.Width"]=120},["checkbox_customcrosshaircolor1"]={["Checked"]=false}}return{["OnGUI"]=function(self)local a5=J.coloredit4_customcrosshaircolor1;local a6=J.coloredit4_customcrosshaircolor1;GUI.CheckBox("##checkbox_customcrosshaircolor1",a6)GUI.SameLine()GUI.Label("Custom Color CrossHair")if a6.Clicked then self.Callback(a6.Checked,nil)end;if a6.Checked then GUI.ColorEdit4("##coloredit4_customcrosshaircolor1",a5)if a5.Changed then self.Callback(nil,a5.Color)end end end,["Callback"]=function(a7,a8)if a7~=nil then if a7 then Process.WriteMemory(a1,a4[2])else Process.WriteMemory(a1,a4[1])end end;if a8~=nil then local a9=a3+0x0A;Primitives.SetFloat(a9,a8.R)Primitives.SetFloat(a9+4,a8.G)Primitives.SetFloat(a9+8,a8.B)Primitives.SetFloat(a9+12,a8.A)end end}end;local aa=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local ab=s:AssemblyOpen("UnityEngine.UI.dll")local ac=ab.Image;local ad=Il2Cpp.Class.FromName(ac,"UnityEngine.UI","InputField")local ae=Il2Cpp.Class.FromName(u,"","SettingsSlider")local af=Il2Cpp.Class.FromName(u,"","SettingsInputFieldSlider")local ag=Il2Cpp.Class.FromName(u,"","SettingsInputField")local ah=ag:GetMethodFromName("Initialize",2)local ai=ad:GetMethodFromName("set_text",1)local aj=ad:GetMethodFromName("set_characterLimit",1)local ak=af.Methods;local al=nil;local am=nil;for an,d in pairs(ak)do if d.ParamCount==2 and d.Name=="Initialize"then local ao=d:GetParam(1).Name;if ao=="System.Single"then al=d elseif ao=="System.Int32"then am=d end end end;local ap=ae.Methods;local aq=nil;local ar=nil;for an,d in pairs(ap)do if d.ParamCount==4 and d.Name=="Initialize"then local ao=d:GetParam(1).Name;if ao=="System.Single"then aq=d elseif ao=="System.Int32"then ar=d end end end;local as=l(ar)+0x2A;local at=l(aq)+0x27;local au=l(ar)+0x4A;local av=l(aq)+0x44;local aw=l(ai)local ax=l(aj)local ay=l(ah)+0x59;local az=l(al)+0xA2;local aA=l(am)+0xA5;local aB={ByteArray({0x68,0x00,0x50,0xC3,0x47,0x90}),ByteArray({0x51,0xF3,0x0F,0x11,0x04,0x24}),ByteArray({0x68,0x00,0x00,0x00,0x00,0x90})}local aC=ByteArray({0x55,0x89,0xE5,0xFF,0x75,0x0C,0xFF,0x75,0x08,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x08,0x68,0xE8,0x03,0x00,0x00,0xFF,0x75,0x08,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x08,0xC9,0xC3})local a3=Process.Alloc(nil,aC.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local aD=a3+0x9;local aE=a3+0x19;aC:SetFromByteArray(0xA,m.jump(aD:ToInt(),aw:ToInt()))aC:SetFromByteArray(0x1A,m.jump(aE:ToInt(),ax:ToInt()))local aF={m.jump(ay:ToInt(),a3:ToInt()),m.jump(az:ToInt(),a3:ToInt()),m.jump(aA:ToInt(),a3:ToInt()),m.jump(ay:ToInt(),aw:ToInt()),m.jump(az:ToInt(),aw:ToInt()),m.jump(aA:ToInt(),aw:ToInt())}Process.WriteMemory(a3,aC)local J={["unlimitconfig_checkbox1"]={["Checked"]=false},["unlimitconfig_input1"]={["Value"]=100000,["Style.Width"]=70,["Format"]="%.2f"},["unlimitconfig_input2"]={["Value"]=0,["Style.Width"]=70,["Format"]="%.2f"}}return{["OnGUI"]=function(self)local aG=J.unlimitconfig_checkbox1;local aH=J.unlimitconfig_input1;local aI=J.unlimitconfig_input2;GUI.CheckBox("##unlimitconfig_checkbox1",aG)GUI.SameLine()GUI.Label("Unlimited Config")if aG.Clicked then self.Callback(aG.Checked,nil,nil)end;if aG.Checked then GUI.Label("Max Value")GUI.SameLine()GUI.InputFloat("##unlimitconfig_input1",aH)GUI.Label("Min Value")GUI.SameLine()GUI.InputFloat("##unlimitconfig_input2",aI)if aH.Changed or aI.Changed then self.Callback(aG.Checked,aH.Value,aI.Value)end end end,["Callback"]=function(a7,aJ,aK)if aJ~=nil then Primitives.SetFloat(aB[1].Address+1,aJ)end;if aK~=nil then Primitives.SetFloat(aB[3].Address+1,aK)end;if a7 then Process.WriteMemory(as,aB[1])Process.WriteMemory(at,aB[1])Process.WriteMemory(au,aB[3])Process.WriteMemory(av,aB[3])Process.WriteMemory(ay+1,aF[1])Process.WriteMemory(az+1,aF[2])Process.WriteMemory(aA+1,aF[3])else Process.WriteMemory(ay+1,aF[4])Process.WriteMemory(az+1,aF[5])Process.WriteMemory(aA+1,aF[6])Process.WriteMemory(as,aB[2])Process.WriteMemory(at,aB[2])Process.WriteMemory(au,aB[2])Process.WriteMemory(av,aB[2])end end}end;local function aL()local t=b["Assembly-CSharp"]()local aM=b.FromName("UnityEngine.InputLegacyModule.dll")local aN=t.GetClass("","MVGameControllerBase")local aO=t.GetClass("","MVGameControllerDesktop")local aP=aM.GetClass("UnityEngine","Input")local aQ=t.GetClass("","MVInputWrapper")local aR=false;local aS=false;local J={["checkbox1_colorpick"]={["Checked"]=false}}return{["Invoke"]=function()local aT=aN.GetProperty("GameMode").get()local aU=nil;if aT==0 then local aV=aN.GetProperty("EditModeUI").get()local aW=aV.Cast()aU=aW.GetProperty("EditModeStateMachine").get()elseif aT==2 then local g=aO.GetProperty("Instance").get()local aX=g.GetValue("modeController")local aY=aX.Cast()aU=aY.GetValue("editorStateMachine")end;if aU~=nil then local aZ=aU.GetValue("cubeModelingStateMachine")local a_=aZ.GetProperty("TargetCubeModel").get()if a_~=nil then local b0=aZ.GetMethod("DoPicking")()if b0~=nil then local b1=b0.GetValue("pickedFace")local b2=b0.GetValue("cube")local b3=b2.GetValue("faceMaterials")local b4=b3.GetMethod("GetValue",{"int"})(b1)local b5=b4.Cast()aZ.GetProperty("CurrentMaterialId").set(b5)end end end end,["Callback"]=function(self)local b6=J.checkbox1_colorpick;if b6.Checked then if aQ.GetProperty("IsAllInputSuppressed").get()==false then local b7=aP.GetMethod("GetKey",{"UnityEngine.KeyCode"})(325)if aR~=b7 then aR=b7;aS=true end;if aS and b7 then self.Invoke()end end;aS=false elseif b6.Clicked and not b6.Checked then aS=false;aR=false end end,["OnGUI"]=function(self)local b6=J["checkbox1_colorpick"]GUI.CheckBox("##checkbox1_colorpick",b6)GUI.SameLine()GUI.Label("Color Pick (Mouse 3)")end}end;local function b8()local t=b["Assembly-CSharp"]()local aM=b.FromName("UnityEngine.InputLegacyModule.dll")local aN=t.GetClass("","MVGameControllerBase")local aO=t.GetClass("","MVGameControllerDesktop")local aQ=t.GetClass("","MVInputWrapper")local aP=aM.GetClass("UnityEngine","Input")local aR=false;local aS=false;local b9={["checkbox1_activeUiHotkey"]={["Checked"]=true}}return{["Invoke"]=function()local aT=aN.GetProperty("GameMode").get()if aT==0 then local aV=aN.GetProperty("EditModeUI").get()local aW=aV.Cast()local ba=aW.GetProperty("IsInPlayInEditMode").get()if not ba then local bb=aW.GetProperty("gameObject").get()local bc=bb.GetProperty("activeSelf").get()bb.GetMethod("SetActive",{"bool"})(not bc)else local bd=aN.GetProperty("PlayModeUI").get()local be=bd.Cast()local bb=be.GetProperty("gameObject").get()local bc=bb.GetProperty("activeSelf").get()bb.GetMethod("SetActive",{"bool"})(not bc)end elseif aT==1 then local bd=aN.GetProperty("PlayModeUI").get()local be=bd.Cast()local bb=be.GetProperty("gameObject").get()local bc=bb.GetProperty("activeSelf").get()bb.GetMethod("SetActive",{"bool"})(not bc)elseif aT==2 then local g=aO.GetProperty("Instance").get()local aX=g.GetValue("modeController")local aY=aX.Cast()local bb=aY.GetProperty("gameObject").get()local bc=bb.GetProperty("activeSelf").get()bb.GetMethod("SetActive",{"bool"})(not bc)end end,["Callback"]=function(self)local bf=b9.checkbox1_activeUiHotkey;if bf.Checked then if aQ.GetProperty("IsAllInputSuppressed").get()==false then local b7=aP.GetMethod("GetKey",{"UnityEngine.KeyCode"})(106)if aR~=b7 then aR=b7;aS=true end;if aS and b7 then self.Invoke()end end;aS=false elseif bf.Clicked and not bf.Checked then aS=false;aR=false end end,["OnGUI"]=function(self)local bf=b9.checkbox1_activeUiHotkey;GUI.CheckBox("##checkbox1_activeUiHotkey",bf)GUI.SameLine()GUI.Label("Toggle UI (J)")end}end;local function bg()local bh=b["Assembly-CSharp"]()local bi=b["UnityEngine.CoreModule"]()local aM=b.FromName("UnityEngine.InputLegacyModule.dll")local bj=bi.GetClass("UnityEngine","Screen")local bk=bh.GetClass("","FullScreenController")local aP=aM.GetClass("UnityEngine","Input")local aQ=bh.GetClass("","MVInputWrapper")local aR=false;local aS=false;local J={["checkbox1_fullScreenHotkey"]={["Checked"]=false}}return{["Invoke"]=function()local bl=bj.GetProperty("fullScreen").get()bk.GetProperty("FullScreen").set(not bl)end,["Callback"]=function(self)local bm=J.checkbox1_fullScreenHotkey;if bm.Checked then if aQ.GetProperty("IsAllInputSuppressed").get()==false then local b7=aP.GetMethod("GetKey",{"UnityEngine.KeyCode"})(292)if aR~=b7 then aR=b7;aS=true end;if aS and b7 then self.Invoke()end end;aS=false elseif bm.Clicked and not bm.Checked then aS=false;aR=false end end,["OnGUI"]=function(self)local bm=J["checkbox1_fullScreenHotkey"]GUI.CheckBox("##checkbox1_fullScreen",bm)GUI.SameLine()GUI.Label("Toggle FullScreen (F11)")end}end;local function bn()local t=b["Assembly-CSharp"]()local aN=t.GetClass("","MVGameControllerBase")local bo=t.GetClass("","ThemeRepository")local bp=t.GetClass("","AvatarEditModeBodyController")local bq=nil;local J={["checkbox1_themeUtils"]={["Checked"]=true},["button1_themeUtils"]={},["button2_themeUtils"]={},["comboxbox1_themeUtils"]={["Items"]={"Current","RoundSquare","Normal","Christmas","Puzzle","Scary","BoxPumpkin","RoundCircleSkull","Cartoon","Triangles","Pumpkin","Animals","Heart","SquareSkull","BoxHalloween","RoundSkull","BoxSkull","Candy","Square","RoundBoxSkull","RoundSquareSkull","Cloudy"},["SelectItem"]="Current",["SelectIndex"]=0}}return{["EnableTheme"]=function(a7)local aT=aN.GetProperty("GameMode").get()if aT~=2 then local br=bo.GetProperty("Instance").get()local bs=br.GetProperty("CurrentThemeVisualization").get()if bs~=nil then if a7 then bs.GetMethod("Activate")()else bs.GetMethod("Deactivate")()end end else local bt=bp.GetValue("Theme")if bt~=nil then if a7 then bt.GetMethod("Activate")()else bt.GetMethod("Deactivate")()end end end end,["CreateThemePreview"]=function(ao)local aT=aN.GetProperty("GameMode").get()if aT~=2 then local br=bo.GetProperty("Instance").get()if bq~=nil then br.GetMethod("DestroyTemporary",{"Theme"})(bq)bq=nil end;if ao~="Current"then bq=br.GetMethod("CreateTemporaryThemeVisualization",{"string"})(ao)local bu=bq.Cast()end else end end,["SetupThemePreview"]=function(bv,j)if bq~=nil then local bu=bq.Cast()if bv=="dayNightCycle"then bu.GetMethod("ToggleDayNightCycle",{"bool"})(j)elseif bv=="useServerTime"then bu.GetMethod("ToggleDayNightCycleUseServerTime",{"bool"})(j)end end end,["GetInfoTheme"]=function(bv,bw)if bq~=nil then local bu=bq.Cast()if bv=="dayNightCycle"then local bx=bu.GetValue("dayNightCycle")local bc=bx.GetProperty("enabled").get()return bc elseif bv=="useServerTime"then local bx=bu.GetValue("dayNightCycle")local by=bx.GetValue("useServerTime")return by end else return bw end end,["OnGUI"]=function(self)local bz=J["checkbox1_themeUtils"]local bA=J["comboxbox1_themeUtils"]GUI.CheckBox("##checkbox1_themeUtils",bz)GUI.SameLine()GUI.Label("Theme")if bz.Clicked then self.EnableTheme(bz.Checked)end;GUI.ComboBox("##comboxbox1_themeUtils",bA)GUI.SameLine()local bB=GUI.Button("OK##button1_themeUtils")if bz.Checked and bB then self.CreateThemePreview(bA.SelectItem)end;local bC=GUI.Button("Theme Config##button2_themeUtils")if bC then local bD=self;bD:CreateThemeConfig()end end,["CreateThemeConfig"]=function(self)if bq==nil then return end;local bE={["checkbox1_themeUtils"]={["Checked"]=self.GetInfoTheme("dayNightCycle",false)},["checkbox2_themeUtils"]={["Checked"]=self.GetInfoTheme("useServerTime",false)}}Unity.RegisterInOneUpdate(function()local bF=5;local bG=Window("Theme Config")local bH=Size(400,300)bG.Size=bH;local bI=tostring(bG)Unity.RegisterInUpdate(bI,function()bG:Render(function(bJ)if bJ then local bz=bE.checkbox1_themeUtils;local bK=bE.checkbox2_themeUtils;GUI.CheckBox("##checkbox1_themeUtils",bz)GUI.SameLine()GUI.Label("DayNightCycle")if bz.Clicked then self.SetupThemePreview("dayNightCycle",bz["Checked"])end;GUI.CheckBox("##checkbox2_themeUtils",bK)GUI.SameLine()GUI.Label("UseServerTime")if bK.Clicked then self.SetupThemePreview("useServerTime",bK["Checked"])end else bF=bF-1;if bF==0 then Unity.RegisterInUpdate(bI)end end end)end)end)end}end;local function bL()local bM=Il2Cpp.ResolveIcall("UnityEngine.QualitySettings::set_shadowDistance")local bN=ByteArray({0x55,0x89,0xE5,0x8B,0x5D,0x08,0xFF,0x73,0x04,0xFF,0x13,0x83,0xC4,0x04,0xC9,0xC3})local a3=Process.Alloc(nil,bN.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)Process.WriteMemory(a3,bN)local bO=ByteArray(8)local bP={["inputfloat1_shadowDistance"]={["Value"]=70,["Style.Width"]=70,["Format"]="%.2f"}}return{["Invoke"]=function(j)if j>0 then local bQ=Primitives.NewFloat(j)local bR=Primitives.GetPointer(bQ.Address)Process.Invoke(bM,bR)end end,["OnGUI"]=function(self)local bS=bP.inputfloat1_shadowDistance;GUI.Label("Shadow Distance")GUI.SameLine()GUI.InputFloat("##inputfloat1_shadowDistance",bS)if bS.Changed then self.Invoke(bS.Value)end end}end;local function bT()local J={["checkbox1_antiafk"]={["Checked"]=false}}return{["OnGUI"]=function(self)local bU=J["checkbox1_antiafk"]GUI.CheckBox("##checkbox1_antiafk",bU)GUI.SameLine()GUI.Label("Anti AFK")if bU.Clicked then self.Callback(bU.Checked)end end,["Callback"]=function(a7)local bV=b["Assembly-CSharp"]()local bW=bV.GetClass("","AwayMonitor")local g=bW.GetValue("instance")g.SetValue("idleKickEnabled",not a7)end}end;local function bX()local bV=b["Assembly-CSharp"]()local aM=b.FromName("UnityEngine.InputLegacyModule.dll")local bY=bV.GetClass("","EditModeObjectPicker")local bZ=bV.GetClass("","VoxelHit")local b_=bV.GetClass("","MVGameControllerBase")local aQ=bV.GetClass("","MVInputWrapper")local aP=aM.GetClass("UnityEngine","Input")local aR=false;local aS=false;local function c0()local c1=bZ.New()local c2=bY.GetMethod("Pick",{"VoxelHit&","System.Collections.Generic.HashSet<System.Int32>","System.Int32"})local c3=c2(c1,nil,-262149)if c3 then local c4=c1.GetValue("woId")return c4 else return-1 end end;local c5={}local c6={}c6["AddItem"]=function()local c7=c0()table.insert(c5,c7)print(c7)end;c6["Reset"]=function()c5={}end;c6["Clone"]=function()local c8=b_.GetProperty("OperationRequests").get()local c9=b_.GetProperty("WOCM").get()local d=c8.GetMethod("CloneWorldObjectTree",{"MVWorldObjectClient","bool","bool","bool"})local ca=c9.GetMethod("GetWorldObject",{"int"})for cb=1,#c5,1 do local cc=ca(c5[cb]).Cast()if cc~=nil then local cd=cc.GetMethod("HasInteractionFlag",{"InteractionFlags"})if cd(8192)and not cd(131072)then d(cc,false,false,false)end end end end;c6["OnGUI"]=function()GUI.Separator()GUI.Label("Multi Clone (F1)")if GUI.Button("Clone##button1_multiclone")then try(function()c6["Clone"]()end,function(f)print(f)end)end;GUI.SameLine()if GUI.Button("Reset##button2_multiclone")then c6["Reset"]()end end;c6["Callback"]=function()if aQ.GetProperty("IsAllInputSuppressed").get()==false then local b7=aP.GetMethod("GetKey",{"UnityEngine.KeyCode"})(0x11A)if aR~=b7 then aR=b7;aS=true end;if aS and b7 then try(function()c6["AddItem"]()end,function(f)print(f)end)end end;aS=false end;return c6 end;local function ce()local cf=b.FromName("UnityEngine.UnityWebRequestTextureModule.dll")local cg=b.FromName("Assembly-CSharp.dll")local ch=cf.GetClass("UnityEngine.Networking","UnityWebRequestTexture")local ci=cf.GetClass("UnityEngine.Networking","DownloadHandlerTexture")local b_=cg.GetClass("","MVGameControllerBase")local function cj(ck,cl)local cm=ch.GetMethod("GetTexture",{"string"})(ck)cm.GetMethod("SendWebRequest")()local ao=tostring(cm)Unity.RegisterInUpdate(ao,function()local cn=cm.GetProperty("isDone").get()if cn then local co=ci.GetMethod("GetContent",{"UnityEngine.Networking.UnityWebRequest"})(cm)cl(co)Unity.UnregisterInUpdate(ao)end end)end;local cp={["textinput1_customtexturematerial"]={["Text"]="",["Width"]=250}}return{["Callback"]=function(ck)cj(ck,function(cl)local cq=b_.GetProperty("MaterialLoader").get()cq.GetMethod("SetMainTexture",{"UnityEngine.Texture2D"})(cl)cq.GetMethod("SetupMaterials",{})()end)end,["OnGUI"]=function(self)local cr=cp["textinput1_customtexturematerial"]GUI.TextInput("##textinput1_customtexturematerial",cr)if GUI.Button("Custom Texture Materials ##button1_customtexturematerial")then self.Callback(cr.Text)end end}end;local function cs()local cf=b.FromName("UnityEngine.UnityWebRequestTextureModule.dll")local cg=b.FromName("Assembly-CSharp.dll")local w=b.FromName("UnityEngine.CoreModule.dll")local ch=cf.GetClass("UnityEngine.Networking","UnityWebRequestTexture")local ci=cf.GetClass("UnityEngine.Networking","DownloadHandlerTexture")local b_=cg.GetClass("","MVGameControllerBase")local ct=w.GetClass("UnityEngine","Sprite")local function cj(ck,cl)local cm=ch.GetMethod("GetTexture",{"string"})(ck)cm.GetMethod("SendWebRequest")()local ao=tostring(cm)Unity.RegisterInUpdate(ao,function()local cn=cm.GetProperty("isDone").get()if cn then local co=ci.GetMethod("GetContent",{"UnityEngine.Networking.UnityWebRequest"})(cm)cl(co)Unity.UnregisterInUpdate(ao)end end)end;local cp={["textinput1_customtexturecrosshair"]={["Text"]="",["Width"]=250}}return{["Callback"]=function(ck)cj(ck,function(cl)local cu=b_.GetProperty("PlayModeUI").get().Cast()local cv=cu.GetMethod("GetCrossHair",{})().Cast()local cw=cv.GetValue("crossHair")local cx=cw.GetProperty("sprite").get()local cy=cx.GetProperty("pivot").get()local cz=cx.GetProperty("rect").get()local cA=ct.GetMethod("Create",{"UnityEngine.Texture2D","UnityEngine.Rect","UnityEngine.Vector2"})(cl,cz,cy)cw.GetProperty("sprite").set(cA)end)end,["OnGUI"]=function(self)local cr=cp["textinput1_customtexturecrosshair"]GUI.TextInput("##textinput1_customtexturecrosshair",cr)if GUI.Button("Texture Crosshair ##button1_customtexturecrosshair")then self.Callback(cr.Text)end end}end;if globalThis:Get("KoGaMa Plugin")==nil and Process.GetName()=="kogama.exe"then globalThis:Set("KoGaMa Plugin",true)local cB=r()local cC=T()local cD=Y()local cE=aa()local cF=aL()local cG=b8()local cH=bg()local cI=bn()local cJ=bL()local cK=bT()local bX=bX()local cL=ce()local cM=cs()local cN=Process.GetModuleFromName("UnityPlayer.dll")local cO=Pointer(0x55BC77)Unity.SetMainUpdateHook(cN+cO)local cP=nil;local cQ=function()local cR=Il2Cpp.ResolveIcall("UnityEngine.QualitySettings::set_vSyncCount")local cS={}cS.Application_set_targetFrameRate=function(j)local cT=Primitives.NewInt(j)UnityEngine_Core_API["UnityEngine.Application.set_targetFrameRate"](cT)end;cS.QualitySettings_set_vSyncCount=function(cU)local cV=Primitives.NewInt(cU)local cW=Primitives.GetPointer(cV)Process.Invoke(cR,cW)end;return cS end;local cX=cQ()local cY=function()local W=nil;Unity.RegisterInOneUpdate(function()W=UnityEngine_Core_API["UnityEngine.Application.get_main"]()end)return function(j)UnityEngine_Core_API["UnityEngine.Application.set_aspect"](W,Primitives.NewFloat(j))end end;local cZ=cY()local c_=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local d0=Il2Cpp.Class.FromName(u,"","ESCubeEdit")local d1=Il2Cpp.Class.FromName(u,"","CEEditBodyUUI")local d2={ByteArray({0x31,0xC0}),ByteArray({0x89,0x01}),ByteArray({0xFF,0xD1})}local d3=l(d0:GetMethodFromName("Enter",1))+0x396;local d4=l(d1:GetMethodFromName("Enter",1))+0x6B6;return function(a7)if a7 then Process.WriteMemory(d3,d2[1])Process.WriteMemory(d4,d2[1])else Process.WriteMemory(d3,d2[2])Process.WriteMemory(d4,d2[3])end end end;local d5=c_()local d6=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local d7=Il2Cpp.Class.FromName(u,"","PaintCubes")local d8=Il2Cpp.Class.FromName(u,"","MVCubeModelBase")local d9=d7:GetMethodFromName("Execute",1)local da=d8:GetMethodFromName("SetMaterial",3)local db=d8:GetMethodFromName("ReplaceCube",2)local dc=l(d9)+0xB1;local dd=l(d9)+0x1B8;local de=l(da)local df=l(db)local dg=ByteArray({0x90,0x90,0x90,0x90,0x90,0x90})local dh=ByteArray({0x0F,0x84,0x8F,0x01,0x00,0x00})local di=ByteArray({0x55,0x89,0xE5,0x83,0xEC,0x10,0x89,0xF3,0x83,0xFB,0x00,0x74,0x20,0x8B,0x5B,0x4C,0x83,0xFB,0x00,0x74,0x18,0x8B,0x5B,0x0C,0xFF,0x75,0x14,0x53,0xFF,0x75,0x10,0xFF,0x75,0x0C,0xFF,0x75,0x08,0xE8,0xD6,0xFF,0xFF,0xFF,0x83,0xC4,0x14,0xC9,0xC3})local a3=Process.Alloc(nil,di.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local dj=a3+0x25;di:SetFromByteArray(0x26,m.jump(dj:ToInt(),de:ToInt()))Process.WriteMemory(a3,di)return function(a7)if a7 then Process.WriteMemory(dc,dg)Process.WriteMemory(dd+1,m.jump(dd:ToInt(),a3:ToInt()))else Process.WriteMemory(dc,dh)Process.WriteMemory(dd+1,m.jump(dd:ToInt(),df:ToInt()))end end end;local dk=d6()local dl=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local dm=Il2Cpp.Class.FromName(u,"","MaterialsController")local dn=Il2Cpp.Class.FromName(u,"","MVMaterialRepository")local dp={}for dq,d in pairs(dn.Methods)do if d.ParamCount==1 and d.Name=="IsMaterialUnlocked"then local ao=d:GetParam(0).Name;if ao=="System.Byte"then dp[1]=l(d)+0x56 elseif ao=="System.Byte[]"then dp[2]=l(d)+0x90 end end end;local dr={{ByteArray({0x8A,0x40,0x0C}),ByteArray({0xB0,0x01,0x90})},{ByteArray({0x32,0xC0}),ByteArray({0xB0,0x01})}}local ds={ByteArray({0x8A,0x7F,0x0C}),ByteArray({0xB7,0x01,0x90})}local dt=l(dm:GetMethodFromName("UpdateContent",0))+0x144;return function(a7)local du=nil;local dv={}if a7 then du=ds[2]dv[1]=dr[1][2]dv[2]=dr[2][2]else du=ds[1]dv[1]=dr[1][1]dv[2]=dr[2][1]end;Process.WriteMemory(dt,du)Process.WriteMemory(dp[1],dv[1])Process.WriteMemory(dp[2],dv[2])end end;local dw=dl()local dx=function()local dy={ByteArray({0xB8,0x00,0x00,0x00,0x00}),ByteArray({0x89,0x46,0x0C,0x90,0x90}),ByteArray({0xF3,0x0F,0x10,0x45,0x0C}),ByteArray({0xF3,0x0F,0x11,0x46,0x0C})}local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local dz=Il2Cpp.Class.FromName(u,"","CubeModelPopup")local dA=dz:GetMethodFromName("OnModelScalePressed",1)local dc=l(dA)+0x99;local dB=l(dA)+0XA1;return function(a7,j)if a7 then Primitives.SetFloat(dy[1].Address+1,j)Process.WriteMemory(dc,dy[1])Process.WriteMemory(dB,dy[2])else Process.WriteMemory(dc,dy[3])Process.WriteMemory(dB,dy[4])end end end;local dC=dx()local dD=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local w=s:AssemblyOpen("UnityEngine.CoreModule.dll")local x=w.Image;local dE=Il2Cpp.Class.FromName(u,"","ESRotating")local d9=dE:GetMethodFromName("Execute",1)local dF=Il2Cpp.Class.FromName(x,"UnityEngine","Vector3")local dG=dF:GetMethodFromName("get_up",0)local dH=ByteArray({0x55,0x8B,0xEC,0x8B,0x45,0x08,0x8D,0x15,0x00,0x00,0x00,0x00,0xF3,0x0F,0x7E,0x02,0x8B,0x4A,0x08,0x66,0x0F,0xD6,0x00,0x89,0x48,0x08,0xC9,0xC3,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00})local dc=l(d9)+0x49B;local dB=l(dG)local a3=Process.Alloc(nil,dH.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local dI=a3+0x1D;local dJ=m.jump(dc:ToInt(),a3:ToInt())local dK=m.jump(dc:ToInt(),dB:ToInt())Primitives.SetInt(dH.Address+8,dI:ToInt())Process.WriteMemory(a3,dH)return function(a7,dL)if a7~=nil then if a7 then Process.WriteMemory(dc+1,dJ)else Process.WriteMemory(dc+1,dK)end end;if dL~=nil then Primitives.SetFloat(dI,dL[1])Primitives.SetFloat(dI+4,dL[2])Primitives.SetFloat(dI+8,dL[3])end end end;local dM=dD()local dN=function()local dO=Il2Cpp.ResolveIcall("UnityEngine.Screen::SetResolution(System.Int32,System.Int32,UnityEngine.FullScreenMode,System.Int32)")local dP=ByteArray({0x55,0x8B,0xEC,0x8B,0x45,0x08,0x6A,0x00,0xFF,0x70,0x08,0xFF,0x70,0x04,0xFF,0x30,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x16,0xC9,0xC3})local bO=ByteArray(12)local a3=Process.Alloc(nil,dP.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)dP:SetFromByteArray(0x11,m.jump(a3:ToInt()+0x10,dO:ToInt()))Process.WriteMemory(a3,dP)return function(dQ,dR,dS)local dT=bO.Address;Primitives.SetInt(dT,dQ)Primitives.SetInt(dT+4,dR)Primitives.SetInt(dT+8,dS)Process.Invoke(a3,bO.Address)end end;local dU=dN()local dV=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local dW=Il2Cpp.Class.FromName(u,"","MVBuildModeAvatarLocal/EditMode")local dX=dW:GetMethodFromName("MoveCharacter",1)local dY=l(dX)+0x21;local aB={ByteArray({0x90,0xE9}),ByteArray({0x0F,0x84})}return function(a7)if a7 then Process.WriteMemory(dY,aB[1])else Process.WriteMemory(dY,aB[2])end end end;local dZ=dV()local d_=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local e0=Il2Cpp.Class.FromName(u,"","MVGameControllerBase")local e1=e0:GetMethodFromName("PostGameMsg",2)local e2=l(e1)+0x2D;local aB={ByteArray({0xEB}),ByteArray({0x74})}return function(a7)if a7 then Process.WriteMemory(e2,aB[1])else Process.WriteMemory(e2,aB[2])end end end;local e3=d_()local e4=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local e5=Il2Cpp.Class.FromName(u,"","MVNetworkGame")local e6=e5:GetMethodFromName("OnNotificationEventReceived",2)local e7=l(e6)+0x2D;local aB={ByteArray({0xEB}),ByteArray({0x74})}return function(a7)if a7 then Process.WriteMemory(e7,aB[1])else Process.WriteMemory(e7,aB[2])end end end;local e8=e4()local e9=function()local s=Il2Cpp.Domain.MainDomain;local ea=s:AssemblyOpen("Assembly-CSharp-firstpass.dll")local eb=ea.Image;local ec=Il2Cpp.Class.FromName(eb,"","Water")local ed=ec:GetMethodFromName("CreateWaterObjects",3)local ee=ec:GetMethodFromName("OnWillRenderObject",0)local ef=l(ed)+0xED;local eg=l(ee)+0x154;local eh=l(ee)+0x229;local ei=l(ee)+0x237;local aB={ByteArray({0x90,0x90,0x90}),ByteArray({0x90,0x90,0x90,0x90,0x90,0x90}),ByteArray({0x0F,0x4C,0xF7}),ByteArray({0x0F,0x85,0xFA,0x07,0x00,0x00}),ByteArray({0x0F,0x95,0xC1}),ByteArray({0x0F,0x4C,0xC1})}return function(a7)if a7 then Process.WriteMemory(ef,aB[1])Process.WriteMemory(eg,aB[2])Process.WriteMemory(eh,aB[1])Process.WriteMemory(ei,aB[1])else Process.WriteMemory(ef,aB[3])Process.WriteMemory(eg,aB[4])Process.WriteMemory(eh,aB[5])Process.WriteMemory(ei,aB[6])end end end;local ej=e9()local ek=function()local w=b.FromName("UnityEngine.CoreModule.dll")local el=w.GetClass("UnityEngine","Application")local em=nil;return function()if em==nil then local en=el.GetProperty("version").get()em=tostring(en.Chars)end;return em end end;local eo=ek()local ep=function()local U=b.FromName("UnityEngine.CoreModule.dll")local eq=U.GetClass("UnityEngine","Time")return{["FPS"]=function(self)return 1.0/self["get_deltaTime"]()end,["get_deltaTime"]=function()local er=eq.GetProperty("deltaTime").get()return er end}end;local es=ep()local et=function()local cg=b.FromName("Assembly-CSharp.dll")local b_=cg.GetClass("","MVGameControllerBase")local eu=nil;local ev=nil;return function()if eu==nil then eu=b_.GetProperty("Game").get()end;if ev==nil then ev=eu.GetProperty("Peer").get()end;local ew=ev.GetProperty("RoundTripTime").get()return ew end end;local ex=et()local function ey()local cg=b.FromName("Assembly-CSharp.dll")local ez=cg.GetClass("","TextCommand")return function(eA)ez.GetMethod("NotifyUser",{"System.String"})(tostring(eA))end end;local eB=ey()local eC=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local dE=Il2Cpp.Class.FromName(u,"","ESRotating")local eD=Il2Cpp.Class.FromName(u,"","ESTranslate")local eE=Il2Cpp.Class.FromName(u,"","ESInsert")local eF=dE:GetMethodFromName("DoGridSnapping",0)local eG=eD:GetMethodFromName("Enter",1)local eH=eE:GetMethodFromName("ComputeSnapPosition",2)local eI=l(eF)+0xB5+4;local eJ=l(eG)+0x1AF+4;local eK=l(eH)+0x6F+4;local eL=Primitives.NewFloat(0.0625)local eM=ByteArray(4)Primitives.SetPointer(eM.Address,eL.Address)Process.WriteMemory(eI,eM)Process.WriteMemory(eJ,eM)Process.WriteMemory(eK,eM)return function(j)Primitives.SetFloat(eL,j)end end;local eN=eC()local eO=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local eP=Il2Cpp.Class.FromName(u,"","GizmoController")local eH=eP:GetMethodFromName("Handle",1)local eQ=l(eH)+0x1BF+3;local eR=ByteArray(4)return function(j)Primitives.SetFloat(eR,j)Process.WriteMemory(eQ,eR)end end;local eS=eO()local eT=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local eU=Il2Cpp.Class.FromName(u,"","WinningConditionControl")local eV=eU:GetMethodFromName("TryGetPrioritizedStat",1)local eW=l(eV)+0x4E+2;local eX=ByteArray(1)return function(a7)Primitives.SetBool(eX,a7)Process.WriteMemory(eW,eX)end end;local eY=eT()local eZ=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local e_=Il2Cpp.Class.FromName(u,"","SelectionController")local f0=e_:GetMethodFromName("DeSelectAll",0)local f1=e_:GetMethodFromName("DeSelectAllExcept",1)local f2=l(f0)local f3=l(f1)local aB={ByteArray({0xC3}),ByteArray({0x55})}return function(a7)if a7 then Process.WriteMemory(f2,aB[1])Process.WriteMemory(f3,aB[1])else Process.WriteMemory(f2,aB[2])Process.WriteMemory(f3,aB[2])end end end;local f4=eZ()local f5=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local eD=Il2Cpp.Class.FromName(u,"","ESTranslate")local f0=eD:GetMethodFromName("GetDeltaMouse",1)local f6=l(f0)+0x3F1+4;local f7=l(f0)+0x40A+4;local f8=l(f0)+0x31B+4;local f9=Primitives.NewFloat(0.005)local eM=ByteArray(4)Primitives.SetPointer(eM.Address,f9.Address)Process.WriteMemory(f6,eM)Process.WriteMemory(f7,eM)Process.WriteMemory(f8,eM)return function(j)Primitives.SetFloat(f9,j)end end;local fa=f5()local fb=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local fc=Il2Cpp.Class.FromName(u,"","DeathUIBoostMenuController")local fd=fc:GetMethodFromName("Update",0)local fe=l(fd)+0x288;local ff={ByteArray({0x90,0x90,0x90,0x90,0x90,0x90}),ByteArray({0x0F,0x82,0xD5,0x00,0x00,0x00})}return function(a7)if a7 then Process.WriteMemory(fe,ff[1])else Process.WriteMemory(fe,ff[2])end end end;local fg=fb()local fh=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local fi=Il2Cpp.Class.FromName(u,"","MVBuildModeAvatarLocal/EditMode")local fj=fi:GetMethodFromName("AvatarCommandsBuildModeOnEnterBuildStateEvent",2)local fc=Il2Cpp.Class.FromName(u,"","ESCubeEdit")local eG=fc:GetMethodFromName("Enter",1)local fk=l(eG)+0x8D7;local fl=l(fj)+0x410;local fm={ByteArray({0x6A,0x01}),ByteArray({0x6A,0x00})}return function(a7)if a7 then local q=fm[2]Process.WriteMemory(fk,q)Process.WriteMemory(fl,q)else local q=fm[1]Process.WriteMemory(fk,q)Process.WriteMemory(fl,q)end end end;local fn=fh()local fo=function()local s=Il2Cpp.Domain.MainDomain;local t=s:AssemblyOpen("Assembly-CSharp.dll")local u=t.Image;local fp=Il2Cpp.Class.FromName(u,"","MVBuildModeAvatarLocal/EditMode")local fq=fp:GetMethodFromName("FrameUpdate",1)local fr=fp:GetMethodFromName("GetMovementVelocity",0)local fs=l(fq)+0x38;local dB=l(fr)local ft=ByteArray({0x55,0x89,0xE5,0x53,0x51,0x8B,0x45,0x0C,0x8D,0x1D,0x2E,0x00,0x00,0x00,0x8B,0x0B,0x89,0x48,0x44,0x8B,0x4B,0x04,0x89,0x48,0x48,0x6A,0x00,0x50,0xFF,0x75,0x08,0xE8,0xDC,0xFF,0xFF,0xFF,0x83,0xC4,0x0C,0x8B,0x45,0x08,0x59,0x5B,0xC9,0xC3,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x40})local fu=ByteArray(4)local a3=Process.Alloc(nil,ft.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local dJ=m.jump(a3:ToInt()+0X1F,dB:ToInt())ft:SetFromByteArray(0x20,dJ)Primitives.SetInt(ft.Address+0xA,a3:ToInt()+0x2E)local dK=m.jump(fs:ToInt(),a3:ToInt())local fv=m.jump(fs:ToInt(),dB:ToInt())Process.WriteMemory(a3,ft)return function(a7,fw)if a7~=nil then if a7 then Process.WriteMemory(fs+1,dK)else Process.WriteMemory(fs+1,fv)end end;if fw~=nil then Primitives.SetFloat(fu,fw[1])Process.WriteMemory(a3+0x2E,fu)Primitives.SetFloat(fu,fw[2])Process.WriteMemory(a3+0x2E+4,fu)end end end;local fx=fo()local fy=function()local fz={}fz.Checked=false;fz.Clicked=false;return fz end;local J={["checkbox1"]=fy(),["checkbox2"]=fy(),["checkbox3"]=fy(),["checkbox4"]=fy(),["checkbox5"]=fy(),["checkbox6"]=fy(),["checkbox7"]=fy(),["checkbox8"]=fy(),["checkbox9"]=fy(),["checkbox13"]=fy(),["checkbox14"]=fy(),["checkbox15"]=fy(),["checkbox16"]=fy(),["checkbox17"]=fy(),["checkbox18"]=fy(),["inputfloat1"]={["Value"]=1,["Style.Width"]=70,["Format"]="%.2f"},["dragint1"]={["Value"]=60,["Style.Width"]=120,["Min"]=0},["inputfloat2"]={["Value"]=4,["Style.Width"]=70,["Format"]="%.2f"},["inputfloat3"]={["Value"]=3,["Style.Width"]=70,["Format"]="%.2f"},["inputint1"]={["Value"]=1280,["Style.Width"]=90},["inputint2"]={["Value"]=780,["Style.Width"]=90},["comboxbox1"]={["Items"]={"ExclusiveFullScreen","FullScreenWindow","MaximizedWindow","Windowed"},["SelectItem"]="Windowed",["SelectIndex"]=3},["plotlines1"]={["Values"]={}},["plotlines2"]={["Values"]={}},["inputfloat4"]={["Value"]=0.0625,["Style.Width"]=100,["Format"]="%.6f"},["inputfloat5"]={["Value"]=15,["Style.Width"]=100,["Format"]="%.2f"},["inputfloat6"]={["Value"]=0.005,["Style.Width"]=100,["Format"]="%.5f"},["inputfloat7"]={["Value"]=2,["Style.Width"]=100,["Format"]="%.2f"},["inputfloat8"]={["Value"]=2,["Style.Width"]=100,["Format"]="%.2f"},["textinput1"]={["Text"]="",["Width"]=250},["textinput2"]={["Text"]="",["Width"]=250}}local fA={["timing"]=0,["fps_value"]=0,["ping_value"]=0,["fps_values_index"]=0,["fps_values_len"]=30,["ping_values_index"]=0,["ping_values_len"]=30}local bF=5;local fB=function()cP:Render(function(fC)if fC then local fD=J.checkbox1;local fE=J.checkbox2;local fF=J.inputfloat1;local fG=J.dragint1;local fH=J.checkbox3;local fI=J.checkbox4;local fJ=J.comboxbox1;local fK=J.checkbox5;local fL=J.inputfloat2;local fM=J.inputfloat3;local fN=J.inputint1;local fO=J.inputint2;local fP=J.checkbox6;local fQ=J.checkbox7;local fR=J.checkbox8;local fS=J.checkbox9;local fT=J.plotlines1;local fU=J.plotlines2;local fV=J.inputfloat4;local fW=J.inputfloat5;local fX=J.checkbox13;local fY=J.checkbox14;local fZ=J.inputfloat6;local f_=J.checkbox15;local g0=J.inputfloat7;local g1=J.inputfloat8;local g2=J.checkbox16;local cr=J.textinput1;local g3=J.textinput2;local g4=J.checkbox17;local g5=J.checkbox18;if GUI.CollapsingHeader("Build##collapsingheader_Build")then GUI.CheckBox("##checkbox1",fD)if fD.Clicked then d5(fD.Checked)end;GUI.SameLine()GUI.Label("No Build Limit")GUI.CheckBox("##checkbox2",fE)if fE.Clicked then dw(fE.Checked)end;GUI.SameLine()GUI.Label("Free Materials")GUI.CheckBox("##checkbox3",fH)if fH.Clicked then dk(fH.Checked)end;GUI.SameLine()GUI.Label("Custom Face Model")GUI.CheckBox("##checkbox4",fI)if fI.Clicked and not fI.Checked then dC(false,0)end;GUI.SameLine()GUI.Label("Custom Model Size")if fI.Checked then GUI.Label("Model Size")GUI.SameLine()GUI.InputFloat("##inputfloat1",fF)if fF.Changed then if fF.Value>0 and fF.Value<50 then dC(true,fF.Value)end end end;GUI.CheckBox("##checkbox5",fK)GUI.SameLine()GUI.Label("Rotation Custom")if fK.Clicked then if fK.Checked then eB("< X > Press to rotate model on an X axis\n< Y > Press to rotate model on an Y axis\n< Z > Press to rotate model on an Z axis")end;dM(fK.Checked)end;if fK.Checked then if Process.KeyIsDown(90)then dM(nil,{0,1,0})elseif Process.KeyIsDown(89)then dM(nil,{1,0,0})elseif Process.KeyIsDown(88)then dM(nil,{0,0,1})end end;GUI.CheckBox("##checkbox6",fP)GUI.SameLine()GUI.Label("Free Edit Speed Movement")if fP.Clicked then dZ(fP.Checked)end;cE:OnGUI()GUI.Label("Custom Grid")GUI.SameLine()GUI.InputFloat("##inputfloat4",fV)if fV.Changed and fV.Value>0 then eN(fV.Value)end;GUI.Label("Rotation Custom Speed")GUI.SameLine()GUI.InputFloat("##inputfloat5",fW)if fW.Changed and fW.Value>0 then eS(fW.Value)end;GUI.CheckBox("##checkbox14",fY)GUI.SameLine()GUI.Label("MultiSelect BETA")if fY.Clicked then f4(fY.Checked)end;GUI.Label("Custom Speed Translate")GUI.SameLine()GUI.InputFloat("##inputfloat6",fZ)if fZ.Changed and fZ.Value>0 and fZ.Value<0.5 then fa(fZ.Value)end;GUI.CheckBox("##checkbox15",f_)GUI.SameLine()GUI.Label("Edit Mode Speed Hack")if f_.Clicked then fx(f_.Checked,nil)end;if f_.Checked then GUI.Label("Y Speed")GUI.SameLine()GUI.InputFloat("##inputfloat7",g0)GUI.Label("XZ Speed")GUI.SameLine()GUI.InputFloat("##inputfloat8",g1)if g0.Changed or g1.Changed then fx(nil,{math.min(g0.Value,20),math.min(g1.Value,20)})end end;GUI.CheckBox("##checkbox18",g5)GUI.SameLine()GUI.Label("Model Edit No Background")if g5.Clicked then fn(g5.Checked)end;cF:OnGUI()bX.OnGUI()end;if GUI.CollapsingHeader("PvP##collapsingheader_PvP")then GUI.Label("FPS")GUI.SameLine()GUI.DragInt("##dragint1",fG)if fG.Changed then if fG.Value>15 then cX.Application_set_targetFrameRate(fG.Value)cX.QualitySettings_set_vSyncCount(0)end end;GUI.Label("Aspect Ration")GUI.SameLine()GUI.InputFloat("##inputfloat2",fL)GUI.SameLine()GUI.Label(" : ")GUI.SameLine()GUI.InputFloat("##inputfloat3",fM)GUI.SameLine()if GUI.Button("OK##button1")then if fL.Value>0 and fM.Value>0 then cZ(fL.Value/fM.Value)end end;GUI.Label("Resolution")GUI.SameLine()GUI.InputInt("##inputint1",fN)GUI.SameLine()GUI.Label(" x ")GUI.SameLine()GUI.InputInt("##inputint2",fO)GUI.ComboBox("##comboxbox1",fJ)GUI.SameLine()if GUI.Button("OK##button2")then if fN.Value>0 and fO.Value>0 then dU(fN.Value,fO.Value,fJ.SelectIndex)end end;GUI.CheckBox("##checkbox13",fX)GUI.SameLine()GUI.Label("Kill Count")if fX.Clicked then eY(fX.Checked)end;GUI.CheckBox("##checkbox17",g4)GUI.SameLine()GUI.Label("Fast Respawn")if g4.Clicked then fg(g4.Checked)end;cD:OnGUI()end;if GUI.CollapsingHeader("Texture##collapsingheader_PvP")then cL:OnGUI()cM:OnGUI()end;if GUI.CollapsingHeader("Interface##collapsingheader_Interface")then cB:OnGUI()GUI.CheckBox("##checkbox7",fQ)GUI.SameLine()GUI.Label("No Chat")if fQ.Clicked then e3(fQ.Checked)end;GUI.CheckBox("##checkbox8",fR)GUI.SameLine()GUI.Label("No Notification")if fR.Clicked then e8(fR.Checked)end;cG:OnGUI()cH:OnGUI()end;if GUI.CollapsingHeader("Quality##collapsingheader_Quality")then GUI.CheckBox("##checkbox9",fS)GUI.SameLine()GUI.Label("Water Reflective")if fS.Clicked then ej(fS.Checked)end;cI:OnGUI()cK:OnGUI()cC:OnGUI()cJ:OnGUI()end;fA.timing=fA.timing+es["get_deltaTime"]()if fA.timing>0.3 then fA.fps_value=es:FPS()fA.ping_value=ex()fA.timing=0;if fA.fps_values_index<fA.fps_values_len then fA.fps_values_index=fA.fps_values_index+1;fT.Values[fA.fps_values_index]=fA.fps_value else for cb=1,fA.fps_values_len-1,1 do fT.Values[cb]=fT.Values[cb+1]end;fT.Values[fA.fps_values_len]=fA.fps_value end;if fA.ping_values_index<fA.ping_values_len then fA.ping_values_index=fA.ping_values_index+1;fU.Values[fA.ping_values_index]=fA.ping_value else for cb=1,fA.ping_values_len-1,1 do fU.Values[cb]=fU.Values[cb+1]end;fU.Values[fA.ping_values_len]=fA.ping_value end end;if GUI.CollapsingHeader("Config and Info##collapsingheader_Config_And_Info")then GUI.CheckBox("##checkbox16",g2)GUI.SameLine()if g2.Checked then GUI.Label("Light")else GUI.Label("Dark")end;if g2.Clicked then if g2.Checked then cP:StyleLight()else cP:StyleDark()end end;GUI.Label(string.format("FPS: %.0f",fA.fps_value))GUI.SameLine()GUI.PlotLines("##plotlines1",fT)GUI.Label(string.format("Ping: %dms",fA.ping_value))GUI.SameLine()GUI.PlotLines("##plotlines2",fU)GUI.Label("KoGaMa Version: "..eo())GUI.Label("Helper: Henrique and Pipocalio")GUI.Label("Created By Maury")end;do cG:Callback()cF:Callback()cH:Callback()bX.Callback()end else bF=bF-1;if bF==0 then Unity.UnregisterInUpdate(tostring(cP))end end end)end;Unity.RegisterInOneUpdate(function()eB("Welcome to KoGaMa Plugin 4.5.1")cP=Window("KoGaMa Plugin")local bH=Size(400,300)cP.Size=bH;Unity.RegisterInUpdate(tostring(cP),fB)end)end
