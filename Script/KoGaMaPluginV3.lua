local a=require("Helper")local b=a.AssemblyInfo;local c=function(d,e)if e then return function(...)return Il2Cpp.Runtime.Invoke(d,nil,{...},function(f)print("Error")end)end else return function(g,...)return Il2Cpp.Runtime.Invoke(d,g,{...},function(f)print("Error")end)end end end;local h=function(i,e)if e then return{["get"]=function()return i:GetValueObject(Il2Cpp.Object.FromAny(nil))end,["set"]=function(j)i:StaticSetValue(j)end}else return{["get"]=function(k)return i:GetValueObject(k)end,["set"]=function(k,j)i:SetValue(k,j)end}end end;local l=function(d)return Primitives.GetPointer(d.Address)end;local Primitives=Primitives;local m={["jump"]=function(n,o)local p=o-n-5;local q=ByteArray(4)Primitives.SetInt(q,p)return q end}local r=function()local s=b.FromName("Assembly-CSharp.dll")local t=b.FromName("mscorlib.dll")local u=b.FromName("UnityEngine.CoreModule.dll")local v=s.GetClass("","MVInputWrapper")local w=t.GetClass("System","Enum")local x=s.GetClass("","KogamaControls")local y=x.klass().Type.Object;local z=u.GetClass("UnityEngine","KeyCode")local A=z.klass().Type.Object;local B={["comboxbox_keybind1"]={["Items"]={"Jump","MoveForward","MoveBackwards","MoveLeft","MoveRight","Fire"},["SelectItem"]="Jump",["SelectIndex"]=0},["textinput_keybind1"]={["Text"]=""}}return{["OnGUI"]=function(self)local C=B["comboxbox_keybind1"]local D=B["textinput_keybind1"]GUI.ComboBox("##comboxbox_keybind1",C)GUI.TextInput("##textinput_keybind1",D)if GUI.Button("Change##button_keybind1")then self.Keybind(C.SelectItem,D.Text)end end,["Keybind"]=function(E,F)local G=v.GetValue("inputMap").Cast()local H=G.GetValue("keyMapping")local E=w.GetMethod("Parse",{"System.Type","System.String"})(y,E)local F=w.GetMethod("Parse",{"System.Type","System.String"})(A,F)local I=H.GetProperty("Item",{"KogamaControls"}).get(E)I.GetMethod("SetValue",{"System.Object","System.Int32"})(F,0)end}end;local J=function()local K=b.FromName("UnityEngine.CoreModule.dll")local L=K.GetClass("UnityEngine","Camera")local M=nil;Unity.RegisterInOneUpdate(function()M=L.GetProperty("main").get()end)local B={["inputfloat_customdrawdistance1"]={["Value"]=400.0,["Style.Width"]=70,["Format"]="%.2f"}}return{["OnGUI"]=function(self)local N=B.inputfloat_customdrawdistance1;GUI.Label("Custom Draw Distance")GUI.SameLine()GUI.InputFloat("##inputfloat_customdrawdistance1",N)GUI.SameLine()if GUI.Button("OK##button_customdrawdistance1")then self.Callback(N.Value)end end,["Callback"]=function(j)M.GetProperty("farClipPlane").set(j)end}end;local O=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local R=Il2Cpp.Class.FromName(Q,"","CrossHair")local S=R:GetMethodFromName("UpdateCrossHair",1)local T=l(S)local U=T+0x56;local V=ByteArray({0x55,0x8B,0xEC,0xB8,0x00,0x00,0x00,0x00,0xC9,0xC3,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3F})local W=Process.Alloc(nil,V.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)Primitives.SetInt(V.Address+0x04,W:ToInt()+0x0A)Process.WriteMemory(W,V)local X={ByteArray({0x8B,0x88,0xEC,0x00,0x00,0x00}),ByteArray({0xB9,0x00,0x00,0x00,0x00,0x90})}Primitives.SetInt(X[2].Address+0x01,W:ToInt())local B={["coloredit4_customcrosshaircolor1"]={["Color"]=GUI.Color(0,1,0,1),["Style.Width"]=120},["checkbox_customcrosshaircolor1"]={["Checked"]=false}}return{["OnGUI"]=function(self)local Y=B.coloredit4_customcrosshaircolor1;local Z=B.coloredit4_customcrosshaircolor1;GUI.CheckBox("##checkbox_customcrosshaircolor1",Z)GUI.SameLine()GUI.Label("Custom Color CrossHair")if Z.Clicked then self.Callback(Z.Checked,nil)end;if Z.Checked then GUI.ColorEdit4("##coloredit4_customcrosshaircolor1",Y)if Y.Changed then self.Callback(nil,Y.Color)end end end,["Callback"]=function(_,a0)if _~=nil then if _ then Process.WriteMemory(U,X[2])else Process.WriteMemory(U,X[1])end end;if a0~=nil then local a1=W+0x0A;Primitives.SetFloat(a1,a0.R)Primitives.SetFloat(a1+4,a0.G)Primitives.SetFloat(a1+8,a0.B)Primitives.SetFloat(a1+12,a0.A)end end}end;local a2=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local a3=P:AssemblyOpen("UnityEngine.UI.dll")local a4=a3.Image;local a5=Il2Cpp.Class.FromName(a4,"UnityEngine.UI","InputField")local a6=Il2Cpp.Class.FromName(Q,"","SettingsSlider")local a7=Il2Cpp.Class.FromName(Q,"","SettingsInputFieldSlider")local a8=Il2Cpp.Class.FromName(Q,"","SettingsInputField")local a9=a8:GetMethodFromName("Initialize",2)local aa=a5:GetMethodFromName("set_text",1)local ab=a5:GetMethodFromName("set_characterLimit",1)local ac=a7.Methods;local ad=nil;local ae=nil;for af,d in pairs(ac)do if d.ParamCount==2 and d.Name=="Initialize"then local ag=d:GetParam(1).Name;if ag=="System.Single"then ad=d elseif ag=="System.Int32"then ae=d end end end;local ah=a6.Methods;local ai=nil;local aj=nil;for af,d in pairs(ah)do if d.ParamCount==4 and d.Name=="Initialize"then local ag=d:GetParam(1).Name;if ag=="System.Single"then ai=d elseif ag=="System.Int32"then aj=d end end end;local ak=l(aj)+0x2A;local al=l(ai)+0x27;local am=l(aj)+0x4A;local an=l(ai)+0x44;local ao=l(aa)local ap=l(ab)local aq=l(a9)+0x59;local ar=l(ad)+0xA2;local as=l(ae)+0xA5;local at={ByteArray({0x68,0x00,0x50,0xC3,0x47,0x90}),ByteArray({0x51,0xF3,0x0F,0x11,0x04,0x24}),ByteArray({0x68,0x00,0x00,0x00,0x00,0x90})}local au=ByteArray({0x55,0x89,0xE5,0xFF,0x75,0x0C,0xFF,0x75,0x08,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x08,0x68,0xE8,0x03,0x00,0x00,0xFF,0x75,0x08,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x08,0xC9,0xC3})local W=Process.Alloc(nil,au.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local av=W+0x9;local aw=W+0x19;au:SetFromByteArray(0xA,m.jump(av:ToInt(),ao:ToInt()))au:SetFromByteArray(0x1A,m.jump(aw:ToInt(),ap:ToInt()))local ax={m.jump(aq:ToInt(),W:ToInt()),m.jump(ar:ToInt(),W:ToInt()),m.jump(as:ToInt(),W:ToInt()),m.jump(aq:ToInt(),ao:ToInt()),m.jump(ar:ToInt(),ao:ToInt()),m.jump(as:ToInt(),ao:ToInt())}Process.WriteMemory(W,au)local B={["unlimitconfig_checkbox1"]={["Checked"]=false},["unlimitconfig_input1"]={["Value"]=100000,["Style.Width"]=70,["Format"]="%.2f"},["unlimitconfig_input2"]={["Value"]=0,["Style.Width"]=70,["Format"]="%.2f"}}return{["OnGUI"]=function(self)local ay=B.unlimitconfig_checkbox1;local az=B.unlimitconfig_input1;local aA=B.unlimitconfig_input2;GUI.CheckBox("##unlimitconfig_checkbox1",ay)GUI.SameLine()GUI.Label("Unlimited Config")if ay.Clicked then self.Callback(ay.Checked,nil,nil)end;if ay.Checked then GUI.Label("Max Value")GUI.SameLine()GUI.InputFloat("##unlimitconfig_input1",az)GUI.Label("Min Value")GUI.SameLine()GUI.InputFloat("##unlimitconfig_input2",aA)if az.Changed or aA.Changed then self.Callback(ay.Checked,az.Value,aA.Value)end end end,["Callback"]=function(_,aB,aC)if aB~=nil then Primitives.SetFloat(at[1].Address+1,aB)end;if aC~=nil then Primitives.SetFloat(at[3].Address+1,aC)end;if _ then Process.WriteMemory(ak,at[1])Process.WriteMemory(al,at[1])Process.WriteMemory(am,at[3])Process.WriteMemory(an,at[3])Process.WriteMemory(aq+1,ax[1])Process.WriteMemory(ar+1,ax[2])Process.WriteMemory(as+1,ax[3])else Process.WriteMemory(aq+1,ax[4])Process.WriteMemory(ar+1,ax[5])Process.WriteMemory(as+1,ax[6])Process.WriteMemory(ak,at[2])Process.WriteMemory(al,at[2])Process.WriteMemory(am,at[2])Process.WriteMemory(an,at[2])end end}end;local function aD()local s=b["Assembly-CSharp"]()local aE=b.FromName("UnityEngine.InputLegacyModule.dll")local aF=s.GetClass("","MVGameControllerBase")local aG=s.GetClass("","MVGameControllerDesktop")local aH=aE.GetClass("UnityEngine","Input")local aI=s.GetClass("","MVInputWrapper")local aJ=false;local aK=false;local B={["checkbox1_colorpick"]={["Checked"]=false}}return{["Invoke"]=function()local aL=aF.GetProperty("GameMode").get()local aM=nil;if aL==0 then local aN=aF.GetProperty("EditModeUI").get()local aO=aN.Cast()aM=aO.GetProperty("EditModeStateMachine").get()elseif aL==2 then local g=aG.GetProperty("Instance").get()local aP=g.GetValue("modeController")local aQ=aP.Cast()aM=aQ.GetValue("editorStateMachine")end;if aM~=nil then local aR=aM.GetValue("cubeModelingStateMachine")local aS=aR.GetProperty("TargetCubeModel").get()if aS~=nil then local aT=aR.GetMethod("DoPicking")()if aT~=nil then local aU=aT.GetValue("pickedFace")local aV=aT.GetValue("cube")local aW=aV.GetValue("faceMaterials")local aX=aW.GetMethod("GetValue",{"int"})(aU)local aY=aX.Cast()aR.GetProperty("CurrentMaterialId").set(aY)end end end end,["Callback"]=function(self)local aZ=B.checkbox1_colorpick;if aZ.Checked then if aI.GetProperty("IsAllInputSuppressed").get()==false then local a_=aH.GetMethod("GetKey",{"UnityEngine.KeyCode"})(325)if aJ~=a_ then aJ=a_;aK=true end;if aK and a_ then self.Invoke()end end;aK=false elseif aZ.Clicked and not aZ.Checked then aK=false;aJ=false end end,["OnGUI"]=function(self)local aZ=B["checkbox1_colorpick"]GUI.CheckBox("##checkbox1_colorpick",aZ)GUI.SameLine()GUI.Label("Color Pick (Mouse 3)")end}end;local function b0()local s=b["Assembly-CSharp"]()local aE=b.FromName("UnityEngine.InputLegacyModule.dll")local aF=s.GetClass("","MVGameControllerBase")local aG=s.GetClass("","MVGameControllerDesktop")local aI=s.GetClass("","MVInputWrapper")local aH=aE.GetClass("UnityEngine","Input")local aJ=false;local aK=false;local b1={["checkbox1_activeUiHotkey"]={["Checked"]=false}}return{["Invoke"]=function()local aL=aF.GetProperty("GameMode").get()if aL==0 then local aN=aF.GetProperty("EditModeUI").get()local aO=aN.Cast()local b2=aO.GetProperty("IsInPlayInEditMode").get()if not b2 then local b3=aO.GetProperty("gameObject").get()local b4=b3.GetProperty("activeSelf").get()b3.GetMethod("SetActive",{"bool"})(not b4)else local b5=aF.GetProperty("PlayModeUI").get()local b6=b5.Cast()local b3=b6.GetProperty("gameObject").get()local b4=b3.GetProperty("activeSelf").get()b3.GetMethod("SetActive",{"bool"})(not b4)end elseif aL==1 then local b5=aF.GetProperty("PlayModeUI").get()local b6=b5.Cast()local b3=b6.GetProperty("gameObject").get()local b4=b3.GetProperty("activeSelf").get()b3.GetMethod("SetActive",{"bool"})(not b4)elseif aL==2 then local g=aG.GetProperty("Instance").get()local aP=g.GetValue("modeController")local aQ=aP.Cast()local b3=aQ.GetProperty("gameObject").get()local b4=b3.GetProperty("activeSelf").get()b3.GetMethod("SetActive",{"bool"})(not b4)end end,["Callback"]=function(self)local b7=b1.checkbox1_activeUiHotkey;if b7.Checked then if aI.GetProperty("IsAllInputSuppressed").get()==false then local a_=aH.GetMethod("GetKey",{"UnityEngine.KeyCode"})(106)if aJ~=a_ then aJ=a_;aK=true end;if aK and a_ then self.Invoke()end end;aK=false elseif b7.Clicked and not b7.Checked then aK=false;aJ=false end end,["OnGUI"]=function(self)local b7=b1.checkbox1_activeUiHotkey;GUI.CheckBox("##checkbox1_activeUiHotkey",b7)GUI.SameLine()GUI.Label("Toggle UI (J)")end}end;local function b8()local b9=b["Assembly-CSharp"]()local ba=b["UnityEngine.CoreModule"]()local aE=b.FromName("UnityEngine.InputLegacyModule.dll")local bb=ba.GetClass("UnityEngine","Screen")local bc=b9.GetClass("","FullScreenController")local aH=aE.GetClass("UnityEngine","Input")local aI=b9.GetClass("","MVInputWrapper")local aJ=false;local aK=false;local B={["checkbox1_fullScreenHotkey"]={["Checked"]=false}}return{["Invoke"]=function()local bd=bb.GetProperty("fullScreen").get()bc.GetProperty("FullScreen").set(not bd)end,["Callback"]=function(self)local be=B.checkbox1_fullScreenHotkey;if be.Checked then if aI.GetProperty("IsAllInputSuppressed").get()==false then local a_=aH.GetMethod("GetKey",{"UnityEngine.KeyCode"})(292)if aJ~=a_ then aJ=a_;aK=true end;if aK and a_ then self.Invoke()end end;aK=false elseif be.Clicked and not be.Checked then aK=false;aJ=false end end,["OnGUI"]=function(self)local be=B["checkbox1_fullScreenHotkey"]GUI.CheckBox("##checkbox1_fullScreen",be)GUI.SameLine()GUI.Label("Toggle FullScreen (F11)")end}end;local function bf()local s=b["Assembly-CSharp"]()local aF=s.GetClass("","MVGameControllerBase")local bg=s.GetClass("","ThemeRepository")local bh=s.GetClass("","AvatarEditModeBodyController")local bi=nil;local B={["checkbox1_themeUtils"]={["Checked"]=true},["button1_themeUtils"]={},["button2_themeUtils"]={},["comboxbox1_themeUtils"]={["Items"]={"Current","RoundSquare","Normal","Christmas","Puzzle","Scary","BoxPumpkin","RoundCircleSkull","Cartoon","Triangles","Pumpkin","Animals","Heart","SquareSkull","BoxHalloween","RoundSkull","BoxSkull","Candy","Square","RoundBoxSkull","RoundSquareSkull","Cloudy"},["SelectItem"]="Current",["SelectIndex"]=0}}return{["EnableTheme"]=function(_)local aL=aF.GetProperty("GameMode").get()if aL~=2 then local bj=bg.GetProperty("Instance").get()local bk=bj.GetProperty("CurrentThemeVisualization").get()if bk~=nil then if _ then bk.GetMethod("Activate")()else bk.GetMethod("Deactivate")()end end else local bl=bh.GetValue("Theme")if bl~=nil then if _ then bl.GetMethod("Activate")()else bl.GetMethod("Deactivate")()end end end end,["CreateThemePreview"]=function(ag)local aL=aF.GetProperty("GameMode").get()if aL~=2 then local bj=bg.GetProperty("Instance").get()if bi~=nil then bj.GetMethod("DestroyTemporary",{"Theme"})(bi)bi=nil end;if ag~="Current"then bi=bj.GetMethod("CreateTemporaryThemeVisualization",{"string"})(ag)local bm=bi.Cast()end else end end,["SetupThemePreview"]=function(bn,j)if bi~=nil then local bm=bi.Cast()if bn=="dayNightCycle"then bm.GetMethod("ToggleDayNightCycle",{"bool"})(j)elseif bn=="useServerTime"then bm.GetMethod("ToggleDayNightCycleUseServerTime",{"bool"})(j)end end end,["GetInfoTheme"]=function(bn,bo)if bi~=nil then local bm=bi.Cast()if bn=="dayNightCycle"then local bp=bm.GetValue("dayNightCycle")local b4=bp.GetProperty("enabled").get()return b4 elseif bn=="useServerTime"then local bp=bm.GetValue("dayNightCycle")local bq=bp.GetValue("useServerTime")return bq end else return bo end end,["OnGUI"]=function(self)local br=B["checkbox1_themeUtils"]local bs=B["comboxbox1_themeUtils"]GUI.CheckBox("##checkbox1_themeUtils",br)GUI.SameLine()GUI.Label("Theme")if br.Clicked then self.EnableTheme(br.Checked)end;GUI.ComboBox("##comboxbox1_themeUtils",bs)GUI.SameLine()local bt=GUI.Button("OK##button1_themeUtils")if br.Checked and bt then self.CreateThemePreview(bs.SelectItem)end;local bu=GUI.Button("Theme Config##button2_themeUtils")if bu then local bv=self;bv:CreateThemeConfig()end end,["CreateThemeConfig"]=function(self)if bi==nil then return end;local bw={["checkbox1_themeUtils"]={["Checked"]=self.GetInfoTheme("dayNightCycle",false)},["checkbox2_themeUtils"]={["Checked"]=self.GetInfoTheme("useServerTime",false)}}Unity.RegisterInOneUpdate(function()local bx=5;local by=Window("Theme Config")local bz=Size(400,300)by.Size=bz;local bA=tostring(by)Unity.RegisterInUpdate(bA,function()by:Render(function(bB)if bB then local br=bw.checkbox1_themeUtils;local bC=bw.checkbox2_themeUtils;GUI.CheckBox("##checkbox1_themeUtils",br)GUI.SameLine()GUI.Label("DayNightCycle")if br.Clicked then self.SetupThemePreview("dayNightCycle",br["Checked"])end;GUI.CheckBox("##checkbox2_themeUtils",bC)GUI.SameLine()GUI.Label("UseServerTime")if bC.Clicked then self.SetupThemePreview("useServerTime",bC["Checked"])end else bx=bx-1;if bx==0 then Unity.RegisterInUpdate(bA)end end end)end)end)end}end;local function bD()local bE=Il2Cpp.ResolveIcall("UnityEngine.QualitySettings::set_shadowDistance")local bF=ByteArray({0x55,0x89,0xE5,0x8B,0x5D,0x08,0xFF,0x73,0x04,0xFF,0x13,0x83,0xC4,0x04,0xC9,0xC3})local W=Process.Alloc(nil,bF.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)Process.WriteMemory(W,bF)local bG=ByteArray(8)local bH={["inputfloat1_shadowDistance"]={["Value"]=70,["Style.Width"]=70,["Format"]="%.2f"}}return{["Invoke"]=function(j)if j>0 then local bI=Primitives.NewFloat(j)local bJ=Primitives.GetPointer(bI.Address)Process.Invoke(bE,bJ)end end,["OnGUI"]=function(self)local bK=bH.inputfloat1_shadowDistance;GUI.Label("Shadow Distance")GUI.SameLine()GUI.InputFloat("##inputfloat1_shadowDistance",bK)if bK.Changed then self.Invoke(bK.Value)end end}end;local function bL()local B={["checkbox1_antiafk"]={["Checked"]=false}}return{["OnGUI"]=function(self)local bM=B["checkbox1_antiafk"]GUI.CheckBox("##checkbox1_antiafk",bM)GUI.SameLine()GUI.Label("Anti AFK")if bM.Clicked then self.Callback(bM.Checked)end end,["Callback"]=function(_)local bN=b["Assembly-CSharp"]()local bO=bN.GetClass("","AwayMonitor")local g=bO.GetValue("instance")g.SetValue("idleKickEnabled",not _)end}end;local function bP()local bN=b["Assembly-CSharp"]()local aE=b.FromName("UnityEngine.InputLegacyModule.dll")local bQ=bN.GetClass("","EditModeObjectPicker")local bR=bN.GetClass("","VoxelHit")local bS=bN.GetClass("","MVGameControllerBase")local aI=bN.GetClass("","MVInputWrapper")local aH=aE.GetClass("UnityEngine","Input")local aJ=false;local aK=false;local function bT()local bU=bR.New()local bV=bQ.GetMethod("Pick",{"VoxelHit&","System.Collections.Generic.HashSet<System.Int32>","System.Int32"})local bW=bV(bU,nil,-262149)if bW then local bX=bU.GetValue("woId")return bX else return-1 end end;local bY={}local bZ={}bZ["AddItem"]=function()local b_=bT()table.insert(bY,b_)print(b_)end;bZ["Reset"]=function()bY={}end;bZ["Clone"]=function()local c0=bS.GetProperty("OperationRequests").get()local c1=bS.GetProperty("WOCM").get()local d=c0.GetMethod("CloneWorldObjectTree",{"MVWorldObjectClient","bool","bool","bool"})local c2=c1.GetMethod("GetWorldObject",{"int"})for c3=1,#bY,1 do local c4=c2(bY[c3]).Cast()if c4~=nil then local c5=c4.GetMethod("HasInteractionFlag",{"InteractionFlags"})if c5(8192)and not c5(131072)then d(c4,false,false,false)end end end end;bZ["OnGUI"]=function()GUI.Separator()GUI.Label("Multi Clone (F1)")if GUI.Button("Clone##button1_multiclone")then try(function()bZ["Clone"]()end,function(f)print(f)end)end;GUI.SameLine()if GUI.Button("Reset##button2_multiclone")then bZ["Reset"]()end end;bZ["Callback"]=function()if aI.GetProperty("IsAllInputSuppressed").get()==false then local a_=aH.GetMethod("GetKey",{"UnityEngine.KeyCode"})(0x11A)if aJ~=a_ then aJ=a_;aK=true end;if aK and a_ then try(function()bZ["AddItem"]()end,function(f)print(f)end)end end;aK=false end;return bZ end;local function c6()local c7=b.FromName("UnityEngine.UnityWebRequestTextureModule.dll")local c8=b.FromName("Assembly-CSharp.dll")local c9=c7.GetClass("UnityEngine.Networking","UnityWebRequestTexture")local ca=c7.GetClass("UnityEngine.Networking","DownloadHandlerTexture")local bS=c8.GetClass("","MVGameControllerBase")local function cb(cc,cd)local ce=c9.GetMethod("GetTexture",{"string"})(cc)ce.GetMethod("SendWebRequest")()local ag=tostring(ce)Unity.RegisterInUpdate(ag,function()local cf=ce.GetProperty("isDone").get()if cf then local cg=ca.GetMethod("GetContent",{"UnityEngine.Networking.UnityWebRequest"})(ce)cd(cg)Unity.UnregisterInUpdate(ag)end end)end;local ch={["textinput1_customtexturematerial"]={["Text"]="",["Width"]=250}}return{["Callback"]=function(cc)cb(cc,function(cd)local ci=bS.GetProperty("MaterialLoader").get()ci.GetMethod("SetMainTexture",{"UnityEngine.Texture2D"})(cd)ci.GetMethod("SetupMaterials",{})()end)end,["OnGUI"]=function(self)local cj=ch["textinput1_customtexturematerial"]GUI.TextInput("##textinput1_customtexturematerial",cj)if GUI.Button("Custom Texture Materials ##button1_customtexturematerial")then self.Callback(cj.Text)end end}end;local function ck()local c7=b.FromName("UnityEngine.UnityWebRequestTextureModule.dll")local c8=b.FromName("Assembly-CSharp.dll")local u=b.FromName("UnityEngine.CoreModule.dll")local c9=c7.GetClass("UnityEngine.Networking","UnityWebRequestTexture")local ca=c7.GetClass("UnityEngine.Networking","DownloadHandlerTexture")local bS=c8.GetClass("","MVGameControllerBase")local cl=u.GetClass("UnityEngine","Sprite")local function cb(cc,cd)local ce=c9.GetMethod("GetTexture",{"string"})(cc)ce.GetMethod("SendWebRequest")()local ag=tostring(ce)Unity.RegisterInUpdate(ag,function()local cf=ce.GetProperty("isDone").get()if cf then local cg=ca.GetMethod("GetContent",{"UnityEngine.Networking.UnityWebRequest"})(ce)cd(cg)Unity.UnregisterInUpdate(ag)end end)end;local ch={["textinput1_customtexturecrosshair"]={["Text"]="",["Width"]=250}}return{["Callback"]=function(cc)cb(cc,function(cd)local cm=bS.GetProperty("PlayModeUI").get().Cast()local cn=cm.GetMethod("GetCrossHair",{})().Cast()local co=cn.GetValue("crossHair")local cp=co.GetProperty("sprite").get()local cq=cp.GetProperty("pivot").get()local cr=cp.GetProperty("rect").get()local cs=cl.GetMethod("Create",{"UnityEngine.Texture2D","UnityEngine.Rect","UnityEngine.Vector2"})(cd,cr,cq)co.GetProperty("sprite").set(cs)end)end,["OnGUI"]=function(self)local cj=ch["textinput1_customtexturecrosshair"]GUI.TextInput("##textinput1_customtexturecrosshair",cj)if GUI.Button("Texture Crosshair ##button1_customtexturecrosshair")then self.Callback(cj.Text)end end}end;local function ct()local function cu(q,n,cv)local cw=cv:ToInt()local cx=n:ToInt()local cy=cw-cx-5;Primitives.SetInt(q.Address+1,cy)Process.WriteMemory(n,q)end;local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local cz=Il2Cpp.Class.FromName(Q,"UGUI.Desktop.Scripts.EditMode.Gizmo","GizmoMenuNg")local cA=Il2Cpp.Class.FromName(Q,"UGUI.Desktop.Scripts.EditMode.Gizmo","RotationHelper")local cB=Il2Cpp.Class.FromName(Q,"","MVPlayer")local cC=Il2Cpp.Class.FromName(Q,"","MVWorldObjectClient")local cD=l(cz:GetMethodFromName("Setup",0))local cE=l(cz:GetMethodFromName("OnJoinChanged",1))local cF=l(cB:GetMethodFromName("get_IsSubscriber",0))local cG=l(cC:GetMethodFromName("HasInteractionFlag",1))local cH=l(cA:GetMethodFromName("RotateStep",2))local cI=cD+0x69;local cJ=cE+0x23;local cK=cD+593;local cL=cD+713;local cM=cD+654;local cN=cH+1457;local cO=cH+1518;local cP=cH+1579;local cQ=ByteArray({0xB8,0x01,0x00,0x00,0x00})local cR=ByteArray({0xE8,0x00,0x00,0x00,0x00})local B={["checkbox1_customrotationfree"]={["Checked"]=false}}return{["Callback"]=function(_)if _ then Process.WriteMemory(cI,cQ)Process.WriteMemory(cJ,cQ)Process.WriteMemory(cK,cQ)Process.WriteMemory(cL,cQ)Process.WriteMemory(cM,cQ)Process.WriteMemory(cN,cQ)Process.WriteMemory(cO,cQ)Process.WriteMemory(cP,cQ)else cu(cR,cI,cF)cu(cR,cJ,cF)cu(cR,cK,cG)cu(cR,cL,cG)cu(cR,cM,cG)cu(cR,cN,cG)cu(cR,cO,cG)cu(cR,cP,cG)end end,["OnGUI"]=function(self)local cS=B["checkbox1_customrotationfree"]GUI.CheckBox("##checkbox1_customrotationfree",cS)GUI.SameLine()GUI.Label("Custom Rotation Free")if cS.Clicked then self.Callback(cS.Checked)end end}end;if globalThis:Get("KoGaMa Plugin")==nil and Process.GetName()=="kogama.exe"then globalThis:Set("KoGaMa Plugin",true)local cT=r()local cU=J()local cV=O()local cW=a2()local cX=aD()local cY=b0()local cZ=b8()local c_=bf()local d0=bD()local d1=bL()local bP=bP()local d2=c6()local d3=ck()local d4=ct()local d5=Process.GetModuleFromName("UnityPlayer.dll")local d6=Pointer(0x55BC77)Unity.SetMainUpdateHook(d5+d6)local d7=nil;local d8=function()local K=b.FromName("UnityEngine.CoreModule.dll")local d9=K.GetClass("UnityEngine","Application")local da=Il2Cpp.ResolveIcall("UnityEngine.QualitySettings::set_vSyncCount")local db={}db.Application_set_targetFrameRate=function(j)d9.GetProperty("targetFrameRate").set(j)end;db.QualitySettings_set_vSyncCount=function(dc)local dd=Primitives.NewInt(dc)local de=Primitives.GetPointer(dd)Process.Invoke(da,de)end;return db end;local df=d8()local dg=function()local K=b.FromName("UnityEngine.CoreModule.dll")local L=K.GetClass("UnityEngine","Camera")local M=nil;Unity.RegisterInOneUpdate(function()M=L.GetProperty("main").get()end)return function(j)M.GetProperty("aspect").set(j)end end;local dh=dg()local di=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local dj=Il2Cpp.Class.FromName(Q,"","ESCubeEdit")local dk=Il2Cpp.Class.FromName(Q,"","CEEditBodyUUI")local dl={ByteArray({0x31,0xC0}),ByteArray({0x89,0x01}),ByteArray({0xFF,0xD1})}local dm=l(dj:GetMethodFromName("Enter",1))+0x396;local dn=l(dk:GetMethodFromName("Enter",1))+0x6B6;return function(_)if _ then Process.WriteMemory(dm,dl[1])Process.WriteMemory(dn,dl[1])else Process.WriteMemory(dm,dl[2])Process.WriteMemory(dn,dl[3])end end end;local dp=di()local dq=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local dr=Il2Cpp.Class.FromName(Q,"","PaintCubes")local ds=Il2Cpp.Class.FromName(Q,"","MVCubeModelBase")local dt=dr:GetMethodFromName("Execute",1)local du=ds:GetMethodFromName("SetMaterial",3)local dv=ds:GetMethodFromName("ReplaceCube",2)local cI=l(dt)+0xB1;local cK=l(dt)+0x1B8;local cL=l(du)local cM=l(dv)local dw=ByteArray({0x90,0x90,0x90,0x90,0x90,0x90})local dx=ByteArray({0x0F,0x84,0x8F,0x01,0x00,0x00})local dy=ByteArray({0x55,0x89,0xE5,0x83,0xEC,0x10,0x89,0xF3,0x83,0xFB,0x00,0x74,0x20,0x8B,0x5B,0x4C,0x83,0xFB,0x00,0x74,0x18,0x8B,0x5B,0x0C,0xFF,0x75,0x14,0x53,0xFF,0x75,0x10,0xFF,0x75,0x0C,0xFF,0x75,0x08,0xE8,0xD6,0xFF,0xFF,0xFF,0x83,0xC4,0x14,0xC9,0xC3})local W=Process.Alloc(nil,dy.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local dz=W+0x25;dy:SetFromByteArray(0x26,m.jump(dz:ToInt(),cL:ToInt()))Process.WriteMemory(W,dy)return function(_)if _ then Process.WriteMemory(cI,dw)Process.WriteMemory(cK+1,m.jump(cK:ToInt(),W:ToInt()))else Process.WriteMemory(cI,dx)Process.WriteMemory(cK+1,m.jump(cK:ToInt(),cM:ToInt()))end end end;local dA=dq()local dB=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local dC=Il2Cpp.Class.FromName(Q,"","MaterialsController")local dD=Il2Cpp.Class.FromName(Q,"","MVMaterialRepository")local dE=Il2Cpp.Class.FromName(Q,"","MVMaterial")local dF={}for dG,d in pairs(dD.Methods)do if d.ParamCount==1 and d.Name=="IsMaterialUnlocked"then local ag=d:GetParam(0).Name;if ag=="System.Byte"then dF[1]=l(d)+0x56 elseif ag=="System.Byte[]"then dF[2]=l(d)+0x90 end end end;local dH=l(dE:GetMethodFromName("get_IsAvailable",0))+0x5E;local dI={{ByteArray({0x8A,0x40,0x0C}),ByteArray({0xB0,0x01,0x90})},{ByteArray({0x32,0xC0}),ByteArray({0xB0,0x01})}}local cQ={ByteArray({0x7B}),ByteArray({0xEB})}local dJ={ByteArray({0x8A,0x7F,0x0C}),ByteArray({0xB7,0x01,0x90})}local dK=l(dC:GetMethodFromName("UpdateContent",0))+0x144;return function(_)local dL=nil;local dM={}local dN=nil;if _ then dL=dJ[2]dM[1]=dI[1][2]dM[2]=dI[2][2]dN=cQ[2]else dL=dJ[1]dM[1]=dI[1][1]dM[2]=dI[2][1]dN=cQ[1]end;Process.WriteMemory(dK,dL)Process.WriteMemory(dF[1],dM[1])Process.WriteMemory(dF[2],dM[2])Process.WriteMemory(dH,dN)end end;local dO=dB()local dP=function()local dQ={ByteArray({0xB8,0x00,0x00,0x00,0x00}),ByteArray({0x89,0x46,0x0C,0x90,0x90}),ByteArray({0xF3,0x0F,0x10,0x45,0x0C}),ByteArray({0xF3,0x0F,0x11,0x46,0x0C})}local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local dR=Il2Cpp.Class.FromName(Q,"","CubeModelPopup")local dS=dR:GetMethodFromName("OnModelScalePressed",1)local cI=l(dS)+0x99;local cJ=l(dS)+0XA1;return function(_,j)if _ then Primitives.SetFloat(dQ[1].Address+1,j)Process.WriteMemory(cI,dQ[1])Process.WriteMemory(cJ,dQ[2])else Process.WriteMemory(cI,dQ[3])Process.WriteMemory(cJ,dQ[4])end end end;local dT=dP()local dU=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local u=P:AssemblyOpen("UnityEngine.CoreModule.dll")local dV=u.Image;local dW=Il2Cpp.Class.FromName(Q,"","ESRotating")local dt=dW:GetMethodFromName("Execute",1)local dX=Il2Cpp.Class.FromName(dV,"UnityEngine","Vector3")local dY=dX:GetMethodFromName("get_up",0)local dZ=ByteArray({0x55,0x8B,0xEC,0x8B,0x45,0x08,0x8D,0x15,0x00,0x00,0x00,0x00,0xF3,0x0F,0x7E,0x02,0x8B,0x4A,0x08,0x66,0x0F,0xD6,0x00,0x89,0x48,0x08,0xC9,0xC3,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00})local cI=l(dt)+0x49B;local cJ=l(dY)local W=Process.Alloc(nil,dZ.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local d_=W+0x1D;local e0=m.jump(cI:ToInt(),W:ToInt())local e1=m.jump(cI:ToInt(),cJ:ToInt())Primitives.SetInt(dZ.Address+8,d_:ToInt())Process.WriteMemory(W,dZ)return function(_,e2)if _~=nil then if _ then Process.WriteMemory(cI+1,e0)else Process.WriteMemory(cI+1,e1)end end;if e2~=nil then Primitives.SetFloat(d_,e2[1])Primitives.SetFloat(d_+4,e2[2])Primitives.SetFloat(d_+8,e2[3])end end end;local e3=function()local e4=Il2Cpp.ResolveIcall("UnityEngine.Screen::SetResolution(System.Int32,System.Int32,UnityEngine.FullScreenMode,System.Int32)")local e5=ByteArray({0x55,0x8B,0xEC,0x8B,0x45,0x08,0x6A,0x00,0xFF,0x70,0x08,0xFF,0x70,0x04,0xFF,0x30,0xE8,0x00,0x00,0x00,0x00,0x83,0xC4,0x16,0xC9,0xC3})local bG=ByteArray(12)local W=Process.Alloc(nil,e5.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)e5:SetFromByteArray(0x11,m.jump(W:ToInt()+0x10,e4:ToInt()))Process.WriteMemory(W,e5)return function(e6,e7,e8)local e9=bG.Address;Primitives.SetInt(e9,e6)Primitives.SetInt(e9+4,e7)Primitives.SetInt(e9+8,e8)Process.Invoke(W,bG.Address)end end;local ea=e3()local eb=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local ec=Il2Cpp.Class.FromName(Q,"","MVBuildModeAvatarLocal/EditMode")local ed=ec:GetMethodFromName("MoveCharacter",1)local ee=l(ed)+0x21;local at={ByteArray({0x90,0xE9}),ByteArray({0x0F,0x84})}return function(_)if _ then Process.WriteMemory(ee,at[1])else Process.WriteMemory(ee,at[2])end end end;local ef=eb()local eg=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local eh=Il2Cpp.Class.FromName(Q,"","MVGameControllerBase")local ei=eh:GetMethodFromName("PostGameMsg",2)local ej=l(ei)+0x2D;local at={ByteArray({0xEB}),ByteArray({0x74})}return function(_)if _ then Process.WriteMemory(ej,at[1])else Process.WriteMemory(ej,at[2])end end end;local ek=eg()local el=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local em=Il2Cpp.Class.FromName(Q,"","MVNetworkGame")local en=em:GetMethodFromName("OnNotificationEventReceived",2)local eo=l(en)+0x2D;local at={ByteArray({0xEB}),ByteArray({0x74})}return function(_)if _ then Process.WriteMemory(eo,at[1])else Process.WriteMemory(eo,at[2])end end end;local ep=el()local eq=function()local P=Il2Cpp.Domain.MainDomain;local er=P:AssemblyOpen("Assembly-CSharp-firstpass.dll")local es=er.Image;local et=Il2Cpp.Class.FromName(es,"","Water")local eu=et:GetMethodFromName("CreateWaterObjects",3)local ev=et:GetMethodFromName("OnWillRenderObject",0)local ew=l(eu)+0xED;local ex=l(ev)+0x154;local ey=l(ev)+0x229;local ez=l(ev)+0x237;local at={ByteArray({0x90,0x90,0x90}),ByteArray({0x90,0x90,0x90,0x90,0x90,0x90}),ByteArray({0x0F,0x4C,0xF7}),ByteArray({0x0F,0x85,0xFA,0x07,0x00,0x00}),ByteArray({0x0F,0x95,0xC1}),ByteArray({0x0F,0x4C,0xC1})}return function(_)if _ then Process.WriteMemory(ew,at[1])Process.WriteMemory(ex,at[2])Process.WriteMemory(ey,at[1])Process.WriteMemory(ez,at[1])else Process.WriteMemory(ew,at[3])Process.WriteMemory(ex,at[4])Process.WriteMemory(ey,at[5])Process.WriteMemory(ez,at[6])end end end;local eA=eq()local eB=function()local u=b.FromName("UnityEngine.CoreModule.dll")local d9=u.GetClass("UnityEngine","Application")local eC=nil;return function()if eC==nil then local eD=d9.GetProperty("version").get()eC=tostring(eD.Chars)end;return eC end end;local eE=eB()local eF=function()local K=b.FromName("UnityEngine.CoreModule.dll")local eG=K.GetClass("UnityEngine","Time")return{["FPS"]=function(self)return 1.0/self["get_deltaTime"]()end,["get_deltaTime"]=function()local eH=eG.GetProperty("deltaTime").get()return eH end}end;local eI=eF()local eJ=function()local c8=b.FromName("Assembly-CSharp.dll")local bS=c8.GetClass("","MVGameControllerBase")local eK=nil;local eL=nil;return function()if eK==nil then eK=bS.GetProperty("Game").get()end;if eL==nil then eL=eK.GetProperty("Peer").get()end;local eM=eL.GetProperty("RoundTripTime").get()return eM end end;local eN=eJ()local function eO()local c8=b.FromName("Assembly-CSharp.dll")local eP=c8.GetClass("","TextCommand")return function(eQ)eP.GetMethod("NotifyUser",{"System.String"})(tostring(eQ))end end;local eR=eO()local eS=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local dW=Il2Cpp.Class.FromName(Q,"","ESRotating")local eT=Il2Cpp.Class.FromName(Q,"","ESTranslate")local eU=Il2Cpp.Class.FromName(Q,"","ESInsert")local eV=dW:GetMethodFromName("DoGridSnapping",0)local eW=eT:GetMethodFromName("Enter",1)local eX=eU:GetMethodFromName("ComputeSnapPosition",2)local eY=l(eV)+0xB5+4;local eZ=l(eW)+0x1AF+4;local e_=l(eX)+0x6F+4;local f0=Primitives.NewFloat(0.0625)local f1=ByteArray(4)Primitives.SetPointer(f1.Address,f0.Address)Process.WriteMemory(eY,f1)Process.WriteMemory(eZ,f1)Process.WriteMemory(e_,f1)return function(j)Primitives.SetFloat(f0,j)end end;local f2=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local f3=Il2Cpp.Class.FromName(Q,"","GizmoController")local eX=f3:GetMethodFromName("Handle",1)local f4=l(eX)+0x1BF+3;local f5=ByteArray(4)return function(j)Primitives.SetFloat(f5,j)Process.WriteMemory(f4,f5)end end;local f6=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local f7=Il2Cpp.Class.FromName(Q,"","WinningConditionControl")local f8=f7:GetMethodFromName("TryGetPrioritizedStat",1)local f9=l(f8)+0x4E+2;local fa=ByteArray(1)return function(_)Primitives.SetBool(fa,_)Process.WriteMemory(f9,fa)end end;local fb=f6()local fc=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local fd=Il2Cpp.Class.FromName(Q,"","SelectionController")local fe=fd:GetMethodFromName("DeSelectAll",0)local ff=fd:GetMethodFromName("DeSelectAllExcept",1)local fg=l(fe)local fh=l(ff)local at={ByteArray({0xC3}),ByteArray({0x55})}return function(_)if _ then Process.WriteMemory(fg,at[1])Process.WriteMemory(fh,at[1])else Process.WriteMemory(fg,at[2])Process.WriteMemory(fh,at[2])end end end;local fi=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local eT=Il2Cpp.Class.FromName(Q,"","ESTranslate")local fe=eT:GetMethodFromName("GetDeltaMouse",1)local fj=l(fe)+0x3F1+4;local fk=l(fe)+0x40A+4;local fl=l(fe)+0x31B+4;local fm=Primitives.NewFloat(0.005)local f1=ByteArray(4)Primitives.SetPointer(f1.Address,fm.Address)Process.WriteMemory(fj,f1)Process.WriteMemory(fk,f1)Process.WriteMemory(fl,f1)return function(j)Primitives.SetFloat(fm,j)end end;local fn=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local fo=Il2Cpp.Class.FromName(Q,"","DeathUIBoostMenuController")local fp=fo:GetMethodFromName("Update",0)local fq=l(fp)+0x288;local fr={ByteArray({0x90,0x90,0x90,0x90,0x90,0x90}),ByteArray({0x0F,0x82,0xD5,0x00,0x00,0x00})}return function(_)if _ then Process.WriteMemory(fq,fr[1])else Process.WriteMemory(fq,fr[2])end end end;local fs=fn()local ft=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local fu=Il2Cpp.Class.FromName(Q,"","MVBuildModeAvatarLocal/EditMode")local fv=fu:GetMethodFromName("AvatarCommandsBuildModeOnEnterBuildStateEvent",2)local fo=Il2Cpp.Class.FromName(Q,"","ESCubeEdit")local eW=fo:GetMethodFromName("Enter",1)local fw=l(eW)+0x8D7;local fx=l(fv)+0x410;local fy={ByteArray({0x6A,0x01}),ByteArray({0x6A,0x00})}return function(_)if _ then local q=fy[2]Process.WriteMemory(fw,q)Process.WriteMemory(fx,q)else local q=fy[1]Process.WriteMemory(fw,q)Process.WriteMemory(fx,q)end end end;local fz=ft()local fA=function()local P=Il2Cpp.Domain.MainDomain;local s=P:AssemblyOpen("Assembly-CSharp.dll")local Q=s.Image;local fB=Il2Cpp.Class.FromName(Q,"","MVBuildModeAvatarLocal/EditMode")local fC=fB:GetMethodFromName("FrameUpdate",1)local fD=fB:GetMethodFromName("GetMovementVelocity",0)local fE=l(fC)+0x38;local cJ=l(fD)local fF=ByteArray({0x55,0x89,0xE5,0x53,0x51,0x8B,0x45,0x0C,0x8D,0x1D,0x2E,0x00,0x00,0x00,0x8B,0x0B,0x89,0x48,0x44,0x8B,0x4B,0x04,0x89,0x48,0x48,0x6A,0x00,0x50,0xFF,0x75,0x08,0xE8,0xDC,0xFF,0xFF,0xFF,0x83,0xC4,0x0C,0x8B,0x45,0x08,0x59,0x5B,0xC9,0xC3,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x40})local fG=ByteArray(4)local W=Process.Alloc(nil,fF.Length,Process.AllocationType.COMMIT|Process.AllocationType.RESERVE,Process.MemoryProtection.EXECUTE_READWRITE)local e0=m.jump(W:ToInt()+0X1F,cJ:ToInt())fF:SetFromByteArray(0x20,e0)Primitives.SetInt(fF.Address+0xA,W:ToInt()+0x2E)local e1=m.jump(fE:ToInt(),W:ToInt())local fH=m.jump(fE:ToInt(),cJ:ToInt())Process.WriteMemory(W,fF)return function(_,fI)if _~=nil then if _ then Process.WriteMemory(fE+1,e1)else Process.WriteMemory(fE+1,fH)end end;if fI~=nil then Primitives.SetFloat(fG,fI[1])Process.WriteMemory(W+0x2E,fG)Primitives.SetFloat(fG,fI[2])Process.WriteMemory(W+0x2E+4,fG)end end end;local fJ=fA()local fK=function()local fL={}fL.Checked=false;fL.Clicked=false;return fL end;local B={["checkbox1"]=fK(),["checkbox2"]=fK(),["checkbox3"]=fK(),["checkbox4"]=fK(),["checkbox5"]=fK(),["checkbox6"]=fK(),["checkbox7"]=fK(),["checkbox8"]=fK(),["checkbox9"]=fK(),["checkbox13"]=fK(),["checkbox14"]=fK(),["checkbox15"]=fK(),["checkbox16"]=fK(),["checkbox17"]=fK(),["checkbox18"]=fK(),["inputfloat1"]={["Value"]=1,["Style.Width"]=70,["Format"]="%.2f"},["dragint1"]={["Value"]=60,["Style.Width"]=120,["Min"]=0},["inputfloat2"]={["Value"]=4,["Style.Width"]=70,["Format"]="%.2f"},["inputfloat3"]={["Value"]=3,["Style.Width"]=70,["Format"]="%.2f"},["inputint1"]={["Value"]=1280,["Style.Width"]=90},["inputint2"]={["Value"]=780,["Style.Width"]=90},["comboxbox1"]={["Items"]={"ExclusiveFullScreen","FullScreenWindow","MaximizedWindow","Windowed"},["SelectItem"]="Windowed",["SelectIndex"]=3},["plotlines1"]={["Values"]={}},["plotlines2"]={["Values"]={}},["inputfloat4"]={["Value"]=0.0625,["Style.Width"]=100,["Format"]="%.6f"},["inputfloat5"]={["Value"]=15,["Style.Width"]=100,["Format"]="%.2f"},["inputfloat6"]={["Value"]=0.005,["Style.Width"]=100,["Format"]="%.5f"},["inputfloat7"]={["Value"]=2,["Style.Width"]=100,["Format"]="%.2f"},["inputfloat8"]={["Value"]=2,["Style.Width"]=100,["Format"]="%.2f"},["textinput1"]={["Text"]="",["Width"]=250},["textinput2"]={["Text"]="",["Width"]=250}}local fM={["timing"]=0,["fps_value"]=0,["ping_value"]=0,["fps_values_index"]=0,["fps_values_len"]=30,["ping_values_index"]=0,["ping_values_len"]=30}local bx=5;local fN=function()d7:Render(function(fO)if fO then local fP=B.checkbox1;local fQ=B.checkbox2;local fR=B.inputfloat1;local fS=B.dragint1;local fT=B.checkbox3;local fU=B.checkbox4;local fV=B.comboxbox1;local fW=B.checkbox5;local fX=B.inputfloat2;local fY=B.inputfloat3;local fZ=B.inputint1;local f_=B.inputint2;local g0=B.checkbox6;local g1=B.checkbox7;local g2=B.checkbox8;local g3=B.checkbox9;local g4=B.plotlines1;local g5=B.plotlines2;local g6=B.inputfloat4;local g7=B.inputfloat5;local g8=B.checkbox13;local g9=B.checkbox14;local ga=B.inputfloat6;local gb=B.checkbox15;local gc=B.inputfloat7;local gd=B.inputfloat8;local ge=B.checkbox16;local cj=B.textinput1;local gf=B.textinput2;local gg=B.checkbox17;local gh=B.checkbox18;if GUI.CollapsingHeader("Build##collapsingheader_Build")then GUI.CheckBox("##checkbox1",fP)if fP.Clicked then dp(fP.Checked)end;GUI.SameLine()GUI.Label("No Build Limit")GUI.CheckBox("##checkbox2",fQ)if fQ.Clicked then dO(fQ.Checked)end;GUI.SameLine()GUI.Label("Free Materials")GUI.CheckBox("##checkbox3",fT)if fT.Clicked then dA(fT.Checked)end;GUI.SameLine()GUI.Label("Custom Face Model")GUI.CheckBox("##checkbox4",fU)if fU.Clicked and not fU.Checked then dT(false,0)end;GUI.SameLine()GUI.Label("Custom Model Size")if fU.Checked then GUI.Label("Model Size")GUI.SameLine()GUI.InputFloat("##inputfloat1",fR)if fR.Changed then if fR.Value>0 and fR.Value<50 then dT(true,fR.Value)end end end;GUI.CheckBox("##checkbox5",fW)GUI.SameLine()GUI.Label("Rotation Custom")if fW.Clicked then if fW.Checked then eR("< X > Press to rotate model on an X axis\n< Y > Press to rotate model on an Y axis\n< Z > Press to rotate model on an Z axis")end;RotationType(fW.Checked)end;if fW.Checked then if Process.KeyIsDown(90)then RotationType(nil,{0,1,0})elseif Process.KeyIsDown(89)then RotationType(nil,{1,0,0})elseif Process.KeyIsDown(88)then RotationType(nil,{0,0,1})end end;d4:OnGUI()GUI.CheckBox("##checkbox6",g0)GUI.SameLine()GUI.Label("Free Edit Speed Movement")if g0.Clicked then ef(g0.Checked)end;cW:OnGUI()GUI.Label("Custom Grid")GUI.SameLine()GUI.InputFloat("##inputfloat4",g6)if g6.Changed and g6.Value>0 then GridFree(g6.Value)end;GUI.Label("Rotation Custom Speed")GUI.SameLine()GUI.InputFloat("##inputfloat5",g7)if g7.Changed and g7.Value>0 then RotationSpeedCustom(g7.Value)end;GUI.CheckBox("##checkbox14",g9)GUI.SameLine()GUI.Label("MultiSelect BETA")if g9.Clicked then MultiSelect(g9.Checked)end;GUI.Label("Custom Speed Translate")GUI.SameLine()GUI.InputFloat("##inputfloat6",ga)if ga.Changed and ga.Value>0 and ga.Value<0.5 then TranslateSpeedCustom(ga.Value)end;GUI.CheckBox("##checkbox15",gb)GUI.SameLine()GUI.Label("Edit Mode Speed Hack")if gb.Clicked then fJ(gb.Checked,nil)end;if gb.Checked then GUI.Label("Y Speed")GUI.SameLine()GUI.InputFloat("##inputfloat7",gc)GUI.Label("XZ Speed")GUI.SameLine()GUI.InputFloat("##inputfloat8",gd)if gc.Changed or gd.Changed then fJ(nil,{math.min(gc.Value,20),math.min(gd.Value,20)})end end;GUI.CheckBox("##checkbox18",gh)GUI.SameLine()GUI.Label("Model Edit No Background")if gh.Clicked then fz(gh.Checked)end;cX:OnGUI()bP.OnGUI()end;if GUI.CollapsingHeader("PvP##collapsingheader_PvP")then GUI.Label("FPS")GUI.SameLine()GUI.DragInt("##dragint1",fS)if fS.Changed then if fS.Value>15 then df.Application_set_targetFrameRate(fS.Value)df.QualitySettings_set_vSyncCount(0)end end;GUI.Label("Aspect Ration")GUI.SameLine()GUI.InputFloat("##inputfloat2",fX)GUI.SameLine()GUI.Label(" : ")GUI.SameLine()GUI.InputFloat("##inputfloat3",fY)GUI.SameLine()if GUI.Button("OK##button1")then if fX.Value>0 and fY.Value>0 then dh(fX.Value/fY.Value)end end;GUI.Label("Resolution")GUI.SameLine()GUI.InputInt("##inputint1",fZ)GUI.SameLine()GUI.Label(" x ")GUI.SameLine()GUI.InputInt("##inputint2",f_)GUI.ComboBox("##comboxbox1",fV)GUI.SameLine()if GUI.Button("OK##button2")then if fZ.Value>0 and f_.Value>0 then ea(fZ.Value,f_.Value,fV.SelectIndex)end end;GUI.CheckBox("##checkbox13",g8)GUI.SameLine()GUI.Label("Kill Count")if g8.Clicked then fb(g8.Checked)end;GUI.CheckBox("##checkbox17",gg)GUI.SameLine()GUI.Label("Fast Respawn")if gg.Clicked then fs(gg.Checked)end;cV:OnGUI()end;if GUI.CollapsingHeader("Texture##collapsingheader_PvP")then d2:OnGUI()d3:OnGUI()end;if GUI.CollapsingHeader("Interface##collapsingheader_Interface")then cT:OnGUI()GUI.CheckBox("##checkbox7",g1)GUI.SameLine()GUI.Label("No Chat")if g1.Clicked then ek(g1.Checked)end;GUI.CheckBox("##checkbox8",g2)GUI.SameLine()GUI.Label("No Notification")if g2.Clicked then ep(g2.Checked)end;cY:OnGUI()cZ:OnGUI()end;if GUI.CollapsingHeader("Quality##collapsingheader_Quality")then GUI.CheckBox("##checkbox9",g3)GUI.SameLine()GUI.Label("Water Reflective")if g3.Clicked then eA(g3.Checked)end;c_:OnGUI()d1:OnGUI()cU:OnGUI()d0:OnGUI()end;fM.timing=fM.timing+eI["get_deltaTime"]()if fM.timing>0.3 then fM.fps_value=eI:FPS()fM.ping_value=eN()fM.timing=0;if fM.fps_values_index<fM.fps_values_len then fM.fps_values_index=fM.fps_values_index+1;g4.Values[fM.fps_values_index]=fM.fps_value else for c3=1,fM.fps_values_len-1,1 do g4.Values[c3]=g4.Values[c3+1]end;g4.Values[fM.fps_values_len]=fM.fps_value end;if fM.ping_values_index<fM.ping_values_len then fM.ping_values_index=fM.ping_values_index+1;g5.Values[fM.ping_values_index]=fM.ping_value else for c3=1,fM.ping_values_len-1,1 do g5.Values[c3]=g5.Values[c3+1]end;g5.Values[fM.ping_values_len]=fM.ping_value end end;if GUI.CollapsingHeader("Config and Info##collapsingheader_Config_And_Info")then GUI.CheckBox("##checkbox16",ge)GUI.SameLine()if ge.Checked then GUI.Label("Light")else GUI.Label("Dark")end;if ge.Clicked then if ge.Checked then d7:StyleLight()else d7:StyleDark()end end;GUI.Label(string.format("FPS: %.0f",fM.fps_value))GUI.SameLine()GUI.PlotLines("##plotlines1",g4)GUI.Label(string.format("Ping: %dms",fM.ping_value))GUI.SameLine()GUI.PlotLines("##plotlines2",g5)GUI.Label("KoGaMa Version: "..eE())GUI.Label("Helper: Henrique and Pipocalio")GUI.Label("Created By Maury")end;do cY:Callback()cX:Callback()cZ:Callback()bP.Callback()end else bx=bx-1;if bx==0 then Unity.UnregisterInUpdate(tostring(d7))end end end)end;Unity.RegisterInOneUpdate(function()eR("Welcome to KoGaMa Plugin 4.5.1")d7=Window("KoGaMa Plugin")local bz=Size(400,300)d7.Size=bz;Unity.RegisterInUpdate(tostring(d7),fN)end)end
